{"version":3,"sources":["/Users/yangqianjun/Documents/project/e-kit/ekit/packages/actions/src/actions.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/ajax/src/axios.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/ajax/src/consts.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/ajax/src/graphql.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/ajax/src/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/ajax/src/new-ajax.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/async/src/consts.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/async/src/asyncModel.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/async/src/useAsync.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/async/src/Async.tsx","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/async/src/useAsyncStatus.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/async/src/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/async/__tests__/Example.tsx","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/async/README.mdx","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/event-center/src/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/event/src/EventWrapper.tsx","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/event/src/event.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/event/src/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/event/src/useEvent.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/model-factory/src/consts.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/model-factory/src/factory.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/model-factory/src/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/model-factory/src/types/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/model-factory/src/utils/async.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/model-factory/src/utils/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/model-factory/src/utils/putWrapper.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/model/src/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/redux-model/src/cm.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/redux-model/src/createModel.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/redux-model/src/effectWrapper.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/redux-model/src/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/redux-model/src/promiseMiddleware.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/use-model/src/effectWrapper.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/use-model/src/index.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/use-model/src/m.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/use-model/src/mm.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/use-model/src/types.ts","/Users/yangqianjun/Documents/project/e-kit/ekit/packages/use-model/src/useModel.ts"],"names":["createAction","action","create","timeout","withCredentials","headers","emptyFunc","error","resp","response","err","code","status","message","data","statusText","Cancel","AjaxCancelCode","AjaxErrorCode","emit","promiseFactory","AjaxCancelMessage","GraphQLErrorCode","resolve","reject","prom","Promise","rs","rj","extractCodeAndMessage","errors","reduce","res","statusCode","testUser","location","parse","search","split","url","options","this","request","query","variables","opt","others","body","JSON","stringify","undefined","config","method","cancel","cancelToken","CancelToken","c","then","length","result","onStatusError","setHeaders","setHeader","key","value","GraphQLClient","autoCatch","ajax","path","basePath","form","header","extra","toLowerCase","cancelRequest","internalCancel","indexOf","replace","params","check","name","WrappedFetch","ASYNC_EFFECT_EVENT_NAME","AEE","ASYNC_ID","getAsyncId","confirmedPayloadCreator","payload","fetch","onError","onSuccess","callback","id","model","M","namespace","state","asyncStatus","reducers","doAsyncStart","concat","errorMsg","successMsg","isFetch","confirmed","doAsyncConfirmedStart","isNew","newStatus","map","modalProps","formProps","push","doAsyncEnd","responseInAction","isSuccess","forceSetFetchStatus","queue","successMsgInStore","errorMsgInStore","isModal","isEffectEnd","type","defaultMsg","customMsg","storeMsg","msg","e","EventCenter","visible","doClearModal","filter","effects","doAsync","a","tPut","clear","actions","afterClose","silent","doAsyncConfirmed","paramsGenerator","extraParams","mergedParams","generatedParams","apply","Array","isArray","isParamsArray","isExtraPramssArray","Error","pl","doAsyncCancel","asyncModel","useAsync","useModel","asyncFormater","useCallback","handleCancel","onCancel","newProps","className","content","renderForm","getForm","f","onOk","submit","values","all","newActions","Async","props","Loading","loading","Modal","modal","Form","tips","SL","sharedLoading","useMemo","useEffect","handler","args","setTimeout","on","off","call","effectName","loadingCount","indicator","confirmLoading","useAsyncStatus","selector","useState","setStatus","newStatusList","statusList","find","statusListSelector","wrapper","cb","p","window","__TKIT_USE_MODEL_LOGGER__","console","log","FormFaker","fakeData","React","Component","loadData","timer","clearTimeout","Example","arg","spinning","onClick","title","StatusFaker","FormCoreFaker","ModalFaker","ResultTypeFaker","AsyncFaker","AsyncConfirmedFaker","layoutProps","MDXContent","components","mdxType","parentName","of","__position","__code","__scope","Props","Playground","__codesandbox","isMDXComponent","observerList","event","observer","removeListener","once","info","componentWillUnmount","forEach","render","Cp","originProps","PureComponent","EventWrapper","useEvent","fn","defaultEffectOptions","ms","EFFECTS_START","EFFECTS_END","EFFECTS_ERROR","EFFECTS_SUCCESS","EFFECTS_MSG","fakeEffectRes","EFFECTS_PROMISE_RESOLVE","EFFECTS_PROMISE_REJECT","TKIT_EFFECT","TKIT_NB_EFFECT","TKIT_SUB_EFFECT","TKIT_DISPATCH","TKIT_GET_STATE","markSubEffect","noop","fakeUtilsThrowErrorIfInvoked","printError","modern","effectFactory","reducersMap","TYPES","Object","keys","doSomething","produce","draftState","doSomethingAsync","effect","effectOptions","handleActions","__model","FakeEffectFactory","getMsg","interactEffect","r","asyncPayload","channel","getRes","getResolver","getEffect","put","MM","CM","promiseMiddleware","m","sagaEffects","globalPut","wrappedPut","putWrapper","wrappedNBPut","createModel","TypedEffects","tNBPut","tCall","asyncSelect","asyncPut","asyncNBPut","ReduxModel","wrappedEffect","effectWrapper","throttle","sagas","creator","ActionNameMap","isTopEffect","act","wrappedNBDispatch","mayBePromise","cancelled","isCancelled","dispatch","getState","next","maybePromise","Model","localOpts","local","bindDispatchToAction","modelEffects","wrappedEffects","wrappedDiaptch","blockingDispatch","wrappedTopPut","nonBlockingDispatch","wrappedTopNBPut","effectsUtils","actionName","originEffect","opts","commonReducer","reducer","initialState","useReducer","store","isNotUnmounted","useRef","current"],"mappings":"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","file":"static/js/packages-async-readme.74b4c814.js","sourcesContent":["import { action } from 'typesafe-actions';\n\nexport const createAction = action;\nexport * from 'redux-actions';\nexport { Action } from 'redux-actions';\nexport interface ActionWithPayload<P> {\n  type: string;\n  payload: P;\n}\n","/**\n * @author: yangqianjun\n * @file: axios封装\n * @Date: 2019-09-02 15:15:27\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-01-08 18:28:58\n */\nimport axios, { AxiosError, Cancel } from 'axios';\nimport EventCenter from '@ekit/event-center';\nimport { AjaxCancelCode, AjaxErrorCode } from './consts';\n\n// @cc: axios 默认配置，可在此处修改\nexport default axios.create({\n  timeout: 5000,\n  withCredentials: true,\n  headers: {}\n});\n\nexport const emptyFunc = () => void 0;\n\n/** 检测 axios 响应状态 */\nexport function onStatusError(error: AxiosError | Error | Cancel) {\n  const resp = 'response' in error && error.response;\n  // IMP: 400客户端错误可能有response.data\n  const err = resp\n    ? {\n        code: resp.status,\n        message: resp.data && resp.data.message ? resp.data.message : resp.statusText\n      }\n    : {\n        code: error instanceof axios.Cancel ? AjaxCancelCode : AjaxErrorCode,\n        message: error.message\n      };\n  if (err.code === 401 || err.code === 403) {\n    EventCenter.emit('common.user.status', err);\n  }\n  return err;\n}\n\nexport { promiseFactory } from './consts';\n","/**\n * @author: yangqianjun\n * @file: ajax 常量\n * @Date: 2019-12-06 18:32:12\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-01-08 18:31:51\n */\n\nimport { TkitUtils } from '@ekit/types';\n\n/** 取消请求错误码 */\nexport const AjaxCancelCode = 10499;\nexport const AjaxCancelMessage = 'AJAX_CANCEL_MESSAGE';\n\n/** 默认Ajax错误码  */\nexport const AjaxErrorCode = 10001;\n\n/** 无法确认的 Graphql 错误码 */\nexport const GraphQLErrorCode = 10002;\n\nexport interface TkitAbstractAjaxResult<R> {\n  /**\n   * 后端返回的错误码或者提取非200的http状态码\n   */\n  code?: number;\n  /**\n   * 后端返回的错误信息\n   */\n  message?: string | number | null;\n  /**\n   * 后端返回的数据结构\n   */\n  result?: R;\n}\nexport type TkitAjaxResult = TkitAbstractAjaxResult<any>;\nexport type TkitAjaxFunction = TkitUtils.AbstractAsyncFunction<TkitAjaxResult>;\nexport const promiseFactory = <T>() => {\n  let resolve!: (value?: T | PromiseLike<T> | undefined) => void, reject!: (reason?: any) => void;\n  const prom = new Promise<T>((rs, rj) => {\n    resolve = rs;\n    reject = rj;\n  });\n  const rj = { reject, resolve };\n  return [rj, prom] as [typeof rj, typeof prom];\n};\n","/**\n * @author: yangqianjun\n * @file: thanks for https://github.com/prisma-labs/graphql-request\n * @Date: 2019-10-30 16:38:27\n * @LastEditors: yangqianjun\n * @LastEditTime: 2019-12-27 13:35:19\n */\n\nimport qs from 'qs';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { GraphQLErrorCode } from './consts';\nimport { onStatusError, emptyFunc } from './axios';\nimport { ExtraFetchParams } from './new-ajax';\n\nexport interface Variables {\n  [key: string]: any;\n}\n\nexport interface Headers {\n  [key: string]: string;\n}\n\nexport interface GraphQLError {\n  message:\n    | string\n    | {\n        /** http status */\n        statusCode: number;\n        error: string;\n      };\n  locations: { line: number; column: number }[];\n  path: string[];\n}\n\nexport interface GraphQLResponse {\n  data?: any;\n  errors?: GraphQLError[];\n  extensions?: any;\n}\n\n/** 提取错误信息、错误码 */\nexport function extractCodeAndMessage(errors: GraphQLError[]) {\n  return errors.reduce(\n    (res, { message }) => {\n      if (typeof message === 'string') {\n        res.message = (res.message ? `${res.message}\\n` : res.message) + message;\n      } else {\n        const { error, statusCode } = message;\n        if (statusCode === 401 || (statusCode === 403 && res.code !== 401)) {\n          res.code = statusCode;\n        }\n        res.message += `${error}\\n`;\n      }\n      return res;\n    },\n    {\n      code: GraphQLErrorCode,\n      message: ''\n    }\n  );\n}\nconst testUser =\n  typeof location !== 'undefined' && qs.parse(location.search.split('?')[1]).testUser;\nexport class GraphQLClient {\n  private url: string;\n  private options: AxiosRequestConfig;\n\n  public constructor(url: string, options?: AxiosRequestConfig) {\n    this.url = url;\n    this.options = options || {};\n  }\n\n  public async request<T extends any>(\n    query: string,\n    variables?: Variables,\n    opt?: ExtraFetchParams\n    // IMP: 兼容 new-ajax.ts 设计\n  ): Promise<any> {\n    const { headers, ...others } = this.options;\n\n    const body = JSON.stringify({\n      query,\n      variables: variables ? variables : undefined\n    });\n    const config: AxiosRequestConfig = {\n      url: this.url,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers,\n        // 调用时优先级更高\n        ...(opt && opt.headers)\n      },\n      data: body,\n      ...others\n    };\n    if (testUser) {\n      config.headers['Test-User'] = testUser;\n    }\n    const cancel = opt && opt.cancel;\n    if (cancel) {\n      config.cancelToken = new axios.CancelToken(c => {\n        cancel.then(c, emptyFunc);\n      });\n    }\n\n    return axios.request(config).then((res: AxiosResponse<GraphQLResponse>) => {\n      if (res.status === 200 && res.data && (!res.data.errors || !res.data.errors.length)) {\n        return {\n          code: 0,\n          result: res.data.data\n        };\n      }\n      return {\n        result: res.data && res.data.data,\n        ...extractCodeAndMessage(res.data.errors || [])\n      };\n    }, onStatusError);\n  }\n\n  public setHeaders(headers: AxiosRequestConfig['headers']): GraphQLClient {\n    this.options.headers = headers;\n\n    return this;\n  }\n\n  public setHeader(key: string, value: string): GraphQLClient {\n    const { headers } = this.options;\n\n    if (headers) {\n      headers[key] = value;\n    } else {\n      this.options.headers = { [key]: value };\n    }\n    return this;\n  }\n}\n\nexport async function request<T extends any>(\n  url: string,\n  query: string,\n  variables?: Variables,\n  opt?: ExtraFetchParams\n): Promise<{ code: number; message?: any; result?: T }> {\n  const client = new GraphQLClient(url);\n\n  return client.request<T>(query, variables, opt);\n}\n\nexport default request;\n","/**\n * @author: yangqianjun\n * @file: ajax统一封装\n * @Date: 2019-11-21 15:26:02\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-01-08 18:39:44\n */\n\nimport ajax from './new-ajax';\n\nexport * from './axios';\nexport * from './new-ajax';\nexport * from './graphql';\nexport default ajax;\nexport {\n  AjaxCancelCode,\n  AjaxErrorCode,\n  GraphQLErrorCode,\n  TkitAbstractAjaxResult,\n  TkitAjaxResult,\n  TkitAjaxFunction,\n  AjaxCancelMessage\n} from './consts';\n","/**\n * @author: yangqianjun\n * @file: ajax封装\n * @Date: 2019-11-21 15:25:51\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 20:38:12\n */\nimport qs from 'qs';\nimport axios from 'axios';\nimport axiosInst, { onStatusError, emptyFunc } from './axios';\nimport { promiseFactory } from './consts';\n\n/** 不再兼容非标准的数据结构 */\nexport declare type AjaxPromise<R> = Promise<R>;\n/** 非标准包裹 */\nexport declare type NonStandardAjaxPromise<R> = Promise<{\n  code?: number;\n  message?: string;\n  result: R;\n}>;\n\nexport interface ExtraFetchParams {\n  /** extra data for extends */\n  extra?: any;\n  /** 扩展请求头 */\n  headers?: any;\n  /** cancel request */\n  cancel?: Promise<string | undefined>;\n}\n\nexport interface WrappedFetchParams extends ExtraFetchParams {\n  /** http method */\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'OPTIONS' | 'PATCH' | 'HEAD';\n  url: string;\n  /** post json data */\n  data?: any;\n  /** post form data */\n  form?: any;\n  /** query data */\n  query?: any;\n  /** header */\n  header?: any;\n  /** path data */\n  path?: any;\n}\nconst testUser =\n  typeof location !== 'undefined' && qs.parse(location.search.split('?')[1]).testUser;\nexport class WrappedFetch {\n  /** ajax 方法 */\n  public ajax(\n    { method, url, data, form, query, header, extra, cancel, headers }: WrappedFetchParams,\n    path?: string,\n    basePath?: string\n  ) {\n    let config = {\n      ...extra,\n      method: method.toLowerCase(),\n      headers: { ...headers, ...header }\n    };\n    if (testUser) {\n      config.headers['Test-User'] = testUser;\n    }\n    // json\n    if (data) {\n      config = {\n        ...config,\n        headers: {\n          // 可覆盖\n          'Content-Type': 'application/json',\n          ...config.headers\n        },\n        data\n      };\n    }\n    // form\n    if (form) {\n      config = {\n        ...config,\n        headers: {\n          // 可覆盖\n          'Content-Type': 'application/x-www-form-urlencoded',\n          ...config.headers\n        },\n        data: qs.stringify(form)\n      };\n    }\n    const [{ resolve: cancelRequest }, internalCancel] = promiseFactory<string>();\n    config.cancelToken = new axios.CancelToken(c => {\n      // 外部\n      cancel && cancel.then(c, emptyFunc);\n      // 内部自动取消\n      internalCancel.then(c, emptyFunc);\n    });\n    let prom: Promise<any> = axiosInst\n      .request({\n        ...config,\n        url: testUser\n          ? url.indexOf('?') === -1\n            ? `${url}?testUser=${testUser}`\n            : url.replace('?', () => `?testUser=${testUser}`)\n          : url,\n        params: query\n      })\n      .then(res => res.data);\n    if (this.autoCatch) {\n      prom = prom.catch(onStatusError);\n    }\n    // IMP: 修复 tkit/service 设计上的硬伤\n    prom['cancel'] = cancelRequest;\n    return prom as Promise<any>;\n  }\n\n  /** 接口传参校验 */\n  public check<V>(value: V, name: string) {\n    if (value === null || value === undefined) {\n      const msg = `[ERROR PARAMS]: ${name} can't be null or undefined`;\n      // 非生产环境，直接抛出错误\n      if (process.env.NODE_ENV === 'development') {\n        throw Error(msg);\n      }\n    }\n  }\n\n  /**\n   * 是否默认 catch ajax 错误，默认开启，设置为 false，关闭 catch\n   */\n  public autoCatch = true;\n}\n\nexport default new WrappedFetch();\n","/**\n * @author: yangqianjun\n * @file: async常量\n * @Date: 2019-09-11 11:02:36\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 15:44:31\n */\n\nimport { ASYNC_EFFECT_EVENT_NAME as AEE } from '@ekit/model-factory';\nimport { AsyncModelType } from './asyncModel';\n\nexport const ASYNC_EFFECT_EVENT_NAME = AEE;\nexport interface AsyncEffectEventType {\n  type: keyof AsyncModelType['actions'];\n  payload: any;\n}\n\nexport const ASYNC_RESULT_EVENT_NAME = 'ASYNC_RESULT_EVENT_NAME';\nexport interface AsyncResultEventType {\n  /**\n   * 副作用信息类型\n   */\n  type: 'error' | 'success';\n  /**\n   * 副作用提示信息\n   */\n  message: React.ReactNode;\n}\n\n/** 异步队列变化事件 */\nexport const ASYNC_STATUS_CHANGE_NAME = 'ASYNC_STATUS_CHANGE_NAME';\n","/**\n * @author: yangqianjun\n * @file: 异步操作模型\n * @Date: 2019-11-19 16:14:12\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 15:55:19\n */\n\n/* eslint-disable @typescript-eslint/no-angle-bracket-type-assertion */\nimport { M, Tction, IAsyncConfirmedMsg, BaseEffectsUtils } from '@ekit/use-model';\nimport { TkitAjaxFunction, AjaxCancelCode } from '@ekit/ajax';\nimport { TkitUtils } from '@ekit/types';\nimport { EventCenter } from '@ekit/event';\nimport { ASYNC_RESULT_EVENT_NAME, AsyncResultEventType } from './consts';\n\nexport interface AsyncForm {\n  /** Form表单组件必须实现submit方法，submit 方法需返回表单 values 对象或者 Promise<values> */\n  submit: (...args: any) => any;\n  [other: string]: any;\n}\n\nexport interface AsyncFormProps {\n  /** Form表单组件需支持getForm Props，并通过该回调传递组件实例 */\n  getForm?: (f: AsyncForm | null) => any;\n  [other: string]: any;\n}\n\nexport interface AsyncModalProps {\n  /** 是否显示Modal */\n  visible?: boolean;\n  /** 标题 */\n  title?: React.ReactNode;\n  /** 内容 */\n  content?: React.ReactNode;\n  className?: string;\n  /** 确定时显示loading效果 */\n  confirmLoading?: boolean;\n  /** 点击确定按钮回调 */\n  onOk?: (...args: any) => Promise<any> | void;\n  /** 点击取消按钮回调 */\n  onCancel?: (...args: any) => Promise<any> | void;\n  /** Modal 完全关闭后的回调 */\n  afterClose?: (...args: any) => any;\n  [other: string]: any;\n}\n\n/** 无参数情形下，返回空数组 - never向下兼容 */\nexport type EnsureArgumentsType<F extends TkitAjaxFunction> = TkitUtils.GetArgumentsType<\n  F\n> extends []\n  ? [] | never\n  : TkitUtils.GetArgumentsType<F>;\n\n/** 仅一个参数情形下，返回第一个参数类型 */\nexport type EnsureSingleArgumentsType<F extends TkitAjaxFunction> = TkitUtils.GetArgumentsType<\n  F\n>[1] extends undefined | never\n  ? TkitUtils.GetArgumentsType<F>[0]\n  : never;\n\n/** 获取第一个参数类型 */\n\nexport interface NewAsyncParams<F extends TkitAjaxFunction> extends IAsyncConfirmedMsg {\n  /** F 仅接收一个参数适用 */\n  params?: EnsureSingleArgumentsType<F>;\n  /** 回调 */\n  callback?: (res: TkitUtils.GetReturnTypeOfAsyncFun<F>) => any;\n  /** 取消回调 */\n  onCancel?: () => any;\n  /** 错误回调 */\n  onError?: (res: TkitUtils.GetReturnTypeOfAsyncFun<F>) => any;\n  /** 成功回调 */\n  onSuccess?: (res: TkitUtils.GetReturnTypeOfAsyncFun<F>) => any;\n  /** 错误信息，配置成false，则不提示错误信息 */\n  errorMsg?: ((res: TkitUtils.GetReturnTypeOfAsyncFun<F>) => React.ReactNode) | React.ReactNode;\n  /** 成功信息，配置成false，则不提示成功信息 */\n  successMsg?: ((res: TkitUtils.GetReturnTypeOfAsyncFun<F>) => React.ReactNode) | React.ReactNode;\n  /** F 接收多个参数适用 - 必须返回数组 */\n  paramsGenerator?: (params: NewAsyncParams<F>) => EnsureArgumentsType<F>;\n  ASYNC_ID?: number;\n  /** 表单情形下返回数据 */\n  extraParams?: TkitUtils.GetArgumentsType<F>[0];\n  /** 来源 */\n  channel?: string;\n  /** effect name */\n  effectName?: string;\n}\n\nexport interface IAsyncConfirmedParams<F extends TkitAjaxFunction> extends NewAsyncParams<F> {\n  /** 副作用函数 */\n  fetch: F;\n  /** loading效果，配置成false不显示loading */\n  indicator?: React.ReactNode;\n  /** 来源 */\n  channel?: string;\n}\n\nexport interface IAsyncActionProps<F extends TkitAjaxFunction> extends NewAsyncParams<F> {\n  /** 副作用函数 */\n  fetch: F;\n  /** Modal弹窗配置 */\n  modalProps?: AsyncModalProps;\n  /** Form表单配置 */\n  formProps?: Partial<AsyncFormProps>;\n}\n\n// 单个异步操作\nexport interface AsyncStatus extends Omit<IAsyncActionProps<TkitAjaxFunction>, 'fetch'> {\n  /** 是否已确定 */\n  confirmed?: boolean;\n  /** 副作用是否正在执行 */\n  isFetch?: boolean;\n  /** 是否成功 */\n  isSuccess?: boolean;\n  /** 副作用响应【大概率undefined】 */\n  response?: any;\n  ASYNC_ID?: number;\n  // @IMP: 修改实现之后，需要这个字段来判断是不是弹窗\n  /** 是否Modal弹窗 */\n  isModal?: boolean;\n  /** 控制 Modal 显示、隐藏流程 */\n  visible?: boolean;\n  // IMP: 自定indicator\n  /** 自定义loading效果 */\n  indicator?: React.ReactNode;\n}\n\n// 队伍\nexport interface IAsyncState {\n  asyncStatus: AsyncStatus[];\n}\n\nlet ASYNC_ID = 1;\n\nexport const getAsyncId = () => ASYNC_ID++;\n\nconst confirmedPayloadCreator = <F extends TkitAjaxFunction>(\n  payload: IAsyncConfirmedParams<F>,\n  fetch?: F\n) => {\n  if (fetch) {\n    payload.fetch = fetch;\n  }\n  const { onError, onSuccess, callback, ASYNC_ID: id = ASYNC_ID++ } = payload;\n  return {\n    ...payload,\n    ASYNC_ID: id,\n    callback: (res: TkitUtils.GetReturnTypeOfAsyncFun<F>) => {\n      if (!res.code) {\n        if (onSuccess) {\n          onSuccess(res);\n        }\n      } else {\n        if (onError) {\n          onError(res);\n        }\n      }\n      if (callback) {\n        callback(res);\n      }\n    }\n  };\n};\n\nconst asyncModelInitialState: IAsyncState = {\n  asyncStatus: []\n};\n\nconst model = M({\n  namespace: '@ekit/async/Model',\n  state: asyncModelInitialState,\n  reducers: {\n    /** 确认后执行副作用 */\n    doAsyncStart: (state, action: Tction<AsyncStatus>): IAsyncState => {\n      return {\n        ...state,\n        asyncStatus: state.asyncStatus.concat([\n          {\n            errorMsg: null,\n            successMsg: null,\n            ...action.payload,\n            response: null,\n            isFetch: false,\n            confirmed: false\n          }\n        ])\n      };\n    },\n    /** 立即执行副作用 */\n    doAsyncConfirmedStart: (state, action: Tction<AsyncStatus>): IAsyncState => {\n      let isNew = true;\n      const { ASYNC_ID } = action.payload;\n      const newStatus = state.asyncStatus.map((status) => {\n        if (status.ASYNC_ID === ASYNC_ID) {\n          isNew = false;\n          const { modalProps, formProps } = status;\n          const newStatus: AsyncStatus = {\n            errorMsg: null,\n            successMsg: null,\n            ...status,\n            ...action.payload,\n            response: null,\n            isFetch: true,\n            confirmed: true\n          };\n          // IMP: modalProps & formProps\n          modalProps && (newStatus.modalProps = modalProps);\n          formProps && (newStatus.formProps = formProps);\n\n          return newStatus;\n        }\n        return status;\n      });\n      if (isNew) {\n        newStatus.push({\n          errorMsg: null,\n          successMsg: null,\n          ...action.payload,\n          response: null,\n          isFetch: true,\n          confirmed: true\n        });\n      }\n      return {\n        ...state,\n        asyncStatus: newStatus\n      };\n    },\n    /** 副作用结束 */\n    doAsyncEnd: (state, action: Tction<AsyncStatus>): IAsyncState => {\n      const {\n        ASYNC_ID: id,\n        successMsg,\n        errorMsg,\n        response: responseInAction,\n        isSuccess,\n        isFetch: forceSetFetchStatus\n      } = action.payload;\n      return {\n        ...state,\n        asyncStatus: state.asyncStatus.reduce<AsyncStatus[]>((queue, status) => {\n          if (status.ASYNC_ID === id) {\n            const {\n              successMsg: successMsgInStore,\n              errorMsg: errorMsgInStore,\n              isFetch,\n              isModal,\n              response: responseInStore // undefined\n            } = status;\n            const response = responseInStore || responseInAction;\n            const isEffectEnd = isSuccess !== undefined;\n            if (isEffectEnd || (isFetch && forceSetFetchStatus !== false)) {\n              if (isEffectEnd) {\n                const type = isSuccess ? 'success' : 'error';\n                const defaultMsg = isSuccess\n                  ? (response && response.message) || '操作成功'\n                  : (response && response.message) || '操作失败';\n                const customMsg = isSuccess ? successMsg : errorMsg;\n                const storeMsg = isSuccess ? successMsgInStore : errorMsgInStore;\n                if (customMsg !== false && storeMsg !== false) {\n                  let msg: React.ReactNode = customMsg || storeMsg || defaultMsg;\n                  if (typeof msg === 'function') {\n                    msg = msg(response);\n                  }\n                  if (msg) {\n                    const e: AsyncResultEventType = { type, message: msg };\n                    EventCenter.emit(ASYNC_RESULT_EVENT_NAME, e);\n                  }\n                }\n              }\n            }\n            if (isModal) {\n              queue.push({\n                ...status,\n                visible: isSuccess === false ? true : false,\n                confirmed: false,\n                isFetch: false\n              });\n            }\n          } else {\n            queue.push(status);\n          }\n          return queue;\n        }, [])\n      };\n    },\n    /** 清理已关闭的 Modal */\n    doClearModal: (state): IAsyncState => {\n      return {\n        ...state,\n        asyncStatus: state.asyncStatus.filter((status) => status.visible !== false)\n      };\n    }\n  },\n  effects: {\n    doAsync: [\n      async function <F extends TkitAjaxFunction>(\n        { tPut }: BaseEffectsUtils,\n        action: Tction<Omit<IAsyncActionProps<F>, 'ASYNC_ID'>>\n      ) {\n        const { modalProps } = action.payload;\n        const clear = () => tPut(model.actions.doClearModal);\n        await tPut(model.actions.doAsyncStart, {\n          ASYNC_ID: 'ASYNC_ID' in action.payload ? action.payload['ASYNC_ID'] : getAsyncId(),\n          isModal: true,\n          ...action.payload,\n          ...(modalProps?.afterClose\n            ? {\n                modalProps: {\n                  afterClose: () => {\n                    modalProps?.afterClose && modalProps?.afterClose();\n                    clear();\n                  }\n                }\n              }\n            : undefined)\n        });\n      },\n      {\n        silent: true\n      }\n    ],\n    doAsyncConfirmed: [\n      async <F extends TkitAjaxFunction>(\n        { tPut }: BaseEffectsUtils,\n        action: Tction<IAsyncConfirmedParams<F>>\n      ) => {\n        const payload = confirmedPayloadCreator(action.payload);\n        await tPut(model.actions.doAsyncConfirmedStart, payload);\n        let res: any;\n        const { paramsGenerator, params, extraParams, fetch, callback, ASYNC_ID } = payload;\n        try {\n          // 参数类型处理\n          const mergedParams: any[] = [];\n          if (typeof paramsGenerator === 'function') {\n            const generatedParams = paramsGenerator(action.payload);\n            // eslint-disable-next-line prefer-spread\n            mergedParams.push.apply(\n              mergedParams,\n              Array.isArray(generatedParams) ? generatedParams : [generatedParams]\n            );\n          } else {\n            const isParamsArray = Array.isArray(params);\n            const isExtraPramssArray = Array.isArray(extraParams);\n            // 不对数组进行 merge，如有需要\n            if (isParamsArray && isExtraPramssArray) {\n              const msg = `当 fetch 拥有多个参数情形下, async 无法正确处理，请在 paramsGenerator 内处理`;\n              throw Error(msg);\n            } else if (!isParamsArray && !isExtraPramssArray) {\n              // 仅 merge object\n              mergedParams.push.apply(mergedParams, [\n                (params && typeof params === 'object') ||\n                (extraParams && typeof extraParams === 'object')\n                  ? { ...params, ...extraParams }\n                  : extraParams || params\n              ]);\n            } else if (isParamsArray || isExtraPramssArray) {\n              // eslint-disable-next-line prefer-spread\n              mergedParams.push.apply(mergedParams, isParamsArray ? params : extraParams);\n            }\n          }\n          res = await fetch(...mergedParams);\n        } catch (err) {\n          res = {\n            code: 10002,\n            message: err.message\n          };\n        }\n        if (callback) {\n          callback(res);\n        }\n        // TODO: 无响应是不是认为成功？？\n        const isSuccess = !(res && res.code);\n        const pl: TkitUtils.GetArgumentsType<typeof model.actions.doAsyncEnd>[0] = {\n          ASYNC_ID,\n          isSuccess,\n          response: res\n        };\n        // IMP: 如果请求被 cancel，则强制取消\n        if (res.code === AjaxCancelCode) {\n          pl.isFetch = false;\n          pl.isSuccess = undefined;\n        }\n        await tPut(model.actions.doAsyncEnd, pl);\n      },\n      {\n        silent: true\n      }\n    ],\n    doAsyncCancel: [\n      async ({ tPut }: BaseEffectsUtils, action: Tction<number>) => {\n        await tPut(model.actions.doAsyncEnd, {\n          ASYNC_ID: action.payload,\n          successMsg: false\n        });\n      },\n      { silent: true }\n    ]\n  }\n});\n// IMP: 类型推导遇到泛型不好使了，必须手写类型\nexport interface AsyncModelActions {\n  doAsync: <F extends TkitAjaxFunction>(payload: Omit<IAsyncActionProps<F>, 'ASYNC_ID'>) => any;\n  doAsyncConfirmed: <F extends TkitAjaxFunction>(payload: IAsyncConfirmedParams<F>) => any;\n  doAsyncCancel: (ASYNC_ID: number) => any;\n}\n\nexport const asyncModel: Omit<typeof model, 'actions'> & {\n  actions: Omit<typeof model.actions, keyof AsyncModelActions> & AsyncModelActions;\n} = model as any;\n\nexport type AsyncModelType = typeof asyncModel;\n","/**\n * @author: yangqianjun\n * @file: 私有hooks，请勿使用\n * @Date: 2019-09-10 16:48:13\n * @LastEditors: yangqianjun\n * @LastEditTime: 2019-12-06 18:37:27\n */\nimport { useCallback } from 'react';\nimport { useModel } from '@ekit/model';\nimport {\n  asyncModel,\n  IAsyncState,\n  AsyncForm,\n  AsyncFormProps,\n  IAsyncActionProps,\n  getAsyncId\n} from './asyncModel';\n\nexport interface UseAsyncConfig {\n  renderForm: (props: AsyncFormProps) => React.ReactChild;\n}\n\n/** 私有hooks，请勿使用 */\nexport function useAsync(\n  config: UseAsyncConfig\n): [IAsyncState['asyncStatus'], typeof asyncModel.actions] {\n  // @IMP: 数组类型的痛\n  const [state, actions] = useModel(asyncModel);\n  const asyncFormater = useCallback(\n    <P extends Omit<IAsyncActionProps<any>, 'ASYNC_ID'>>(payload: P): P => {\n      const { modalProps = {}, formProps, onCancel: handleCancel } = payload;\n      const ASYNC_ID = getAsyncId();\n      let form: AsyncForm | null;\n      const newProps = formProps\n        ? {\n            ...modalProps,\n            className: `tkit-async-modal ${(modalProps && modalProps.className) || ''}`,\n            content: config.renderForm({\n              ...formProps,\n              getForm: f => {\n                form = f;\n              }\n            }),\n            onOk: async () => {\n              let values: any;\n              if (form) {\n                values = await form.submit();\n              }\n              return values;\n            }\n          }\n        : modalProps;\n\n      if (newProps) {\n        const { onCancel, onOk } = newProps;\n        newProps.onCancel = async () => {\n          try {\n            if (onCancel) {\n              await onCancel();\n            }\n            await Promise.all([\n              actions.doAsyncCancel(ASYNC_ID || -1),\n              handleCancel && handleCancel()\n            ]);\n          } catch (e) {\n            // do nothing\n          }\n        };\n        // @IMP: Modal的关闭不再受onOk控制\n        newProps.onOk = async () => {\n          try {\n            let extraParams: any = {};\n            if (onOk) {\n              extraParams = await onOk();\n            }\n            await actions.doAsyncConfirmed({\n              ASYNC_ID,\n              ...payload,\n              extraParams\n            });\n          } catch (e) {\n            // do nothing\n          }\n        };\n      }\n      return {\n        ...payload,\n        ASYNC_ID,\n        modalProps: newProps\n      };\n    },\n    [actions, config]\n  );\n  const newActions: typeof actions = {\n    ...actions,\n    doAsync: payload => {\n      return actions.doAsync(asyncFormater(payload));\n    }\n  };\n  return [state.asyncStatus, newActions];\n}\n","/**\n * @author: yangqianjun\n * @file: 全局效果容器\n * @Date: 2019-11-19 16:14:12\n * @LastEditors: yangqianjun\n * @LastEditTime: 2019-12-23 18:20:53\n */\nimport React, { useEffect, useMemo } from 'react';\nimport { EventCenter } from '@ekit/event';\nimport { useAsync, UseAsyncConfig } from './useAsync';\nimport { AsyncStatus, AsyncFormProps, AsyncModalProps, asyncModel } from './asyncModel';\nimport {\n  ASYNC_EFFECT_EVENT_NAME,\n  AsyncEffectEventType,\n  ASYNC_RESULT_EVENT_NAME,\n  AsyncResultEventType,\n  ASYNC_STATUS_CHANGE_NAME\n} from './consts';\n\nexport interface AsyncProps {\n  /**\n   * 加载效果组件【每个effect对应一个效果】\n   * @deprecated 不推荐使用\n   */\n  loading?: React.ComponentType<{ status: AsyncStatus }>;\n  /** 全局加载效果组件【所有effect共用一个效果 */\n  sharedLoading?: React.ComponentType;\n  /** 显示副作用提示信息的函数 */\n  tips?: (e: AsyncResultEventType) => any;\n  /**  Model弹窗组件，兼容antd Model */\n  modal: React.ComponentType<AsyncModalProps>;\n  /** Form组件 */\n  form: React.ComponentType<AsyncFormProps>;\n}\n\n/** 异步操作容器 */\nexport default function Async(props: AsyncProps) {\n  const { loading: Loading, modal: Modal, form: Form, tips, sharedLoading: SL } = props;\n\n  // IMP: 优化\n  const config: UseAsyncConfig = useMemo(\n    () => ({\n      renderForm: (props) => <Form {...props} />\n    }),\n    []\n  );\n\n  const [queue, actions] = useAsync(config);\n\n  // 提示信息处理\n  useEffect(() => {\n    // IMP: 异步，解决 Render methods should be a pure function of props and state.\n    // eslint-disable-next-line prefer-spread\n    const handler = tips ? (...args: any) => setTimeout(() => tips.apply(null, args), 0) : tips;\n    if (handler) {\n      EventCenter.on(ASYNC_RESULT_EVENT_NAME, handler);\n    }\n    return () => {\n      if (handler) {\n        EventCenter.off(ASYNC_RESULT_EVENT_NAME, handler);\n      }\n    };\n  }, [tips]);\n\n  // 全局 API 和 actions 打通\n  useEffect(() => {\n    const handler = ({ type, payload }: AsyncEffectEventType) => {\n      if (type in actions) {\n        actions[type as string].call(null, {\n          effectName: `${asyncModel.namespace}/${type as string}`,\n          ...payload\n        });\n      }\n    };\n    EventCenter.on(ASYNC_EFFECT_EVENT_NAME, handler);\n    return () => {\n      EventCenter.off(ASYNC_EFFECT_EVENT_NAME, handler);\n    };\n  }, [actions]);\n\n  // 检测 queue 变化\n  useEffect(() => {\n    EventCenter.emit(ASYNC_STATUS_CHANGE_NAME, queue);\n  }, [queue]);\n\n  let loadingCount = 0;\n  const all = queue.map((status) => {\n    const { ASYNC_ID, modalProps, isFetch, isModal, indicator, visible = true } = status;\n    if (isModal) {\n      return (\n        <Modal\n          afterClose={actions.doClearModal}\n          {...modalProps}\n          key={ASYNC_ID}\n          visible={visible}\n          confirmLoading={isFetch}\n        >\n          {modalProps && modalProps.content}\n        </Modal>\n      );\n    } else if (isFetch) {\n      if (indicator !== undefined) {\n        return indicator;\n      }\n      if (Loading) {\n        return <Loading key={ASYNC_ID} status={status} />;\n      }\n      loadingCount++;\n    }\n    return null;\n  });\n  return (\n    <>\n      {all}\n      {loadingCount && SL ? <SL /> : null}\n    </>\n  );\n}\n","/**\n * @author: yangqianjun\n * @file: 筛选出需要的Status Hooks\n * @Date: 2019-10-24 13:52:32\n * @LastEditors: yangqianjun\n * @LastEditTime: 2019-12-06 18:37:43\n */\nimport { useEffect, useState } from 'react';\nimport { EventCenter } from '@ekit/event';\nimport { AsyncStatus } from './asyncModel';\nimport { ASYNC_STATUS_CHANGE_NAME } from './consts';\n\nexport type AsyncStatusSelector = (status: AsyncStatus) => boolean;\n\nconst statusListSelector: (\n  status: AsyncStatus[],\n  selector?: AsyncStatusSelector\n) => AsyncStatus | undefined = (statusList, selector) => {\n  return statusList.find(status => {\n    if (status.isFetch) {\n      if ((selector && selector(status)) || !selector) {\n        return status;\n      }\n    }\n    return;\n  });\n};\n\n/** 筛选出需要的Status */\nexport function useAsyncStatus(selector?: AsyncStatusSelector): [AsyncStatus?] {\n  const [status, setStatus] = useState<AsyncStatus>();\n  useEffect(() => {\n    const handler = (newStatusList: AsyncStatus[]) => {\n      const newStatus = statusListSelector(newStatusList, selector);\n      if (newStatus !== status) {\n        setStatus(newStatus);\n      }\n    };\n    EventCenter.on(ASYNC_STATUS_CHANGE_NAME, handler);\n    return () => {\n      EventCenter.off(ASYNC_STATUS_CHANGE_NAME, handler);\n    };\n  }, [selector, status]);\n  return [status];\n}\n","/**\n * @file: 工具函数入口\n * @author: yangqianjun\n * @Date: 2019-12-17 20:16:34\n * @LastEditors: yangqianjun\n * @LastEditTime: 2019-12-23 19:12:49\n */\n\nimport { TkitUtils } from '@ekit/types';\nimport { EventCenter } from '@ekit/event';\nimport { TkitAjaxFunction } from '@ekit/ajax';\nimport { AsyncModelType, IAsyncActionProps, IAsyncConfirmedParams } from './asyncModel';\nimport { ASYNC_EFFECT_EVENT_NAME, AsyncEffectEventType } from './consts';\nimport Async from './Async';\n\nexport * from './asyncModel';\nexport * from './consts';\nexport * from './Async';\nexport * from './useAsyncStatus';\nexport default Async;\n\ntype doAsyncType = AsyncModelType['actions']['doAsync'];\ntype doAsyncArgType = TkitUtils.GetArgumentsType<doAsyncType>[0];\n\nfunction wrapper(payload: doAsyncArgType, cb: (newPayload: doAsyncArgType) => any) {\n  const prom = new Promise((rs, rj) => {\n    const { callback, onCancel } = payload;\n    cb({\n      ...payload,\n      onCancel: () => {\n        onCancel && onCancel();\n        rj();\n      },\n      callback: res => {\n        if (callback) {\n          callback(res);\n        }\n        rs(res);\n      }\n    });\n  });\n  // in case of uncaught error\n  prom.then(\n    () => null,\n    () => null\n  );\n  return prom;\n}\n\n/** 执行需要显示确定弹窗【可内置表单】副作用 */\nexport const doAsync: <F extends TkitAjaxFunction>(\n  payload: Omit<IAsyncActionProps<F>, 'ASYNC_ID'>\n) => ReturnType<F> = p => {\n  return wrapper(p, payload => {\n    const e: AsyncEffectEventType = {\n      type: 'doAsync',\n      payload\n    };\n    EventCenter.emit(ASYNC_EFFECT_EVENT_NAME, e);\n  }) as ReturnType<typeof p['fetch']>;\n};\n\n/**  执行副作用 */\nexport const doAsyncConfirmed: <F extends TkitAjaxFunction>(\n  payload: IAsyncConfirmedParams<F>\n) => ReturnType<F> = p => {\n  return wrapper(p, payload => {\n    const e: AsyncEffectEventType = {\n      type: 'doAsyncConfirmed',\n      payload: payload\n    };\n    EventCenter.emit(ASYNC_EFFECT_EVENT_NAME, e);\n  }) as ReturnType<typeof p['fetch']>;\n};\n\n/** 清理  */\nexport const doClearModal = () =>\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  EventCenter.emit(ASYNC_EFFECT_EVENT_NAME, <AsyncEffectEventType>{\n    type: 'doClearModal'\n  });\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport React from 'react';\nimport { Spin, Modal, Button, Input, message } from 'antd';\nimport 'antd/dist/antd.css';\nimport { AjaxPromise, TkitAjaxFunction, promiseFactory } from '@ekit/ajax';\nimport Async from '../src/Async';\nimport {\n  AsyncFormProps,\n  AsyncStatus,\n  AsyncModalProps,\n  AsyncForm,\n  IAsyncActionProps,\n  IAsyncConfirmedParams\n} from '../src/asyncModel';\nimport { doAsync, doAsyncConfirmed } from '../src/';\nimport { AsyncResultEventType } from '../src/consts';\n\nwindow.__TKIT_USE_MODEL_LOGGER__ = console.log;\n\nexport class FormFaker extends React.Component<AsyncFormProps> implements AsyncForm {\n  public static fakeData = {\n    name: 'skipper'\n  };\n  public constructor(props: AsyncFormProps) {\n    super(props);\n    if (props.getForm) {\n      props.getForm(this);\n    }\n  }\n  public submit() {\n    return FormFaker.fakeData;\n  }\n  public render() {\n    return <div>nihao</div>;\n  }\n}\n\nconst loadData = (id: number, opt?: { cancel?: Promise<any> }): AjaxPromise<any> => {\n  console.log('running effect');\n  const prom = new Promise((rs, rj) => {\n    const timer = setTimeout(() => rs({ code: 0, message: '逗我呢', result: { id } }), 1000);\n    if (opt && opt.cancel) {\n      opt.cancel.then(() => {\n        clearTimeout(timer);\n      });\n    }\n  });\n  return prom;\n};\n\nexport default function Example() {\n  return (\n    <div>\n      <Async\n        form={FormFaker}\n        loading={arg => <Spin spinning={arg.status.isFetch} />}\n        modal={Modal}\n        tips={({ type, message: msg }) => message[type](msg)}\n      />\n      <Button\n        onClick={() => {\n          const [{ resolve }, prom] = promiseFactory<string>();\n          doAsync({\n            fetch: loadData,\n            callback: console.log,\n            modalProps: {\n              title: 'nihao',\n              content: (\n                <div>\n                  <Input />\n                  <Button\n                    onClick={() => {\n                      doAsync({\n                        fetch: loadData,\n                        modalProps: {\n                          content: '你好',\n                          title: '2'\n                        }\n                      });\n                    }}\n                  >\n                    嵌套了\n                  </Button>\n                </div>\n              ),\n              onCancel: resolve\n            },\n            paramsGenerator: () => {\n              return [\n                1,\n                {\n                  cancel: prom\n                }\n              ];\n            }\n          });\n        }}\n      >\n        弹窗测试\n      </Button>\n      &nbsp;\n      <Button\n        onClick={() => {\n          doAsyncConfirmed({\n            fetch: loadData,\n            callback: console.log\n          });\n        }}\n      >\n        不弹窗带loading测试\n      </Button>\n      &nbsp;\n      <Button\n        onClick={() => {\n          doAsyncConfirmed({\n            fetch: loadData,\n            callback: console.log,\n            indicator: null\n          });\n        }}\n      >\n        不显示loading测试\n      </Button>\n    </div>\n  );\n}\n\nexport function StatusFaker(props: AsyncStatus) {}\nexport function FormCoreFaker(props: AsyncForm) {}\nexport function ModalFaker(props: AsyncModalProps) {}\nexport function ResultTypeFaker(props: AsyncResultEventType) {}\nexport function AsyncFaker<F extends TkitAjaxFunction>(props: IAsyncActionProps<F>) {}\nexport function AsyncConfirmedFaker<F extends TkitAjaxFunction>(props: IAsyncConfirmedParams<F>) {}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Props, Playground } from 'docz';\nimport Async from './src/Async.tsx';\nimport Example, {\n  StatusFaker,\n  FormCoreFaker,\n  ModalFaker,\n  FormFaker,\n  ResultTypeFaker,\n  AsyncFaker,\n  AsyncConfirmedFaker\n} from './__tests__/Example.tsx';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"async\"\n    }}>{`Async`}</h1>\n    <p>{`Tkit 异步操作工具模块、组件。`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i -S @ekit/async\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"2-配置-async-组件\"\n    }}>{`2. 配置 Async 组件`}</h2>\n    <p>{`在最顶层组件内引入 Async，监听并处理 Async 事件。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import Async from '@ekit/async';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--21-async-props\"\n    }}>{`- 2.1 Async Props`}</h2>\n    <p>{`Async 组件 Props 类型是 `}<a parentName=\"p\" {...{\n        \"href\": \"#asyncprops-%E6%8E%A5%E5%8F%A3\"\n      }}>{`AsyncProps`}</a>{`。`}</p>\n    <h3 {...{\n      \"id\": \"asyncprops-接口\"\n    }}>{`AsyncProps 接口`}</h3>\n    <p>{`AsyncProps 接口包含以下属性和方法：`}</p>\n    <Props of={Async} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"示例\"\n    }}>{`示例`}</h3>\n    <p>{`首先在 `}<a parentName=\"p\" {...{\n        \"href\": \"http://git.corp.kuaishou.com/ks-ep/ks-ep-fe/ts-boilerplate/commit/1846c9df84a783b9ed043988e830f6e62376040f\"\n      }}>{`Root.tsx`}</a>{` 内引入 Async。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { Spin, Modal, message } from 'antd';\nimport Async from '@ekit/async';\n\n// 请在 Root.tsx 内添加\n<Async\n  form={Form}\n  // loading={arg => <Spin spinning={arg.status.isFetch} />}\n  sharedLoading={Spin}\n  modal={Modal}\n  tips={({ type, message: msg }) => message[type](msg)}\n/>;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--21①-async-form\"\n    }}>{`- 2.1.①. Async Form`}</h2>\n    <p>{`表单组件，用来渲染表单，并在 Modal.onOk 时提交表单。表单组件 Props 的类型是 `}<a parentName=\"p\" {...{\n        \"href\": \"#asyncformprops-%E6%8E%A5%E5%8F%A3\"\n      }}>{`AsyncFormProps`}</a>{`，实现了 `}<a parentName=\"p\" {...{\n        \"href\": \"#asyncform-%E6%8E%A5%E5%8F%A3\"\n      }}>{`AsyncForm`}</a>{` 定义。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`class Form extends React.Component<AsyncFormProps> implements AsyncForm {}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"asyncformprops-接口\"\n    }}>{`AsyncFormProps 接口`}</h3>\n    <p>{`AsyncFormProps 包含以下属性和方法：`}</p>\n    <Props of={FormFaker} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"asyncform-接口\"\n    }}>{`AsyncForm 接口`}</h3>\n    <p>{`AsyncForm 包含以下属性和方法：`}</p>\n    <Props of={FormCoreFaker} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"示例-1\"\n    }}>{`示例`}</h3>\n    <p>{`实现一个 FakeForm 组件：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export class FakeForm extends React.Component<AsyncFormProps> implements AsyncForm {\n  public static fakeData = {\n    name: 'skipper'\n  };\n  public constructor(props: AsyncFormProps) {\n    super(props);\n    if (props.getForm) {\n      props.getForm(this);\n    }\n  }\n  public submit() {\n    return FormFaker.fakeData;\n  }\n  public render() {\n    return <div>nihao</div>;\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--21②-deprecated-loading\"\n    }}>{`- 2.1.②. `}{`[Deprecated]`}{` loading`}</h2>\n    <p>{`【废弃，用 sharedLoading 替代】显示加载效果的组件`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`  interface loading {\n    (arg: AsyncStatus) => any;\n  }\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"asyncstatus-接口\"\n    }}>{`AsyncStatus 接口`}</h3>\n    <p>{`AsyncStatus 包含以下属性和方法：`}</p>\n    <Props of={StatusFaker} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"示例：\"\n    }}>{`示例：`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`(arg: AsyncStatus) => <Spin spinning={arg.status.isFetch} />;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--21③-sharedloading\"\n    }}>{`- 2.1.③. sharedLoading`}</h2>\n    <p>{`配置所有 effect 共用的全局加载效果组件。`}</p>\n    <h5 {...{\n      \"id\": \"示例-2\"\n    }}>{`示例`}</h5>\n    <p>{`简单的全局加载效果组件：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`() => 'loading';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--21④-modal-属性\"\n    }}>{`- 2.1.④. modal 属性`}</h2>\n    <p>{`弹窗组件，可直接使用 Antd Modal 或自定义，Modal 组件 Props 类型为 `}<a parentName=\"p\" {...{\n        \"href\": \"#asyncmodalprops-%E6%8E%A5%E5%8F%A3\"\n      }}>{`AsyncModalProps`}</a>{`。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`class Modal extends React.Component<AsyncModalProps> {}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"asyncmodalprops-接口\"\n    }}>{`AsyncModalProps 接口`}</h3>\n    <p>{`AsyncModalProps 包含以下属性和方法：`}</p>\n    <Props of={ModalFaker} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"示例-3\"\n    }}>{`示例`}</h3>\n    <p>{`实现一个 FakeModal：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export class FakeModal： extends React.Component<AsyncModalProps> {\n  public render() {\n    const { visible, title, content, className, confirmLoading, onOk, onCancel } = this.props;\n    return <div>{content}</div>;\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--21⑤-tips\"\n    }}>{`- 2.1.⑤. tips`}</h2>\n    <p>{`配置全局的成功、错误提示函数，该函数接收的参数类型为 `}<a parentName=\"p\" {...{\n        \"href\": \"#asyncresulteventtype-%E6%8E%A5%E5%8F%A3\"\n      }}>{`AsyncResultEventType`}</a>{`。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`interface tips {\n  (msg: AsyncResultEventType) => void;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"asyncresulteventtype-接口\"\n    }}>{`AsyncResultEventType 接口`}</h3>\n    <p>{`AsyncResultEventType 包含以下属性和方法：`}</p>\n    <Props of={ResultTypeFaker} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"示例-4\"\n    }}>{`示例`}</h3>\n    <p>{`实现一个 message 提示函数：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{` const message = { error: () => 0, success: () => 1 }\n ({ type, message: msg }: AsyncResultEventType) => message[type](msg);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"3-api\"\n    }}>{`3. API`}</h2>\n    <p>{`Async 也提供了点击取消按钮时候，同时取消异步请求的接口。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { doAsync, doAsyncConfirmed, useAsyncStatus } from '@ekit/async';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--31-doasync\"\n    }}>{`- 3.1. doAsync`}</h2>\n    <p>{`doAsync 出发一个可取消的异步事件。`}</p>\n    <h2 {...{\n      \"id\": \"--31①-doasync-参数\"\n    }}>{`- 3.1.① doAsync 参数`}</h2>\n    <h3 {...{\n      \"id\": \"iasyncactionprops-接口\"\n    }}>{`IAsyncActionProps 接口`}</h3>\n    <Props of={AsyncFaker} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"示例-5\"\n    }}>{`示例`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`doAsync(<IAsyncActionProps<any>>{ ... })\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"取消示例\"\n    }}>{`取消示例`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { promiseFactory } from '@ekit/ajax';\n\nconst [{ resolve }, cancel] = promiseFactory<string>();\nconst res = yield doAsync({\n  fetch: naotu.doModifyDoc,\n  ...,\n  paramsGenerator: ({ extraParams }) => [\n    {\n      doc: {\n        ...extraParams\n      }\n    },\n    {\n      cancel\n    }\n  ],\n  onCancel: () => {\n    resolve('放弃了');\n  },\n  ...\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--32-doasyncconfirmed\"\n    }}>{`- 3.2. doAsyncConfirmed`}</h2>\n    <h2 {...{\n      \"id\": \"--32①-doasyncconfirmed-参数\"\n    }}>{`- 3.2.① doAsyncConfirmed 参数`}</h2>\n    <h3 {...{\n      \"id\": \"iasyncconfirmedparams-接口\"\n    }}>{`IAsyncConfirmedParams 接口`}</h3>\n    <Props of={AsyncConfirmedFaker} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"示例-6\"\n    }}>{`示例`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`doAsyncConfirmed(<IAsyncConfirmedParams<any>>{ ... })\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--33-useasyncstatus\"\n    }}>{`- 3.3. useAsyncStatus`}</h2>\n    <p>{`我们可以通过 @ekit/async 提供的 useAsyncStatus Hooks，定制组件局部的 loading 效果。需要再容器内局部显示 loading 效果的，请勿给对应的 Model Effect 添加 loading 配置，否则也会显示全局 loading 效果。`}</p>\n    <h3 {...{\n      \"id\": \"示例-7\"\n    }}>{`示例`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { useAsyncStatus } from '@ekit/async';\n\nconst Cp = () => {\n  const [status] = useAsyncStatus(\n    (status: AsyncStatus) => status.effectName === 'docModel/getDocList'\n  );\n\n  return status ? 'loading' : null;\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"4-demo\"\n    }}>{`4. Demo`}</h2>\n    <Playground __position={8} __code={'<Example />'} __scope={{\n      props: this ? this.props : props,\n      Props,\n      Playground,\n      Async,\n      Example,\n      StatusFaker,\n      FormCoreFaker,\n      ModalFaker,\n      FormFaker,\n      ResultTypeFaker,\n      AsyncFaker,\n      AsyncConfirmedFaker\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Example mdxType=\"Example\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"demo-源码\"\n    }}>{`Demo 源码`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { Spin, Modal, Button, Input, message } from 'antd';\nimport { AjaxPromise, TkitAjaxFunction } from '@ekit/ajax';\nimport { AsyncResultEventType, doAsync, doAsyncConfirmed, Async } from '@ekit/async';\n\n// @IMP: 表单组件\nexport class FormFaker extends React.Component<AsyncFormProps> {\n  public static fakeData = {\n    name: 'skipper'\n  };\n  public constructor(props: AsyncFormProps) {\n    super(props);\n    if (props.getForm) {\n      props.getForm(this);\n    }\n  }\n  public submit() {\n    return FormFaker.fakeData;\n  }\n  public render() {\n    return <div>nihao</div>;\n  }\n}\n\nconst loadData = (id: number): AjaxPromise<any> => {\n  console.log('running effect');\n  return new Promise((rs, rj) => {\n    setTimeout(() => rs({ code: 0, message: '逗我呢', result: { id } }), 1000);\n  });\n};\n\nexport default function Example() {\n  return (\n    <div>\n      <Async\n        form={FormFaker}\n        loading={(arg) => <Spin spinning={arg.status.isFetch} />}\n        modal={Modal}\n        tips={({ type, message: msg }) => message[type](msg)}\n      />\n      <Button\n        onClick={() => {\n          doAsync({\n            fetch: loadData,\n            callback: console.log,\n            modalProps: {\n              title: 'nihao',\n              content: (\n                <div>\n                  <Input />\n                  <Button\n                    onClick={() => {\n                      doAsync({\n                        fetch: loadData,\n                        modalProps: {\n                          content: '你好',\n                          title: '2'\n                        }\n                      });\n                    }}\n                  >\n                    嵌套了\n                  </Button>\n                </div>\n              )\n            }\n          });\n        }}\n      >\n        弹窗测试\n      </Button>\n      &nbsp;\n      <Button\n        onClick={() => {\n          doAsyncConfirmed({\n            fetch: loadData,\n            callback: console.log\n          });\n        }}\n      >\n        不弹窗带loading测试\n      </Button>\n      &nbsp;\n      <Button\n        onClick={() => {\n          doAsyncConfirmed({\n            fetch: loadData,\n            callback: console.log,\n            indicator: null\n          });\n        }}\n      >\n        不显示loading测试\n      </Button>\n    </div>\n  );\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","/**\n * @file: 拆分ec\n * @author: yangqianjun\n * @Date: 2020-01-08 18:02:05\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-01-08 18:10:58\n */\n\nimport EventEmitter from 'eventemitter3';\n\nexport default new EventEmitter<string>();\n","import React from 'react';\n\nimport { EventCenter } from './event';\n\n// own props\nexport interface IEventWrapperProps extends React.Props<any> {\n  on: Callback;\n  once: Callback;\n  emit: Emit;\n}\n\ninterface IEventWrapperHOCProps {\n  /**\n   * 被装饰的组件\n   */\n  Cp: React.SFC | React.ComponentClass;\n  /**\n   * 被装饰组件的Props\n   */\n  originProps: any;\n}\n\ntype Callback = (event: string, info: any) => any;\ntype Emit = (event: string, info: any) => any;\n\nexport class EventWrapper extends React.PureComponent<IEventWrapperHOCProps> {\n  public observerList: any[];\n  public on: Callback;\n  public once: Callback;\n  public emit: Emit;\n  public constructor(props: IEventWrapperHOCProps) {\n    super(props);\n    this.observerList = [];\n    this.on = (event: string, callback: Callback) => {\n      EventCenter.on(event, callback);\n      const observer = () => EventCenter.removeListener(event, callback);\n      this.observerList.push(observer);\n      return observer;\n    };\n    this.once = (event: string, callback: Callback) => {\n      EventCenter.once(event, callback);\n      const observer = () => EventCenter.removeListener(event, callback);\n      this.observerList.push(observer);\n      return observer;\n    };\n    this.emit = (event: string, info: any) => {\n      EventCenter.emit(event, info);\n    };\n  }\n\n  public componentWillUnmount() {\n    this.observerList.forEach(observer => observer());\n  }\n\n  public render() {\n    const { Cp, originProps } = this.props;\n    return <Cp {...originProps} on={this.on} once={this.once} emit={this.emit} />;\n  }\n}\n\nexport default function EventWrapperDecorator<T extends React.ComponentClass | React.SFC>(\n  Cp: T\n): any {\n  return (props: any) => <EventWrapper Cp={Cp} originProps={props} />;\n}\n","/**\n * @file: 拆分到 @ekit/event-center\n * @author: yangqianjun\n * @Date: 2020-01-08 18:26:02\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-01-08 18:26:50\n */\n\nexport { default as EventCenter } from '@ekit/event-center';\n","import EventWrapperDecorator from './EventWrapper';\n\nexport * from './EventWrapper';\nexport * from './event';\nexport { useEvent } from './useEvent';\nexport default EventWrapperDecorator;\n","/**\n * @file: description\n * @author: yangqianjun\n * @Date: 2019-12-17 20:16:34\n * @LastEditors: yangqianjun\n * @LastEditTime: 2019-12-19 11:15:12\n */\nimport { useEffect, useMemo, useCallback } from 'react';\nimport { TkitUtils } from '@ekit/types';\nimport { EventCenter } from './event';\n\nexport function useEvent<F extends (...args: any) => any>(e: string, fn: F, once = false) {\n  const method = once ? 'once' : 'on';\n  const off = useCallback(() => {\n    EventCenter.off(e, fn);\n  }, [e, fn]);\n  useEffect(() => {\n    EventCenter[method](e, fn);\n    return off;\n  }, [e, fn, method, off]);\n  return useMemo(() => {\n    return [\n      (...args: TkitUtils.GetArgumentsType<F>) => {\n        // eslint-disable-next-line prefer-spread\n        EventCenter.emit.apply(EventCenter, [e].concat(args));\n      },\n      off\n      // IMP: as - 虽然不知道为什么，但是这修复了 emit 类型推断不正常的问题\n    ] as [F, typeof off];\n  }, [e, off]);\n}\n","/**\n * @file: model 常量\n * @author: yangqianjun\n * @Date: 2020-02-06 14:42:35\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-10 10:06:56\n */\n\nimport { EffectOptions } from './types';\n\n/** 默认副作用配置 */\nexport const defaultEffectOptions: EffectOptions = {\n  type: 'takeEvery',\n  ms: 100\n};\n\n/** 如引入 immer，枚举标记 redux 或者 react hooks */\nexport const enum ModernType {\n  /** redux */\n  ReduxModern = 0,\n  /** useModel */\n  HookModern = 1\n}\n\n/**\n * 执行 effect 广播的事件\n * 从 @ekit/async 拆过来，以逐步解除 model & async 的循环引用\n */\nexport const ASYNC_EFFECT_EVENT_NAME = 'ASYNC_EFFECT_EVENT_NAME';\n\n/** Redux Type 副作用开始 */\nexport const EFFECTS_START = 'EFFECTS_START';\n\n/** Redux Type 副作用结束 */\nexport const EFFECTS_END = 'EFFECTS_END';\n\n/** Redux Type 副作用错误 */\nexport const EFFECTS_ERROR = 'EFFECTS_ERROR';\n\n/** Redux Type 副作用成功 */\nexport const EFFECTS_SUCCESS = 'EFFECTS_SUCCESS';\n\n/**  副作用消息EventCenter事件 */\nexport const EFFECTS_MSG = 'EFFECTS_MSG';\n\nexport const fakeEffectRes = { code: 0 };\n\n/** 副作用返回的promise的resolve */\nexport const EFFECTS_PROMISE_RESOLVE = '__EFFECTS_PROMISE_RESOLVE__';\n\n/** 副作用返回的promise的resolve */\nexport const EFFECTS_PROMISE_REJECT = '__EFFECTS_PROMISE_REJECT__';\n\n/** 是否 tkit effet */\nexport const TKIT_EFFECT = '__TKIT_EFFECT__';\n\n/** 是否 Tkit Non blocking Effect */\nexport const TKIT_NB_EFFECT = '__TKIT_NB_EFFECT__';\n\n/** 标记是子 effect，不自动捕获错误以及发起 EFFECT START */\nexport const TKIT_SUB_EFFECT = '__TKIT_SUB_EFFECT__';\n\n/** 注入 tDispath */\nexport const TKIT_DISPATCH = '__TKIT_DISPATCH__';\n\n/** 注入 get State */\nexport const TKIT_GET_STATE = '__TKIT_GET_STATE__';\n\n/** 为 action 标记子 effect 标记  */\nexport const markSubEffect = <A>(action: A) => {\n  action[TKIT_SUB_EFFECT] = true;\n};\n\nexport const noop = () => void 0;\nexport const fakeUtilsThrowErrorIfInvoked = () => {\n  throw 'Fake Utils mustn\\'t be Invoked';\n};\nexport const printError = (message: string) => {\n  // TODO: UC Browser for Android 不支持 console.error\n  // eslint-disable-next-line no-console\n  if (typeof console.error === 'function') {\n    // eslint-disable-next-line no-console\n    console.error(message);\n  }\n};\n","/**\n * Model工厂\n * @param model\n * @param model.namespace 命令空间\n * @param model.state 初始状态\n * @param model.reducers 推导reducers和同步actions\n * @param model.effects 副作用，推导异步actions\n */\n\nimport { produce } from 'immer';\nimport { createAction, handleActions } from '@ekit/actions';\nimport { TkitUtils } from '@ekit/types';\nimport {\n  AbstractAction,\n  Effects,\n  Reducers,\n  IEffectFactory,\n  BaseEffectsUtils,\n  GetGeneratorReturnType\n} from './types';\nimport { ModernType, defaultEffectOptions } from './consts';\n\nexport default function factory<\n  M,\n  R extends Reducers<M>,\n  Utils extends BaseEffectsUtils,\n  E extends Effects<Utils>\n>(model: {\n  /** 命名空间 */\n  namespace: string;\n  /**  初始状态 */\n  state: M;\n  reducers: R;\n  effects?: E;\n  /** modern 模式，引入 immer，解决 namespace 的问题 */\n  m?: ModernType;\n  /** effectWrapper */\n  effectFactory?: IEffectFactory;\n}) {\n  type ReducerName = keyof R;\n  type EffectName = keyof E;\n\n  /**\n   * ====================== Model Actions 类型计算 ======================\n   */\n\n  // IMP: 修复当 model effects 缺省的情况下，推断 TYPES 字符串类型错误的bug\n  type ActionTypes = { [doSomething in ReducerName]: string } &\n    { [doSomething in EffectName]: string };\n\n  // IMP: 修复当 model effects 缺省的情况下，类型推断错误的bug\n  type SyncActions = {\n    [doSomething in ReducerName]: TkitUtils.GetArgumentsType<R[doSomething]>[1] extends\n      | never\n      | undefined\n      ? () => any\n      : <P extends TkitUtils.GetArgumentsType<R[doSomething]>[1]>(payload: P['payload']) => P;\n  };\n\n  // IMP: 修复当 model effects 缺省的情况下，类型推断错误的bug\n  // model 的 reducers、effects 不能是泛型\n  type AsyncActions = {\n    [doSomething in EffectName]: TkitUtils.GetArgumentsType<\n      TkitUtils.GetModelEffect<E[doSomething]>\n    >[1] extends never | undefined\n      ? () => Promise<GetGeneratorReturnType<TkitUtils.GetModelEffect<E[doSomething]>>>\n      : <P extends TkitUtils.GetArgumentsType<TkitUtils.GetModelEffect<E[doSomething]>>[1]>(\n          payload: P['payload']\n        ) => Promise<GetGeneratorReturnType<TkitUtils.GetModelEffect<E[doSomething]>>>;\n  };\n\n  type Actions = SyncActions & AsyncActions;\n\n  /**\n   * ====================== Model Actions 逻辑实现 ======================\n   */\n\n  const { namespace, state, reducers, effects, m: modern, effectFactory } = model;\n  const reducersMap: any = {};\n  const TYPES: any = {};\n  let actions = Object.keys(reducers).reduce<Actions>((actions, doSomething: ReducerName) => {\n    type Action = typeof reducers[typeof doSomething];\n    type Payload = TkitUtils.GetArgumentsType<Action>[1];\n    const type = (TYPES[doSomething] = `${namespace}/${doSomething}`);\n    // 引入 immer & 自动 namespace 隔离\n    reducersMap[type] =\n      modern === ModernType.ReduxModern\n        ? <S>(state: S, action: AbstractAction) => {\n            return {\n              ...state,\n              [namespace]: produce(state[namespace], (draftState: Readonly<M>) =>\n                reducers[doSomething](draftState, action)\n              )\n            };\n          }\n        : modern === ModernType.HookModern\n        ? <S>(state: S, action: AbstractAction) => {\n            // FIXME: as any\n            return produce(state, (draftState) => reducers[doSomething](draftState as any, action));\n          }\n        : reducers[doSomething];\n    actions[doSomething] = ((payload: Payload['payload']) =>\n      createAction(type, payload)) as Actions[typeof doSomething];\n    return actions;\n  }, {} as Actions);\n\n  // TODO: Hooks Model 其实可以不执行下边的逻辑，在 useModel 会再重新覆盖一遍 actions[effectName]\n  if (effects) {\n    actions = Object.keys(effects).reduce((actions, doSomethingAsync: EffectName) => {\n      type Action = typeof effects[typeof doSomethingAsync];\n      type Payload = TkitUtils.GetArgumentsType<Action>[1];\n      const type = (TYPES[doSomethingAsync] = `${namespace}/${doSomethingAsync}`);\n      if (doSomethingAsync in actions) {\n        console.error(`[Critical Error]: action '${doSomethingAsync}' already exists!!`);\n      } else {\n        actions[doSomethingAsync] = ((payload: Payload['payload']) =>\n          createAction(type, payload)) as Actions[typeof doSomethingAsync];\n        let effect = effects[doSomethingAsync];\n        let effectOptions = defaultEffectOptions;\n        if (Array.isArray(effect)) {\n          effectOptions = { ...defaultEffectOptions, ...effect[1] };\n          effect = effect[0];\n        }\n        effectFactory && effectFactory(effect, type, effectOptions);\n      }\n      return actions;\n    }, actions);\n  }\n\n  return {\n    state,\n    actions,\n    reducers: handleActions(reducersMap, state),\n    TYPES: TYPES as ActionTypes,\n    effects: { ...effects } as E, // force no undefined\n    namespace,\n    __model: model\n  };\n}\n","/**\n * @file: model factory\n * @author: yangqianjun\n * @Date: 2020-02-06 17:24:42\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-06 19:37:28\n */\n\nexport * from './types';\nexport * from './consts';\nexport * from './utils';\nexport * from './factory';\nexport { default } from './factory';\n","/**\n * @file: 入口\n * @author: yangqianjun\n * @Date: 2020-02-06 16:31:18\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 15:22:42\n */\n\nexport * from './action';\n\nexport * from './effects/put';\nexport * from './effects/call';\n\nexport * from './model/reducer';\nexport * from './model/effects';\nexport * from './effectUtils';\nexport * from './async';\n","/**\n * @file: 与 @ekit/async 交互的逻辑\n * @author: yangqianjun\n * @Date: 2020-02-07 10:34:24\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 15:52:41\n */\n\nimport EventCenter from '@ekit/event-center';\nimport { IAsyncConfirmedMsg } from '../types';\nimport { ASYNC_EFFECT_EVENT_NAME, fakeEffectRes } from '../consts';\n\n/** simulate an effect */\nexport const FakeEffectFactory = ({\n  effectName,\n  silent,\n  loading\n}: {\n  effectName: string;\n  /** whether do nothing */\n  silent?: boolean;\n  /** whether show loading */\n  loading?: boolean;\n}) => {\n  let rs: (...args: any) => any = () => 0;\n  const res: {\n    code?: number;\n    message?: React.ReactNode;\n  } = {\n    code: 0,\n    message: false\n  };\n  const getMsg = () => typeof res.message !== 'object' && res.message;\n  let interactEffect: Function = rs;\n  // 自动模拟 loading & 成功错误信息效果\n  if (silent !== true) {\n    interactEffect = () => {\n      res.code = 0;\n      res.message = false;\n      // IMP: 有些Effects可能是同步的，所以对rs的赋值必须是同步，而不是在fetch被调用的时候\n      const prom = new Promise((resolve) => {\n        // IMP: fakeEffect must be successful // 我有点记不得这是为啥了\n        // loading 交互效果由 prom mock 出来，在真正的 fetch effect 执行完成后 resolve\n        // FIX: 如果恒返回 fakeEffectRes，那么错误信息就显示不出来\n        rs = (r) => resolve(r || fakeEffectRes);\n      });\n      const asyncPayload: IAsyncConfirmedMsg = {\n        fetch: () => prom,\n        errorMsg: getMsg,\n        successMsg: getMsg,\n        effectName,\n        indicator: loading === false ? loading : undefined,\n        channel: '@ekit/model/effect'\n      };\n      EventCenter.emit(ASYNC_EFFECT_EVENT_NAME, {\n        type: 'doAsyncConfirmed',\n        payload: asyncPayload\n      });\n    };\n  }\n  return {\n    getRes: () => res,\n    getResolver: () => rs,\n    getEffect: () => interactEffect\n  };\n};\n","/**\n * @file: description\n * @author: yangqianjun\n * @Date: 2020-02-06 16:33:09\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 15:40:25\n */\n\nexport * from './putWrapper';\nexport * from './async';\n","/**\n * @file: description\n * @author: yangqianjun\n * @Date: 2020-02-06 18:09:08\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 20:48:18\n */\n\nimport { ItPut, Tction } from '../types';\n\n/**\n * for Redux and Hooks Model dispatch wrapper\n * @param put Dispatch\n */\nexport function putWrapper(put: ItPut) {\n  return <E>(effect: E, ...args: any): any => {\n    if (typeof effect === 'function') {\n      return put(effect(...args));\n    } else if (typeof effect === 'string') {\n      // FIXME: 为什么是 args[1] ？？\n      return put({ type: effect, payload: args[1] } as Tction<any>);\n    } else if (typeof effect === 'object') {\n      return put((effect as unknown) as Tction<any>);\n    }\n    return undefined;\n  };\n}\n","/**\n * @file: description\n * @author: yangqianjun\n * @Date: 2019-07-20 15:12:00\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 16:35:02\n */\n\nexport * from '@ekit/model-factory';\nexport { M, MM, useModel } from '@ekit/use-model';\nexport { CM } from '@ekit/redux-model';\nexport { default, promiseMiddleware } from '@ekit/redux-model';\n","/**\n * @file: 集成 immer、并真正利用 namespace\n * @author: yangqianjun\n * @Date: 2019-12-20 09:32:15\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 19:48:35\n */\n\nimport { TkitUtils } from '@ekit/types';\nimport { CMReducers, ModernType } from '@ekit/model-factory';\nimport { ReduxModelEffects } from './types';\nimport createModel from './createModel';\n\nexport function CM<M, R extends CMReducers<M>, E extends ReduxModelEffects>(model: {\n  /** 命令空间，用以做自动 redux store 隔离 */\n  namespace: string;\n  /** 初始状态 */\n  state: M;\n  /** 集成 immer */\n  reducers: R;\n  effects: E;\n}) {\n  // cheat\n  return createModel<\n    M,\n    {\n      [doSomething in keyof R]: (\n        state: M,\n        action: TkitUtils.GetArgumentsType<R[doSomething]>[1]\n      ) => M;\n    },\n    E\n  >({ ...model, m: ModernType.ReduxModern } as any);\n}\n","/**\n * @author: yangqianjun\n * @file: 类似 dva model 的 TypeScript 封装\n * @Date: 2019-11-19 16:14:12\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 20:52:54\n */\n\nimport * as sagaEffects from 'redux-saga/effects';\nimport factory, {\n  ItPut,\n  ItCall,\n  Reducers,\n  ModernType,\n  putWrapper,\n  IEffectFactory,\n  TKIT_EFFECT,\n  ItNBPut,\n  TKIT_NB_EFFECT,\n  fakeUtilsThrowErrorIfInvoked,\n  TKIT_SUB_EFFECT\n} from '@ekit/model-factory';\nimport { ReduxModelEffects, ReduxModelEffectsUtils } from './types';\nimport { effectWrapper } from './effectWrapper';\n\nconst { all, call } = sagaEffects;\n\n// for Redux Saga V0\nexport function* globalPut<A>(action: A): any {\n  action[TKIT_SUB_EFFECT] = true;\n  const res = yield sagaEffects.put(action as any);\n  return res && typeof res['then'] === 'function' ? yield res : res;\n}\n\n// export function* globalPut<A>(action: A): any {\n//   try {\n//     action[TKIT_SUB_EFFECT] = true;\n//     const res = yield sagaEffects.put(action as any);\n//     return res && typeof res['then'] === 'function' ? yield res : res;\n//   } catch (error) {\n//     // TODO: not quite sure\n//     return yield sagaEffects.cancel();\n//   }\n// }\n\n// TODO: for Redux Saga v1\n// action[TKIT_SUB_EFFECT] = true;\n// if (process.env.NODE_ENV === 'development' && typeof sagaEffects.putResolve === 'undefined') {\n//   throw Error(`1.*.* Version of Redux Saga Required`);\n// }\n// export const globalPut = sagaEffects.putResolve as any;\n\nconst wrappedPut = putWrapper(globalPut);\n\n/** TypeSafe tPut Blocking */\nexport const tPut: ItPut = (effect: string, ...args: any[]) => {\n  return wrappedPut(effect, ...args);\n};\n\nconst wrappedNBPut = putWrapper(<A>(action: A): any => {\n  // 非阻塞\n  action[TKIT_NB_EFFECT] = true;\n  return sagaEffects.put(action as any);\n});\n\n/** TypeSafe tNBPut Non Blocking */\nexport const tNBPut: ItNBPut = (effect: string, ...args: any[]) => wrappedNBPut(effect, ...args);\n\n/** 用以替代 redux-saga call 的 typed tCall */\nexport const tCall: ItCall = <E extends (...args: any[]) => any>(\n  effect: E,\n  ...args: any[]\n): Iterator<ReturnType<E>> => {\n  // 不可以: sagaCall(effect, ...args)\n  return call.apply(null, [effect, ...args]);\n};\n\n/**\n * Model工厂\n * @param model\n * @param model.namespace 命令空间\n * @param model.state 初始状态\n * @param model.reducers 推导reducers和同步actions\n * @param model.effects 副作用，推导异步actions\n */\nexport default function createModel<M, R extends Reducers<M>, E extends ReduxModelEffects>(model: {\n  /** 命名空间 */\n  namespace: string;\n  /**  初始状态 */\n  state: M;\n  reducers: R;\n  effects?: E;\n  /** modern 模式，引入 immer，解决 namespace 的问题 */\n  m?: ModernType;\n}) {\n  const { namespace } = model;\n  const sagas: any[] = [];\n  const TypedEffects: ReduxModelEffectsUtils = {\n    ...sagaEffects,\n    namespace,\n    /** 仅generator适用 */\n    tPut,\n    /** 仅generator适用 */\n    tNBPut,\n    /** 仅generator适用 */\n    tCall,\n    asyncSelect: fakeUtilsThrowErrorIfInvoked as any,\n    asyncPut: fakeUtilsThrowErrorIfInvoked as any,\n    asyncNBPut: fakeUtilsThrowErrorIfInvoked as any\n  };\n\n  if (process.env.NODE_ENV === 'development') {\n    [\n      ...Object.keys(model.reducers),\n      ...((model.effects && Object.keys(model.effects)) || [])\n    ].forEach(action => {\n      if (action in createModel.ActionNameMap) {\n        throw Error(\n          `model ${namespace} ${action} 已存在于 model ${createModel.ActionNameMap[action]}，存在不可控风险`\n        );\n      }\n      createModel.ActionNameMap[action] = namespace;\n    });\n  }\n\n  const effectFactory: IEffectFactory = (effect, type, options) => {\n    const wrappedEffect = effectWrapper(effect, TypedEffects, type, options);\n    switch (options.type) {\n      case 'throttle':\n        sagas.push(sagaEffects.throttle(options.ms || 100, type, wrappedEffect));\n        break;\n      case 'takeEvery':\n      case 'takeLatest':\n        sagas.push(sagaEffects[options.type](type, wrappedEffect));\n        break;\n    }\n  };\n\n  const ReduxModel = {\n    ...factory({\n      ...model,\n      effectFactory\n    }),\n    *sagas() {\n      yield all(sagas);\n    }\n  };\n\n  // 写入 tkit action type 标记\n  const { effects } = model;\n  const { actions } = ReduxModel;\n  if (effects) {\n    Object.keys(effects).forEach((doSomethingAsync: keyof E) => {\n      const creator = actions[doSomethingAsync];\n      // 实际上 creator 并不是返回的 promise，只是类型上包装成 promise，经过了 middleware 包装才是\n      actions[doSomethingAsync] = ((...args: any) => ({\n        ...((creator as any)(...args) as any),\n        [TKIT_EFFECT]: true\n      })) as typeof creator;\n    });\n  }\n\n  return ReduxModel;\n}\n\n/** 开发环境下，对 action name 进行唯一性校验，避免复杂项目下潜在风险 */\n// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\ncreateModel.ActionNameMap = <{ [action: string]: string }>{};\n","/**\n * @file: description\n * @author: yangqianjun\n * @Date: 2020-02-07 11:11:17\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 15:34:46\n */\n\nimport { cancelled } from 'redux-saga/effects';\nimport {\n  EFFECTS_START,\n  EFFECTS_END,\n  FakeEffectFactory,\n  EFFECTS_ERROR,\n  IEffectWrapper,\n  Tction,\n  putWrapper,\n  EFFECTS_PROMISE_RESOLVE,\n  EFFECTS_PROMISE_REJECT,\n  TKIT_DISPATCH,\n  TKIT_GET_STATE,\n  TKIT_NB_EFFECT,\n  TKIT_SUB_EFFECT,\n  printError\n} from '@ekit/model-factory';\nimport { ReduxModelEffectsUtils } from './types';\n\n/** for Redux Model */\nexport const effectWrapper: IEffectWrapper = (effect, effects, effectName, options) => {\n  const { tPut: put } = effects;\n  /**\n   * 默认不展示loading\n   */\n  const loading = (options && options.loading) || false;\n  const silent = options && options.silent;\n  /**\n   * 局部Model不再使用gerator\n   */\n  return function* wrapper(action: Tction<any>) {\n    const isTopEffect = !action[TKIT_SUB_EFFECT];\n    isTopEffect && (yield put({ type: EFFECTS_START, payload: { effectName } } as any));\n    const { getResolver, getRes, getEffect } = FakeEffectFactory({\n      effectName,\n      silent,\n      loading\n    });\n    isTopEffect && getEffect()();\n    const res = getRes();\n    try {\n      if (action[TKIT_DISPATCH]) {\n        // IMP: 注入 asyncPut\n        effects.asyncPut = putWrapper((act: Tction<any>) => {\n          // IMP: 不单独显示 loading、error\n          act[TKIT_SUB_EFFECT] = true;\n          return action[TKIT_DISPATCH](act);\n        });\n        const wrappedNBDispatch = (act: Tction<any>) => {\n          // 非阻塞\n          act[TKIT_NB_EFFECT] = true;\n          return action[TKIT_DISPATCH](act);\n        };\n        effects.asyncNBPut = putWrapper(wrappedNBDispatch);\n        // IMP: 注入 asyncSelect\n        ((effects as unknown) as ReduxModelEffectsUtils).asyncSelect = f =>\n          f(action[TKIT_GET_STATE]());\n      }\n      if (typeof effect === 'function') {\n        const mayBePromise = yield effect(effects, action);\n        // 阻塞 Effect\n        if (!action[TKIT_NB_EFFECT]) {\n          // TODO: 如果使用 Redux Saga putResolve，下边 res.message 赋值逻辑疑似可以去掉\n          res.message =\n            mayBePromise && typeof mayBePromise['then'] === 'function'\n              ? yield mayBePromise\n              : mayBePromise;\n        }\n      }\n    } catch (error) {\n      res.code = 10100;\n      res.message = error && error['message'] ? error['message'] : error;\n      // IMP: 确保打印被自动捕获的错误信息\n      try {\n        isTopEffect && (yield put({ type: EFFECTS_ERROR, payload: { effectName, error } } as any));\n      } catch (error) {\n        printError(`EFFECTS_ERROR: ${effectName} ${(error && error.message) || error}`);\n      }\n    } finally {\n      // IMP: Redux Saga cancel\n      const isCancelled = yield cancelled();\n      isTopEffect &&\n        (yield put({ type: EFFECTS_END, payload: { effectName, cancelled: isCancelled } } as any));\n      // cancel 10499 && 阻塞 Effect\n      if (isCancelled) {\n        res.code = res.message = 10499;\n      }\n      // IMP: 确保打印被自动捕获的错误信息\n      if (res.code) {\n        // IMP: cancel 不要打印错误信息\n        res.code !== 10499 && printError(`EFFECTS_ERROR: ${effectName} ${res.message}`);\n        // 阻塞 Effect\n        if (action[EFFECTS_PROMISE_REJECT]) {\n          action[EFFECTS_PROMISE_REJECT](res.message);\n        }\n      } else {\n        if (action[EFFECTS_PROMISE_RESOLVE]) {\n          action[EFFECTS_PROMISE_RESOLVE](res.message);\n        }\n      }\n      // 隐藏 loading\n      isTopEffect && getResolver()(res);\n    }\n  };\n};\n","/**\n * @file: description\n * @author: yangqianjun\n * @Date: 2019-07-20 15:12:00\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 17:18:36\n */\n\nexport * from 'redux-saga/effects';\nexport * from '@ekit/model-factory';\nexport * from './cm';\nexport * from './createModel';\nexport * from './promiseMiddleware';\nexport { default } from './createModel';\n","import { Middleware } from 'redux';\nimport {\n  EFFECTS_PROMISE_RESOLVE,\n  EFFECTS_PROMISE_REJECT,\n  TKIT_EFFECT,\n  TKIT_DISPATCH,\n  TKIT_GET_STATE,\n  TKIT_NB_EFFECT,\n  noop\n} from '@ekit/model-factory';\n\n/** promise redux 中间件 */\nexport const promiseMiddleware: Middleware = ({ dispatch, getState }) => next => action => {\n  // 私有协议\n  if (action[TKIT_EFFECT] && !action[TKIT_NB_EFFECT]) {\n    const prom = new Promise((resolve, reject) => {\n      next({\n        [EFFECTS_PROMISE_RESOLVE]: resolve,\n        [EFFECTS_PROMISE_REJECT]: reject,\n        [TKIT_DISPATCH]: dispatch,\n        [TKIT_GET_STATE]: getState,\n        ...action\n      });\n    });\n    // IMP: 自动捕获且不打印错误，在 effectWrapper 里打印\n    prom.then(noop, noop);\n    return prom;\n  } else {\n    return next(action);\n  }\n};\n","/**\n * @file: description\n * @author: yangqianjun\n * @Date: 2020-02-07 11:11:17\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 15:34:36\n */\n\nimport {\n  EFFECTS_START,\n  EFFECTS_END,\n  FakeEffectFactory,\n  EFFECTS_ERROR,\n  IEffectWrapper,\n  Tction,\n  EFFECTS_PROMISE_RESOLVE,\n  EFFECTS_PROMISE_REJECT,\n  TKIT_SUB_EFFECT,\n  printError\n} from '@ekit/model-factory';\n\n/** for Hooks model */\nexport const effectWrapper: IEffectWrapper = (effect, effects, effectName, options) => {\n  const { tPut: put } = effects;\n  // 默认不展示loading\n  const loading = (options && options.loading) || false;\n  const silent = options && options.silent;\n  // 局部Model不再使用gerator\n  return async (action: Tction<any>) => {\n    const isTopEffect = !action[TKIT_SUB_EFFECT];\n    isTopEffect && (await put({ type: EFFECTS_START, payload: { effectName } } as any));\n    const { getResolver, getRes, getEffect } = FakeEffectFactory({\n      effectName,\n      silent,\n      loading\n    });\n    isTopEffect && getEffect()();\n    const res = getRes();\n    try {\n      if (typeof effect === 'function') {\n        const maybePromise = effect(effects, action);\n        res.message = (await maybePromise) || false;\n      }\n    } catch (error) {\n      res.code = 10100;\n      res.message = error && error['message'] ? error['message'] : error;\n      // IMP: 确保打印被自动捕获的错误信息\n      try {\n        isTopEffect && (await put({ type: EFFECTS_ERROR, payload: { effectName, error } } as any));\n      } catch (error) {\n        printError(`HOOKS_EFFECTS_ERROR: ${effectName} ${(error && error.message) || error}`);\n      }\n    } finally {\n      isTopEffect && (await put({ type: EFFECTS_END, payload: { effectName } } as any));\n      if (res.code) {\n        // IMP: 确保打印被自动捕获的错误信息\n        printError(`HOOKS_EFFECTS_ERROR: ${effectName} ${res.message}`);\n        if (action[EFFECTS_PROMISE_REJECT]) {\n          action[EFFECTS_PROMISE_REJECT](res.message);\n        }\n      } else {\n        if (action[EFFECTS_PROMISE_RESOLVE]) {\n          action[EFFECTS_PROMISE_RESOLVE](res.message);\n        }\n      }\n      // 隐藏 loading\n      isTopEffect && getResolver()(res);\n    }\n  };\n};\n","/**\n * @file: description\n * @author: yangqianjun\n * @Date: 2020-02-06 19:49:17\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-06 20:20:57\n */\n\nexport * from '@ekit/model-factory';\nexport * from './types';\nexport * from './m';\nexport * from './mm';\nexport * from './useModel';\n","/**\n * @file: 局部 model with immer\n * @author: yangqianjun\n * @Date: 2020-02-06 19:48:10\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 17:50:00\n */\n\nimport factory, { Reducers } from '@ekit/model-factory';\nimport { HooksModelEffects } from './types';\n\n/**\n * Model工厂\n * @param model\n * @param model.namespace 命令空间\n * @param model.state 初始状态\n * @param model.reducers 推导reducers和同步actions\n * @param model.effects 副作用，推导异步actions\n */\nexport function Model<M, R extends Reducers<M>, E extends HooksModelEffects>(model: {\n  /** 命令空间，区分日志使用 */\n  namespace: string;\n  /** 初始状态 */\n  state: M;\n  reducers: R;\n  effects: E;\n}) {\n  return factory(model);\n}\n\nexport const M = Model;\n","/**\n * @file: 局部 model with immer\n * @author: yangqianjun\n * @Date: 2020-02-06 19:55:21\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 17:53:22\n */\n\nimport { TkitUtils } from '@ekit/types';\nimport { CMReducers, ModernType } from '@ekit/model-factory';\nimport { HooksModelEffects } from './types';\nimport { M } from './m';\n\nexport function MM<M, R extends CMReducers<M>, E extends HooksModelEffects>(model: {\n  /** 命令空间，区分日志使用 */\n  namespace: string;\n  /** 初始状态 */\n  state: M;\n  reducers: R;\n  effects: E;\n}) {\n  // cheat\n  return M<\n    M,\n    {\n      [doSomething in keyof R]: (\n        state: M,\n        action: TkitUtils.GetArgumentsType<R[doSomething]>[1]\n      ) => M;\n    },\n    E\n  >({ ...model, m: ModernType.HookModern } as any);\n}\n","/**\n * @file: description\n * @author: yangqianjun\n * @Date: 2020-02-06 19:48:29\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-02-07 18:30:32\n */\n\nimport 'react';\nimport {\n  BaseEffectsUtils,\n  HooksModelEffectWithPayload,\n  MixHooksModelEffectWithPayload\n} from '@ekit/model-factory';\n\ndeclare global {\n  interface Window {\n    /**\n     * 局部Model调试工具函数\n     */\n    __TKIT_USE_MODEL_LOGGER__: (...args: any) => any;\n  }\n}\n\n/** useModel effects */\nexport interface HooksModelEffects {\n  [doSomethingAsync: string]:\n    | HooksModelEffectWithPayload<BaseEffectsUtils>\n    | MixHooksModelEffectWithPayload<BaseEffectsUtils>;\n}\n","/**\n * @description 基于 React Hooks 封装的 model，适用于局部状态\n */\nimport { useReducer, useMemo, useEffect, useRef } from 'react';\nimport {\n  Tction,\n  putWrapper,\n  EffectOptions,\n  EFFECTS_PROMISE_RESOLVE,\n  EFFECTS_PROMISE_REJECT,\n  markSubEffect,\n  printError,\n  noop\n} from '@ekit/model-factory';\nimport { effectWrapper } from './effectWrapper';\n\nexport const tCall = <E extends (...args: any[]) => any>(\n  effect: E,\n  ...args: any[]\n): ReturnType<E> => {\n  console.error(`画蛇添足，请直接直接调用“effect.name”`);\n  return effect.apply(args);\n};\n\nconst localOpts = { local: true };\n\n/**\n * 类似 Redux 的 bindActionToDispatch\n */\nexport function bindDispatchToAction<A, E, M extends { actions: A; effects: E; TYPES: any }>(\n  actions: A,\n  dispatch: ReturnType<typeof useReducer>[1],\n  model: M\n) {\n  const { effects: modelEffects } = model;\n  const wrappedEffects: E = {} as E;\n  /** 在 dispatch 过程中副作用 */\n  const wrappedDiaptch = <A>(action: A) => {\n    dispatch(action);\n    const effect = wrappedEffects[action['type']];\n    return effect\n      ? new Promise((rs, rj) => {\n          action[EFFECTS_PROMISE_RESOLVE] = rs;\n          action[EFFECTS_PROMISE_REJECT] = rj;\n          effect(action);\n        })\n      : void 0;\n  };\n\n  const blockingDispatch = <A>(action: A) => {\n    const maybePromise = wrappedDiaptch(action);\n    return maybePromise || action;\n  };\n  /** 阻塞 */\n  const wrappedTopPut = putWrapper(<A>(action: A) => {\n    return blockingDispatch(action);\n  });\n  // IMP: 阻塞自动 loading、error 单一\n  const wrappedPut = putWrapper(<A>(action: A) => {\n    markSubEffect(action);\n    return blockingDispatch(action);\n  });\n\n  const nonBlockingDispatch = <A>(action: A) => {\n    const maybePromise = wrappedDiaptch(action);\n    if (maybePromise) {\n      // IMP: 捕获但不打印错误，在 effectWrapper 里打印\n      maybePromise.catch(noop);\n    }\n    return action;\n  };\n  /** 非阻塞 */\n  const wrappedNBPut = putWrapper(<A>(action: A) => {\n    return nonBlockingDispatch(action);\n  });\n  // IMP: 非阻塞自动 loading、error 处理独立\n  const wrappedTopNBPut = wrappedNBPut; /**putWrapper(<A>(action: A) => {\n    return nonBlockingDispatch(action);\n  });*/\n\n  const effectsUtils = {\n    tPut: wrappedPut,\n    tNBPut: wrappedNBPut,\n    asyncPut: wrappedPut,\n    asyncNBPut: wrappedNBPut,\n    tCall,\n    namespace: model['namespace']\n  };\n\n  // IMP: 不同于全局 store，需要关联 dispatch\n  // eslint-disable-next-line prefer-const\n  return Object.keys(actions).reduce((newActions, actionName) => {\n    {\n      const originEffect = modelEffects[actionName];\n      const opts: EffectOptions = Array.isArray(originEffect)\n        ? { ...originEffect[1], ...localOpts }\n        : localOpts;\n      if (originEffect) {\n        wrappedEffects[model.TYPES[actionName]] = effectWrapper(\n          Array.isArray(originEffect) ? originEffect[0] : originEffect,\n          effectsUtils,\n          model.TYPES[actionName],\n          opts\n        );\n      }\n    }\n    {\n      const originAction = actions[actionName];\n      newActions[actionName] = modelEffects[actionName]\n        ? (...args: any) => wrappedTopPut(originAction, ...args)\n        : (...args: any) => wrappedTopNBPut(originAction, ...args);\n    }\n    return newActions;\n  }, {}) as typeof actions;\n}\n\n/**\n * 注入调试工具\n */\nconst commonReducer: (reducer: <M>(prevState: M, action: Tction<any>) => M) => any =\n  process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test'\n    ? (reducer) =>\n        useMemo(\n          () => <M>(prevState: M, action: Tction<any>) => {\n            const newState = reducer(prevState, action);\n            if (window.__TKIT_USE_MODEL_LOGGER__) {\n              window.__TKIT_USE_MODEL_LOGGER__(\n                'LOCAL ACTION',\n                action['type'],\n                prevState,\n                action,\n                newState\n              );\n            }\n            return newState;\n          },\n          [reducer]\n        )\n    : (reducer) => reducer;\n\n/**\n * Hooks Model\n */\nexport const useModel = <\n  M extends {\n    reducers: any;\n    actions: any;\n    state: any;\n    effects: any;\n    TYPES: any;\n    namespace: string;\n  }\n>(\n  model: M,\n  initialState: M['state'] = model['state']\n) => {\n  const [store, dispatch] = useReducer(commonReducer(model.reducers), initialState);\n\n  const isNotUnmounted = useRef(true);\n  // @IMP: 解除 dispatch 响应，避免内存泄露\n  useEffect(() => {\n    return () => {\n      isNotUnmounted.current = false;\n    };\n  }, []);\n\n  return [\n    store,\n    useMemo(\n      () =>\n        bindDispatchToAction(\n          model.actions,\n          // eslint-disable-next-line prefer-spread\n          (...args) => isNotUnmounted.current && dispatch.apply(null, args),\n          model\n        ),\n      [model, dispatch]\n    )\n  ] as [M extends { state: any } ? M['state'] : {}, M extends { actions: any } ? M['actions'] : {}];\n};\nexport default useModel;\n"],"sourceRoot":""}
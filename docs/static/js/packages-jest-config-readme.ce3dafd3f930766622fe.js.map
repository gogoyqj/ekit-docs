{"version":3,"sources":["/Users/yangqianjun/Documents/project/e-kit/ekit/packages/jest-config/README.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kXASMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,eADR,eAGA,iEACA,qBAAG,0BAAYC,WAAW,KAAvB,+BACH,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,uFAML,iBAAQ,CACN,GAAM,UADR,UAGA,iBAAQ,CACN,GAAM,2BADR,2BAGA,oHACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6DAKL,iBAAQ,CACN,GAAM,wBADR,wBAGA,2FAAmB,sBAAQA,WAAW,KAAnB,SAAnB,0BAA6E,sBAAQA,WAAW,KAAnB,SAA7E,mBACA,uFACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,qI,qLAWTJ,EAAWK,gBAAiB","file":"static/js/packages-jest-config-readme.c1c8887b.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"jest-config\"\n    }}>{`Jest Config`}</h1>\n    <p>{`Tkit Jest 配置封装。`}</p>\n    <p><inlineCode parentName=\"p\">{`npm i -D @ekit/jest-config`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const jestConfig = require('@ekit/jest-config');\n\nmodule.exports = jestConfig;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"config\"\n    }}>{`Config`}</h2>\n    <h2 {...{\n      \"id\": \"--配置-polyfill\"\n    }}>{`- 配置 Polyfill`}</h2>\n    <p>{`在当前应用根目录下创建 config/polyfill.js：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`require('@ekit/config/polyfills.js');\n// do something\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"--配置-setup\"\n    }}>{`- 配置 Setup`}</h2>\n    <p>{`在当前应用根目录下创建 `}<strong parentName=\"p\">{`tests`}</strong>{`/setup.ts 或者 `}<strong parentName=\"p\">{`tests`}</strong>{`/setup.js。`}</p>\n    <p>{`例如初始化 Enzyme React 环境：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nconfigure({ adapter: new Adapter() });\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}
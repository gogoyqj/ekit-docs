!function(e){function t(t){for(var a,r,i=t[0],s=t[1],o=t[2],l=t[3]||[],u=0,c=[];u<i.length;u++)r=i[u],Object.prototype.hasOwnProperty.call(C,r)&&C[r]&&c.push(C[r][0]),C[r]=0;for(a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a]);for(U&&U(t),N.push.apply(N,l);c.length;)c.shift()();return F.push.apply(F,o||[]),n()}function n(){for(var e,t=0;t<F.length;t++){for(var n=F[t],a=!0,r=1;r<n.length;r++){var i=n[r];0!==C[i]&&(a=!1)}a&&(F.splice(t--,1),e=j(j.s=n[0]))}return 0===F.length&&(N.forEach((function(e){if(void 0===C[e]){C[e]=null;var t=document.createElement("link");t.crossOrigin="anonymous",j.nc&&t.setAttribute("nonce",j.nc),t.rel="prefetch",t.as="script",t.href=L(e),document.head.appendChild(t)}})),N.length=0),e}var a=window.webpackHotUpdate;window.webpackHotUpdate=function(e,t){!function(e,t){if(!A[e]||!x[e])return;for(var n in x[e]=!1,t)Object.prototype.hasOwnProperty.call(t,n)&&(f[n]=t[n]);0===--b&&0===v&&q()}(e,t),a&&a(e,t)};var r,i=!0,s="ce3dafd3f930766622fe",o={},l=[],u=[];function c(t){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:r!==t,active:!0,accept:function(e,t){if(void 0===e)n._selfAccepted=!0;else if("function"===typeof e)n._selfAccepted=e;else if("object"===typeof e)for(var a=0;a<e.length;a++)n._acceptedDependencies[e[a]]=t||function(){};else n._acceptedDependencies[e]=t||function(){}},decline:function(e){if(void 0===e)n._selfDeclined=!0;else if("object"===typeof e)for(var t=0;t<e.length;t++)n._declinedDependencies[e[t]]=!0;else n._declinedDependencies[e]=!0},dispose:function(e){n._disposeHandlers.push(e)},addDisposeHandler:function(e){n._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=n._disposeHandlers.indexOf(e);t>=0&&n._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,p){case"idle":(f={})[t]=e[t],h("ready");break;case"ready":S(t);break;case"prepare":case"check":case"dispose":case"apply":(y=y||[]).push(t)}},check:w,apply:R,status:function(e){if(!e)return p;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var t=d.indexOf(e);t>=0&&d.splice(t,1)},data:o[t]};return r=void 0,n}var d=[],p="idle";function h(e){p=e;for(var t=0;t<d.length;t++)d[t].call(null,e)}var m,f,g,y,b=0,v=0,k={},x={},A={};function V(e){return+e+""===e?+e:e}function w(e){if("idle"!==p)throw new Error("check() is only allowed in idle status");return i=e,h("check"),(t=1e4,t=t||1e4,new Promise((function(e,n){if("undefined"===typeof XMLHttpRequest)return n(new Error("No browser support"));try{var a=new XMLHttpRequest,r=j.p+""+s+".hot-update.json";a.open("GET",r,!0),a.timeout=t,a.send(null)}catch(i){return n(i)}a.onreadystatechange=function(){if(4===a.readyState)if(0===a.status)n(new Error("Manifest request to "+r+" timed out."));else if(404===a.status)e();else if(200!==a.status&&304!==a.status)n(new Error("Manifest request to "+r+" failed."));else{try{var t=JSON.parse(a.responseText)}catch(i){return void n(i)}e(t)}}}))).then((function(e){if(!e)return h(E()?"ready":"idle"),null;x={},k={},A=e.c,g=e.h,h("prepare");var t=new Promise((function(e,t){m={resolve:e,reject:t}}));for(var n in f={},C)T(n);return"prepare"===p&&0===v&&0===b&&q(),t}));var t}function T(e){A[e]?(x[e]=!0,b++,function(e){var t=document.createElement("script");t.charset="utf-8",t.src=j.p+""+e+"."+s+".hot-update.js",t.crossOrigin="anonymous",document.head.appendChild(t)}(e)):k[e]=!0}function q(){h("ready");var e=m;if(m=null,e)if(i)Promise.resolve().then((function(){return R(i)})).then((function(t){e.resolve(t)}),(function(t){e.reject(t)}));else{var t=[];for(var n in f)Object.prototype.hasOwnProperty.call(f,n)&&t.push(V(n));e.resolve(t)}}function R(t){if("ready"!==p)throw new Error("apply() is only allowed in ready status");return function t(n){var a,i,u,c,d;function p(e){for(var t=[e],n={},a=t.map((function(e){return{chain:[e],id:e}}));a.length>0;){var r=a.pop(),i=r.id,s=r.chain;if((c=I[i])&&(!c.hot._selfAccepted||c.hot._selfInvalidated)){if(c.hot._selfDeclined)return{type:"self-declined",chain:s,moduleId:i};if(c.hot._main)return{type:"unaccepted",chain:s,moduleId:i};for(var o=0;o<c.parents.length;o++){var l=c.parents[o],u=I[l];if(u){if(u.hot._declinedDependencies[i])return{type:"declined",chain:s.concat([l]),moduleId:i,parentId:l};-1===t.indexOf(l)&&(u.hot._acceptedDependencies[i]?(n[l]||(n[l]=[]),m(n[l],[i])):(delete n[l],t.push(l),a.push({chain:s.concat([l]),id:l})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function m(e,t){for(var n=0;n<t.length;n++){var a=t[n];-1===e.indexOf(a)&&e.push(a)}}E();var b={},v=[],k={},x=function(){console.warn("[HMR] unexpected require("+T.moduleId+") to disposed module")};for(var w in f)if(Object.prototype.hasOwnProperty.call(f,w)){var T;d=V(w),T=f[w]?p(d):{type:"disposed",moduleId:w};var q=!1,R=!1,S=!1,F="";switch(T.chain&&(F="\nUpdate propagation: "+T.chain.join(" -> ")),T.type){case"self-declined":n.onDeclined&&n.onDeclined(T),n.ignoreDeclined||(q=new Error("Aborted because of self decline: "+T.moduleId+F));break;case"declined":n.onDeclined&&n.onDeclined(T),n.ignoreDeclined||(q=new Error("Aborted because of declined dependency: "+T.moduleId+" in "+T.parentId+F));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(T),n.ignoreUnaccepted||(q=new Error("Aborted because "+d+" is not accepted"+F));break;case"accepted":n.onAccepted&&n.onAccepted(T),R=!0;break;case"disposed":n.onDisposed&&n.onDisposed(T),S=!0;break;default:throw new Error("Unexception type "+T.type)}if(q)return h("abort"),Promise.reject(q);if(R)for(d in k[d]=f[d],m(v,T.outdatedModules),T.outdatedDependencies)Object.prototype.hasOwnProperty.call(T.outdatedDependencies,d)&&(b[d]||(b[d]=[]),m(b[d],T.outdatedDependencies[d]));S&&(m(v,[T.moduleId]),k[d]=x)}var N,L=[];for(i=0;i<v.length;i++)d=v[i],I[d]&&I[d].hot._selfAccepted&&k[d]!==x&&!I[d].hot._selfInvalidated&&L.push({module:d,parents:I[d].parents.slice(),errorHandler:I[d].hot._selfAccepted});h("dispose"),Object.keys(A).forEach((function(e){!1===A[e]&&function(e){delete C[e]}(e)}));var _,M,O=v.slice();for(;O.length>0;)if(d=O.pop(),c=I[d]){var U={},G=c.hot._disposeHandlers;for(u=0;u<G.length;u++)(a=G[u])(U);for(o[d]=U,c.hot.active=!1,delete I[d],delete b[d],u=0;u<c.children.length;u++){var P=I[c.children[u]];P&&((N=P.parents.indexOf(d))>=0&&P.parents.splice(N,1))}}for(d in b)if(Object.prototype.hasOwnProperty.call(b,d)&&(c=I[d]))for(M=b[d],u=0;u<M.length;u++)_=M[u],(N=c.children.indexOf(_))>=0&&c.children.splice(N,1);h("apply"),void 0!==g&&(s=g,g=void 0);for(d in f=void 0,k)Object.prototype.hasOwnProperty.call(k,d)&&(e[d]=k[d]);var D=null;for(d in b)if(Object.prototype.hasOwnProperty.call(b,d)&&(c=I[d])){M=b[d];var z=[];for(i=0;i<M.length;i++)if(_=M[i],a=c.hot._acceptedDependencies[_]){if(-1!==z.indexOf(a))continue;z.push(a)}for(i=0;i<z.length;i++){a=z[i];try{a(M)}catch(Q){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:d,dependencyId:M[i],error:Q}),n.ignoreErrored||D||(D=Q)}}}for(i=0;i<L.length;i++){var H=L[i];d=H.module,l=H.parents,r=d;try{j(d)}catch(Q){if("function"===typeof H.errorHandler)try{H.errorHandler(Q)}catch(K){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:d,error:K,originalError:Q}),n.ignoreErrored||D||(D=K),D||(D=Q)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:d,error:Q}),n.ignoreErrored||D||(D=Q)}}if(D)return h("fail"),Promise.reject(D);if(y)return t(n).then((function(e){return v.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e}));return h("idle"),new Promise((function(e){e(v)}))}(t=t||{})}function E(){if(y)return f||(f={}),y.forEach(S),y=void 0,!0}function S(t){Object.prototype.hasOwnProperty.call(f,t)||(f[t]=e[t])}var I={},C={1:0},F=[],N=[];function L(e){return j.p+"static/js/"+({2:"packages-actions-readme",3:"packages-ajax-readme",4:"packages-async-readme",5:"packages-event-center-readme",6:"packages-event-readme",7:"packages-jest-config-readme",8:"packages-model-factory-readme",9:"packages-model-readme",10:"packages-redux-model-readme",11:"packages-types-readme",12:"packages-typescript-config-readme",13:"packages-use-model-readme",14:"packages-utils-readme"}[e]||e)+"."+{2:"958bfeea",3:"fe6b00bc",4:"74b4c814",5:"46b01b27",6:"dcda0cf7",7:"c1c8887b",8:"c976cb79",9:"74bb5e52",10:"48358830",11:"becfe0a8",12:"a35b5a86",13:"7ac981eb",14:"965aa1f2"}[e]+".js"}function j(t){if(I[t])return I[t].exports;var n=I[t]={i:t,l:!1,exports:{},hot:c(t),parents:(u=l,l=[],u),children:[]};return e[t].call(n.exports,n,n.exports,function(e){var t=I[e];if(!t)return j;var n=function(n){return t.hot.active?(I[n]?-1===I[n].parents.indexOf(e)&&I[n].parents.push(e):(l=[e],r=n),-1===t.children.indexOf(n)&&t.children.push(n)):(console.warn("[HMR] unexpected require("+n+") from disposed module "+e),l=[]),j(n)},a=function(e){return{configurable:!0,enumerable:!0,get:function(){return j[e]},set:function(t){j[e]=t}}};for(var i in j)Object.prototype.hasOwnProperty.call(j,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(n,i,a(i));return n.e=function(e){return"ready"===p&&h("prepare"),v++,j.e(e).then(t,(function(e){throw t(),e}));function t(){v--,"prepare"===p&&(k[e]||T(e),0===v&&0===b&&q())}},n.t=function(e,t){return 1&t&&(e=n(e)),j.t(e,-2&t)},n}(t)),n.l=!0,n.exports}j.e=function(e){var t=[],n=C[e];if(0!==n)if(n)t.push(n[2]);else{var a=new Promise((function(t,a){n=C[e]=[t,a]}));t.push(n[2]=a);var r,i=document.createElement("script");i.charset="utf-8",i.timeout=120,j.nc&&i.setAttribute("nonce",j.nc),i.src=L(e),0!==i.src.indexOf(window.location.origin+"/")&&(i.crossOrigin="anonymous");var s=new Error;r=function(t){i.onerror=i.onload=null,clearTimeout(o);var n=C[e];if(0!==n){if(n){var a=t&&("load"===t.type?"missing":t.type),r=t&&t.target&&t.target.src;s.message="Loading chunk "+e+" failed.\n("+a+": "+r+")",s.name="ChunkLoadError",s.type=a,s.request=r,n[1](s)}C[e]=void 0}};var o=setTimeout((function(){r({type:"timeout",target:i})}),12e4);i.onerror=i.onload=r,document.head.appendChild(i)}return Promise.all(t)},j.m=e,j.c=I,j.d=function(e,t,n){j.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},j.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},j.t=function(e,t){if(1&t&&(e=j(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(j.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)j.d(n,a,function(t){return e[t]}.bind(null,a));return n},j.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return j.d(t,"a",t),t},j.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},j.p="ekit-docs/",j.oe=function(e){throw console.error(e),e},j.h=function(){return s};var _=window.webpackJsonp=window.webpackJsonp||[],M=_.push.bind(_);_.push=t,_=_.slice();for(var O=0;O<_.length;O++)t(_[O]);var U=M,G=(F.push([0,0]),n());t([[],{},0,[0,2,3,4,5,6,7,8,9,10,11,12,13,14]])}({"./.docz/app/db.json":function(e){e.exports=JSON.parse('{"config":{"title":"Ekit","description":"ekit","menu":[],"version":"0.0.1","repository":"https://github.com/gogoyqj/ekit","native":false,"codeSandbox":true,"themeConfig":{},"separator":"-","typescript":true,"dest":"ekit","base":"ekit-docs","plugins":[{},{},{}]},"entries":[{"key":"packages/actions/README.mdx","value":{"name":"Actions","menu":"Redux","route":"ekit-docs/ekit/actions","id":"1614d7ebaf03525ce09c97e21077acb7","filepath":"packages/actions/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/actions/README.mdx","slug":"packages-actions-readme","headings":[{"slug":"actions","depth":1,"value":"Actions"},{"slug":"\u793a\u4f8b","depth":2,"value":"\u793a\u4f8b"}]}},{"key":"packages/ajax/README.mdx","value":{"name":"Ajax","menu":"Ajax","route":"ekit-docs/ekit/ajax","id":"aef1b27cc1c56d09e0df8623911faf9c","filepath":"packages/ajax/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/ajax/README.mdx","slug":"packages-ajax-readme","headings":[{"slug":"ajax","depth":1,"value":"Ajax"},{"slug":"2-api","depth":2,"value":"2. API"},{"slug":"--21-ajax","depth":2,"value":"- 2.1. Ajax"},{"slug":"ajax-1","depth":3,"value":"Ajax"},{"slug":"--22-ajaxajax","depth":2,"value":"- 2.2. Ajax.ajax"},{"slug":"wrappedfetchparams-\u63a5\u53e3","depth":3,"value":"WrappedFetchParams \u63a5\u53e3"},{"slug":"extrafetchparams-\u63a5\u53e3","depth":3,"value":"ExtraFetchParams \u63a5\u53e3"},{"slug":"example","depth":3,"value":"Example"},{"slug":"--23-tkit-\u89c4\u8303\u63a5\u53e3","depth":2,"value":"- 2.3 Tkit \u89c4\u8303\u63a5\u53e3"},{"slug":"tkitabstractajaxresult-\u63a5\u53e3","depth":3,"value":"TkitAbstractAjaxResult \u63a5\u53e3"},{"slug":"\u793a\u4f8b","depth":3,"value":"\u793a\u4f8b"},{"slug":"--24-\u5176\u4ed6\u63a5\u53e3\u89c4\u8303","depth":2,"value":"- 2.4 \u5176\u4ed6\u63a5\u53e3\u89c4\u8303"},{"slug":"--25-ajax-\u5168\u5c40\u4e8b\u4ef6","depth":2,"value":"- 2.5. Ajax \u5168\u5c40\u4e8b\u4ef6"},{"slug":"--26-axios-\u5168\u5c40\u914d\u7f6e","depth":2,"value":"- 2.6. Axios \u5168\u5c40\u914d\u7f6e"},{"slug":"3-graphql","depth":2,"value":"3. Graphql"},{"slug":"--31-\u914d\u7f6e-graphql-client","depth":2,"value":"- 3.1. \u914d\u7f6e Graphql Client"},{"slug":"--32-service-\u793a\u4f8b","depth":2,"value":"- 3.2. Service \u793a\u4f8b"}]}},{"key":"packages/async/README.mdx","value":{"name":"Async","menu":"Components","route":"ekit-docs/ekit/async","id":"5291ca6c5f00cfed13fbe6c7b0095d8d","filepath":"packages/async/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/async/README.mdx","slug":"packages-async-readme","headings":[{"slug":"async","depth":1,"value":"Async"},{"slug":"2-\u914d\u7f6e-async-\u7ec4\u4ef6","depth":2,"value":"2. \u914d\u7f6e Async \u7ec4\u4ef6"},{"slug":"--21-async-props","depth":2,"value":"- 2.1 Async Props"},{"slug":"asyncprops-\u63a5\u53e3","depth":3,"value":"AsyncProps \u63a5\u53e3"},{"slug":"\u793a\u4f8b","depth":3,"value":"\u793a\u4f8b"},{"slug":"--21\u2460-async-form","depth":2,"value":"- 2.1.\u2460. Async Form"},{"slug":"asyncformprops-\u63a5\u53e3","depth":3,"value":"AsyncFormProps \u63a5\u53e3"},{"slug":"asyncform-\u63a5\u53e3","depth":3,"value":"AsyncForm \u63a5\u53e3"},{"slug":"\u793a\u4f8b-1","depth":3,"value":"\u793a\u4f8b"},{"slug":"--21\u2461-deprecated-loading","depth":2,"value":"- 2.1.\u2461.  Deprecated  loading"},{"slug":"asyncstatus-\u63a5\u53e3","depth":3,"value":"AsyncStatus \u63a5\u53e3"},{"slug":"\u793a\u4f8b\uff1a","depth":3,"value":"\u793a\u4f8b\uff1a"},{"slug":"--21\u2462-sharedloading","depth":2,"value":"- 2.1.\u2462. sharedLoading"},{"slug":"\u793a\u4f8b-2","depth":5,"value":"\u793a\u4f8b"},{"slug":"--21\u2463-modal-\u5c5e\u6027","depth":2,"value":"- 2.1.\u2463. modal \u5c5e\u6027"},{"slug":"asyncmodalprops-\u63a5\u53e3","depth":3,"value":"AsyncModalProps \u63a5\u53e3"},{"slug":"\u793a\u4f8b-3","depth":3,"value":"\u793a\u4f8b"},{"slug":"--21\u2464-tips","depth":2,"value":"- 2.1.\u2464. tips"},{"slug":"asyncresulteventtype-\u63a5\u53e3","depth":3,"value":"AsyncResultEventType \u63a5\u53e3"},{"slug":"\u793a\u4f8b-4","depth":3,"value":"\u793a\u4f8b"},{"slug":"3-api","depth":2,"value":"3. API"},{"slug":"--31-doasync","depth":2,"value":"- 3.1. doAsync"},{"slug":"--31\u2460-doasync-\u53c2\u6570","depth":2,"value":"- 3.1.\u2460 doAsync \u53c2\u6570"},{"slug":"iasyncactionprops-\u63a5\u53e3","depth":3,"value":"IAsyncActionProps \u63a5\u53e3"},{"slug":"\u793a\u4f8b-5","depth":3,"value":"\u793a\u4f8b"},{"slug":"\u53d6\u6d88\u793a\u4f8b","depth":3,"value":"\u53d6\u6d88\u793a\u4f8b"},{"slug":"--32-doasyncconfirmed","depth":2,"value":"- 3.2. doAsyncConfirmed"},{"slug":"--32\u2460-doasyncconfirmed-\u53c2\u6570","depth":2,"value":"- 3.2.\u2460 doAsyncConfirmed \u53c2\u6570"},{"slug":"iasyncconfirmedparams-\u63a5\u53e3","depth":3,"value":"IAsyncConfirmedParams \u63a5\u53e3"},{"slug":"\u793a\u4f8b-6","depth":3,"value":"\u793a\u4f8b"},{"slug":"--33-useasyncstatus","depth":2,"value":"- 3.3. useAsyncStatus"},{"slug":"\u793a\u4f8b-7","depth":3,"value":"\u793a\u4f8b"},{"slug":"4-demo","depth":2,"value":"4. Demo"},{"slug":"demo-\u6e90\u7801","depth":3,"value":"Demo \u6e90\u7801"}]}},{"key":"packages/event/README.mdx","value":{"name":"Event","menu":"Components","route":"ekit-docs/ekit/event","id":"263768d98bf601979930376bec69c4db","filepath":"packages/event/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/event/README.mdx","slug":"packages-event-readme","headings":[{"slug":"event","depth":1,"value":"Event"},{"slug":"2-api","depth":2,"value":"2. API"},{"slug":"--21-useevent","depth":2,"value":"- 2.1 useEvent"},{"slug":"--22-eventwrapper","depth":2,"value":"- 2.2. EventWrapper"},{"slug":"eventwrapper-props","depth":3,"value":"EventWrapper Props"},{"slug":"\u793a\u4f8b","depth":3,"value":"\u793a\u4f8b"}]}},{"key":"packages/jest-config/README.mdx","value":{"name":"Jest Config","menu":"\u5f00\u53d1/\u6d4b\u8bd5/\u6784\u5efa","route":"ekit-docs/ekit/jest-config","id":"48661403297c56b64c91ddddd56f3d67","filepath":"packages/jest-config/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/jest-config/README.mdx","slug":"packages-jest-config-readme","headings":[{"slug":"jest-config","depth":1,"value":"Jest Config"},{"slug":"usage","depth":2,"value":"Usage"},{"slug":"config","depth":2,"value":"Config"},{"slug":"--\u914d\u7f6e-polyfill","depth":2,"value":"- \u914d\u7f6e Polyfill"},{"slug":"--\u914d\u7f6e-setup","depth":2,"value":"- \u914d\u7f6e Setup"}]}},{"key":"packages/model/README.mdx","value":{"name":"Model","menu":"Redux","route":"ekit-docs/ekit/model","id":"6f18b6aba8d3c73c89eee264c0a12350","filepath":"packages/model/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/model/README.mdx","slug":"packages-model-readme","headings":[{"slug":"model","depth":1,"value":"Model"},{"slug":"\u4f7f\u7528\u6587\u6863","depth":2,"value":"\u4f7f\u7528\u6587\u6863"}]}},{"key":"packages/model-factory/README.mdx","value":{"name":"Model Factory","menu":"Redux","route":"ekit-docs/ekit/model-factory","id":"ac5168b0155a6120096d17575d00a904","filepath":"packages/model-factory/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/model-factory/README.mdx","slug":"packages-model-factory-readme","headings":[{"slug":"model-factory","depth":1,"value":"Model Factory"}]}},{"key":"packages/event-center/README.mdx","value":{"name":"Event Center","menu":"Components","route":"ekit-docs/ekit/event-center","id":"d93f1a1a0d3e9f72a97bbe56bf3ca9ff","filepath":"packages/event-center/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/event-center/README.mdx","slug":"packages-event-center-readme","headings":[{"slug":"event-center","depth":1,"value":"Event Center"}]}},{"key":"packages/redux-model/README.mdx","value":{"name":"Redux Model","menu":"Redux","route":"ekit-docs/ekit/redux-model","id":"0dffab09b928eb3f4177ad5a4120edcb","filepath":"packages/redux-model/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/redux-model/README.mdx","slug":"packages-redux-model-readme","headings":[{"slug":"redux-model","depth":1,"value":"Redux Model"},{"slug":"cm","depth":2,"value":"CM"},{"slug":"--\u793a\u4f8b","depth":2,"value":"- \u793a\u4f8b"},{"slug":"--state","depth":2,"value":"- State"},{"slug":"--effects","depth":2,"value":"- Effects"},{"slug":"---tput-tcall","depth":2,"value":"-- tPut, tCall"},{"slug":"---with-async","depth":2,"value":"-- With Async"},{"slug":"\u793a\u4f8b","depth":3,"value":"\u793a\u4f8b"},{"slug":"--promisified-actions","depth":2,"value":"- Promisified Actions"},{"slug":"--async--await-effects","depth":2,"value":"- Async & Await Effects"}]}},{"key":"packages/types/README.mdx","value":{"name":"Types","menu":"Redux","route":"ekit-docs/ekit/types","id":"2c3d9a772009966a55428aa3eb5b7c0e","filepath":"packages/types/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/types/README.mdx","slug":"packages-types-readme","headings":[{"slug":"types","depth":1,"value":"Types"},{"slug":"api","depth":2,"value":"API"},{"slug":"--tkitutils","depth":2,"value":"- TkitUtils"}]}},{"key":"packages/typescript-config/README.mdx","value":{"name":"TypeScript Config","menu":"\u5f00\u53d1/\u6d4b\u8bd5/\u6784\u5efa","route":"ekit-docs/ekit/typescript-config","id":"61cb247da56f598c079deb0691691afd","filepath":"packages/typescript-config/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/typescript-config/README.mdx","slug":"packages-typescript-config-readme","headings":[{"slug":"typescript-config","depth":1,"value":"TypeScript Config"},{"slug":"usage","depth":2,"value":"Usage"}]}},{"key":"packages/use-model/README.mdx","value":{"name":"Use Model","menu":"Redux","route":"ekit-docs/ekit/use-model","id":"04281ee6540a6eec5e53bf2d2f896a7f","filepath":"packages/use-model/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/use-model/README.mdx","slug":"packages-use-model-readme","headings":[{"slug":"use-model","depth":1,"value":"Use Model"},{"slug":"mm","depth":2,"value":"MM"},{"slug":"--\u793a\u4f8b","depth":2,"value":"- \u793a\u4f8b"},{"slug":"usemodel","depth":2,"value":"useModel"},{"slug":"--\u793a\u4f8b-1","depth":2,"value":"- \u793a\u4f8b"},{"slug":"\u8c03\u8bd5\u5de5\u5177","depth":2,"value":"\u8c03\u8bd5\u5de5\u5177"}]}},{"key":"packages/utils/README.mdx","value":{"name":"Internal Utils","menu":"\u5f00\u53d1/\u6d4b\u8bd5/\u6784\u5efa","route":"ekit-docs/tkit/utils","id":"a31d819ae22da451ff686a021091e6c0","filepath":"packages/utils/README.mdx","link":"https://github.com/gogoyqj/ekit/edit/master/packages/utils/README.mdx","slug":"packages-utils-readme","headings":[{"slug":"internal-utils","depth":1,"value":"Internal Utils"},{"slug":"usage","depth":2,"value":"Usage"},{"slug":"api","depth":2,"value":"API"}]}}],"props":[{"key":"packages/types/index.d.ts","value":[]},{"key":"packages/actions/__tests__/actions.test.ts","value":[]},{"key":"packages/actions/__tests__/actions.spec.ts","value":[]},{"key":"packages/actions/lib/actions.d.ts","value":[{"description":"","displayName":"createAction","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"","displayName":"combineActions","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>)[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>[]): (string | ... 6 more ... | ActionFunctionAny<...>)[]; (...items: (str..."}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>)[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<...>> | ActionFunction4<...> | ActionFunctionAny<...>)[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, b: string | ... 6 more ... | ActionFunctionAny<...>) => number) => (string | ... ..."}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<...> | ActionFunction4<...> | ActionFunctionAny<...>)[]; (start: number, deleteCount: number, ...items: (string | ... 6 more ... | Ac..."}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>)[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, array: (string | ... 6 more ... | ActionFunctionAny<...>)[]) =..."}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, array: (string | ... 6 more ... | ActionFunctionAny<...>)[]) =..."}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, array: (string | ... 6 more ... | ActionFunctionAny<...>)[]) =..."}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, array: (string | ... 6 more ... | ActionFunctionAny<...>)[]..."}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>(callbackfn: (value: string | ... 6 more ... | ActionFunctionAny<...>, index: number, ..."}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, currentValue: string | ... 6 more ... | ActionFunctionAny<...>, cur..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, currentValue: string | ... 6 more ... | ActionFunctionAny<...>, cur..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>(predicate: (this: void, value: string | ... 6 more ... | ActionFunctionAny<...>, inde..."}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, obj: (string | ... 6 more ... | ActionFunctionAny<...>)[]) => b..."}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, start?: number, end?: number) => (string | ... 6 more ... | ActionFunctionAny<...>)[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<...> | ActionFunction4<...> | ActionFunctionAny<...>)[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, fromIndex?: number) => boolean"}}}}]},{"key":"packages/actions/src/actions.ts","value":[{"description":"","displayName":"createAction","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"","displayName":"combineActions","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>)[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>[]): (string | ... 6 more ... | ActionFunctionAny<...>)[]; (...items: (str..."}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>)[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<...>> | ActionFunction4<...> | ActionFunctionAny<...>)[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, b: string | ... 6 more ... | ActionFunctionAny<...>) => number) => (string | ... ..."}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<...> | ActionFunction4<...> | ActionFunctionAny<...>)[]; (start: number, deleteCount: number, ...items: (string | ... 6 more ... | Ac..."}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>)[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, array: (string | ... 6 more ... | ActionFunctionAny<...>)[]) =..."}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, array: (string | ... 6 more ... | ActionFunctionAny<...>)[]) =..."}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, array: (string | ... 6 more ... | ActionFunctionAny<...>)[]) =..."}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, array: (string | ... 6 more ... | ActionFunctionAny<...>)[]..."}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>(callbackfn: (value: string | ... 6 more ... | ActionFunctionAny<...>, index: number, ..."}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, currentValue: string | ... 6 more ... | ActionFunctionAny<...>, cur..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, currentValue: string | ... 6 more ... | ActionFunctionAny<...>, cur..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>(predicate: (this: void, value: string | ... 6 more ... | ActionFunctionAny<...>, inde..."}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, index: number, obj: (string | ... 6 more ... | ActionFunctionAny<...>)[]) => b..."}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, start?: number, end?: number) => (string | ... 6 more ... | ActionFunctionAny<...>)[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => (string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<...> | ActionFunction4<...> | ActionFunctionAny<...>)[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: string | symbol | ActionFunction0<Action<any>> | ActionFunction1<any, Action<any>> | ActionFunction2<any, any, Action<any>> | ActionFunction3<any, any, any, Action<any>> | ActionFunction4<...> | ActionFunctionAny<...>, fromIndex?: number) => boolean"}}}}]},{"key":"packages/ajax/__tests__/Doc.tsx","value":[]},{"key":"packages/ajax/__tests__/ajax.test.ts","value":[]},{"key":"packages/ajax/__tests__/new-ajax.spec.ts","value":[]},{"key":"packages/ajax/lib/axios.d.ts","value":[{"description":"\u68c0\u6d4b axios \u54cd\u5e94\u72b6\u6001","displayName":"onStatusError","methods":[],"props":{"message":{"defaultValue":null,"description":"","name":"message","required":true,"type":{"name":"string"}}}},{"description":"","displayName":"AxiosInstance","methods":[],"props":{"url":{"defaultValue":null,"description":"","name":"url","required":false,"type":{"name":"string"}},"method":{"defaultValue":null,"description":"","name":"method","required":false,"type":{"name":"Method"}},"baseURL":{"defaultValue":null,"description":"","name":"baseURL","required":false,"type":{"name":"string"}},"transformRequest":{"defaultValue":null,"description":"","name":"transformRequest","required":false,"type":{"name":"AxiosTransformer | AxiosTransformer[]"}},"transformResponse":{"defaultValue":null,"description":"","name":"transformResponse","required":false,"type":{"name":"AxiosTransformer | AxiosTransformer[]"}},"headers":{"defaultValue":null,"description":"","name":"headers","required":false,"type":{"name":"any"}},"params":{"defaultValue":null,"description":"","name":"params","required":false,"type":{"name":"any"}},"paramsSerializer":{"defaultValue":null,"description":"","name":"paramsSerializer","required":false,"type":{"name":"(params: any) => string"}},"data":{"defaultValue":null,"description":"","name":"data","required":false,"type":{"name":"any"}},"timeout":{"defaultValue":null,"description":"","name":"timeout","required":false,"type":{"name":"number"}},"timeoutErrorMessage":{"defaultValue":null,"description":"","name":"timeoutErrorMessage","required":false,"type":{"name":"string"}},"withCredentials":{"defaultValue":null,"description":"","name":"withCredentials","required":false,"type":{"name":"boolean"}},"adapter":{"defaultValue":null,"description":"","name":"adapter","required":false,"type":{"name":"AxiosAdapter"}},"auth":{"defaultValue":null,"description":"","name":"auth","required":false,"type":{"name":"AxiosBasicCredentials"}},"responseType":{"defaultValue":null,"description":"","name":"responseType","required":false,"type":{"name":"ResponseType"}},"xsrfCookieName":{"defaultValue":null,"description":"","name":"xsrfCookieName","required":false,"type":{"name":"string"}},"xsrfHeaderName":{"defaultValue":null,"description":"","name":"xsrfHeaderName","required":false,"type":{"name":"string"}},"onUploadProgress":{"defaultValue":null,"description":"","name":"onUploadProgress","required":false,"type":{"name":"(progressEvent: any) => void"}},"onDownloadProgress":{"defaultValue":null,"description":"","name":"onDownloadProgress","required":false,"type":{"name":"(progressEvent: any) => void"}},"maxContentLength":{"defaultValue":null,"description":"","name":"maxContentLength","required":false,"type":{"name":"number"}},"validateStatus":{"defaultValue":null,"description":"","name":"validateStatus","required":false,"type":{"name":"(status: number) => boolean"}},"maxRedirects":{"defaultValue":null,"description":"","name":"maxRedirects","required":false,"type":{"name":"number"}},"socketPath":{"defaultValue":null,"description":"","name":"socketPath","required":false,"type":{"name":"string"}},"httpAgent":{"defaultValue":null,"description":"","name":"httpAgent","required":false,"type":{"name":"any"}},"httpsAgent":{"defaultValue":null,"description":"","name":"httpsAgent","required":false,"type":{"name":"any"}},"proxy":{"defaultValue":null,"description":"","name":"proxy","required":false,"type":{"name":"false | AxiosProxyConfig"}},"cancelToken":{"defaultValue":null,"description":"","name":"cancelToken","required":false,"type":{"name":"CancelToken"}}}}]},{"key":"packages/ajax/lib/consts.d.ts","value":[{"description":"\u53d6\u6d88\u8bf7\u6c42\u9519\u8bef\u7801","displayName":"AjaxCancelCode","methods":[],"props":{}},{"description":"\u9ed8\u8ba4Ajax\u9519\u8bef\u7801","displayName":"AjaxErrorCode","methods":[],"props":{}},{"description":"\u65e0\u6cd5\u786e\u8ba4\u7684 Graphql \u9519\u8bef\u7801","displayName":"GraphQLErrorCode","methods":[],"props":{}}]},{"key":"packages/ajax/lib/graphql.d.ts","value":[{"description":"\u63d0\u53d6\u9519\u8bef\u4fe1\u606f\u3001\u9519\u8bef\u7801","displayName":"extractCodeAndMessage","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => GraphQLError"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: GraphQLError[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<GraphQLError>[]): GraphQLError[]; (...items: (GraphQLError | ConcatArray<GraphQLError>)[]): GraphQLError[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => GraphQLError[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => GraphQLError"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => GraphQLError[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: GraphQLError, b: GraphQLError) => number) => GraphQLError[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): GraphQLError[]; (start: number, deleteCount: number, ...items: GraphQLError[]): GraphQLError[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: GraphQLError[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends GraphQLError>(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => any, thisArg?: any): GraphQLError[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError): GraphQLError; (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError, initialValue: GraphQLError): Graph..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError): GraphQLError; (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError, initialValue: GraphQLError): Graph..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends GraphQLError>(predicate: (this: void, value: GraphQLError, index: number, obj: GraphQLError[]) => value is S, thisArg?: any): S; (predicate: (value: GraphQLError, index: number, obj: GraphQLError[]) => boolean, thisArg?: any): GraphQLError; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: GraphQLError, index: number, obj: GraphQLError[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: GraphQLError, start?: number, end?: number) => GraphQLError[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => GraphQLError[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<GraphQLError>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, GraphQLError]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<GraphQLError>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => boolean"}}}}]},{"key":"packages/ajax/lib/index.d.ts","value":[{"description":"\u68c0\u6d4b axios \u54cd\u5e94\u72b6\u6001","displayName":"onStatusError","methods":[],"props":{"message":{"defaultValue":null,"description":"","name":"message","required":true,"type":{"name":"string"}}}},{"description":"\u63d0\u53d6\u9519\u8bef\u4fe1\u606f\u3001\u9519\u8bef\u7801","displayName":"extractCodeAndMessage","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => GraphQLError"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: GraphQLError[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<GraphQLError>[]): GraphQLError[]; (...items: (GraphQLError | ConcatArray<GraphQLError>)[]): GraphQLError[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => GraphQLError[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => GraphQLError"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => GraphQLError[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: GraphQLError, b: GraphQLError) => number) => GraphQLError[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): GraphQLError[]; (start: number, deleteCount: number, ...items: GraphQLError[]): GraphQLError[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: GraphQLError[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends GraphQLError>(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => any, thisArg?: any): GraphQLError[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError): GraphQLError; (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError, initialValue: GraphQLError): Graph..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError): GraphQLError; (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError, initialValue: GraphQLError): Graph..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends GraphQLError>(predicate: (this: void, value: GraphQLError, index: number, obj: GraphQLError[]) => value is S, thisArg?: any): S; (predicate: (value: GraphQLError, index: number, obj: GraphQLError[]) => boolean, thisArg?: any): GraphQLError; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: GraphQLError, index: number, obj: GraphQLError[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: GraphQLError, start?: number, end?: number) => GraphQLError[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => GraphQLError[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<GraphQLError>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, GraphQLError]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<GraphQLError>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => boolean"}}}}]},{"key":"packages/ajax/lib/new-ajax.d.ts","value":[]},{"key":"packages/ajax/src/axios.ts","value":[{"description":"\u68c0\u6d4b axios \u54cd\u5e94\u72b6\u6001","displayName":"onStatusError","methods":[],"props":{"message":{"defaultValue":null,"description":"","name":"message","required":true,"type":{"name":"string"}}}},{"description":"","displayName":"axios","methods":[],"props":{"url":{"defaultValue":null,"description":"","name":"url","required":false,"type":{"name":"string"}},"method":{"defaultValue":null,"description":"","name":"method","required":false,"type":{"name":"Method"}},"baseURL":{"defaultValue":null,"description":"","name":"baseURL","required":false,"type":{"name":"string"}},"transformRequest":{"defaultValue":null,"description":"","name":"transformRequest","required":false,"type":{"name":"AxiosTransformer | AxiosTransformer[]"}},"transformResponse":{"defaultValue":null,"description":"","name":"transformResponse","required":false,"type":{"name":"AxiosTransformer | AxiosTransformer[]"}},"headers":{"defaultValue":null,"description":"","name":"headers","required":false,"type":{"name":"any"}},"params":{"defaultValue":null,"description":"","name":"params","required":false,"type":{"name":"any"}},"paramsSerializer":{"defaultValue":null,"description":"","name":"paramsSerializer","required":false,"type":{"name":"(params: any) => string"}},"data":{"defaultValue":null,"description":"","name":"data","required":false,"type":{"name":"any"}},"timeout":{"defaultValue":null,"description":"","name":"timeout","required":false,"type":{"name":"number"}},"timeoutErrorMessage":{"defaultValue":null,"description":"","name":"timeoutErrorMessage","required":false,"type":{"name":"string"}},"withCredentials":{"defaultValue":null,"description":"","name":"withCredentials","required":false,"type":{"name":"boolean"}},"adapter":{"defaultValue":null,"description":"","name":"adapter","required":false,"type":{"name":"AxiosAdapter"}},"auth":{"defaultValue":null,"description":"","name":"auth","required":false,"type":{"name":"AxiosBasicCredentials"}},"responseType":{"defaultValue":null,"description":"","name":"responseType","required":false,"type":{"name":"ResponseType"}},"xsrfCookieName":{"defaultValue":null,"description":"","name":"xsrfCookieName","required":false,"type":{"name":"string"}},"xsrfHeaderName":{"defaultValue":null,"description":"","name":"xsrfHeaderName","required":false,"type":{"name":"string"}},"onUploadProgress":{"defaultValue":null,"description":"","name":"onUploadProgress","required":false,"type":{"name":"(progressEvent: any) => void"}},"onDownloadProgress":{"defaultValue":null,"description":"","name":"onDownloadProgress","required":false,"type":{"name":"(progressEvent: any) => void"}},"maxContentLength":{"defaultValue":null,"description":"","name":"maxContentLength","required":false,"type":{"name":"number"}},"validateStatus":{"defaultValue":null,"description":"","name":"validateStatus","required":false,"type":{"name":"(status: number) => boolean"}},"maxRedirects":{"defaultValue":null,"description":"","name":"maxRedirects","required":false,"type":{"name":"number"}},"socketPath":{"defaultValue":null,"description":"","name":"socketPath","required":false,"type":{"name":"string"}},"httpAgent":{"defaultValue":null,"description":"","name":"httpAgent","required":false,"type":{"name":"any"}},"httpsAgent":{"defaultValue":null,"description":"","name":"httpsAgent","required":false,"type":{"name":"any"}},"proxy":{"defaultValue":null,"description":"","name":"proxy","required":false,"type":{"name":"false | AxiosProxyConfig"}},"cancelToken":{"defaultValue":null,"description":"","name":"cancelToken","required":false,"type":{"name":"CancelToken"}}}}]},{"key":"packages/ajax/src/consts.ts","value":[{"description":"\u53d6\u6d88\u8bf7\u6c42\u9519\u8bef\u7801","displayName":"AjaxCancelCode","methods":[],"props":{}},{"description":"\u9ed8\u8ba4Ajax\u9519\u8bef\u7801","displayName":"AjaxErrorCode","methods":[],"props":{}},{"description":"\u65e0\u6cd5\u786e\u8ba4\u7684 Graphql \u9519\u8bef\u7801","displayName":"GraphQLErrorCode","methods":[],"props":{}}]},{"key":"packages/ajax/src/graphql.ts","value":[{"description":"\u63d0\u53d6\u9519\u8bef\u4fe1\u606f\u3001\u9519\u8bef\u7801","displayName":"extractCodeAndMessage","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => GraphQLError"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: GraphQLError[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<GraphQLError>[]): GraphQLError[]; (...items: (GraphQLError | ConcatArray<GraphQLError>)[]): GraphQLError[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => GraphQLError[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => GraphQLError"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => GraphQLError[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: GraphQLError, b: GraphQLError) => number) => GraphQLError[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): GraphQLError[]; (start: number, deleteCount: number, ...items: GraphQLError[]): GraphQLError[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: GraphQLError[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends GraphQLError>(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => any, thisArg?: any): GraphQLError[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError): GraphQLError; (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError, initialValue: GraphQLError): Graph..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError): GraphQLError; (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError, initialValue: GraphQLError): Graph..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends GraphQLError>(predicate: (this: void, value: GraphQLError, index: number, obj: GraphQLError[]) => value is S, thisArg?: any): S; (predicate: (value: GraphQLError, index: number, obj: GraphQLError[]) => boolean, thisArg?: any): GraphQLError; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: GraphQLError, index: number, obj: GraphQLError[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: GraphQLError, start?: number, end?: number) => GraphQLError[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => GraphQLError[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<GraphQLError>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, GraphQLError]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<GraphQLError>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => boolean"}}}}]},{"key":"packages/ajax/src/index.ts","value":[{"description":"\u68c0\u6d4b axios \u54cd\u5e94\u72b6\u6001","displayName":"onStatusError","methods":[],"props":{"message":{"defaultValue":null,"description":"","name":"message","required":true,"type":{"name":"string"}}}},{"description":"\u63d0\u53d6\u9519\u8bef\u4fe1\u606f\u3001\u9519\u8bef\u7801","displayName":"extractCodeAndMessage","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => GraphQLError"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: GraphQLError[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<GraphQLError>[]): GraphQLError[]; (...items: (GraphQLError | ConcatArray<GraphQLError>)[]): GraphQLError[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => GraphQLError[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => GraphQLError"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => GraphQLError[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: GraphQLError, b: GraphQLError) => number) => GraphQLError[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): GraphQLError[]; (start: number, deleteCount: number, ...items: GraphQLError[]): GraphQLError[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: GraphQLError[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends GraphQLError>(callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: GraphQLError, index: number, array: GraphQLError[]) => any, thisArg?: any): GraphQLError[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError): GraphQLError; (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError, initialValue: GraphQLError): Graph..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError): GraphQLError; (callbackfn: (previousValue: GraphQLError, currentValue: GraphQLError, currentIndex: number, array: GraphQLError[]) => GraphQLError, initialValue: GraphQLError): Graph..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends GraphQLError>(predicate: (this: void, value: GraphQLError, index: number, obj: GraphQLError[]) => value is S, thisArg?: any): S; (predicate: (value: GraphQLError, index: number, obj: GraphQLError[]) => boolean, thisArg?: any): GraphQLError; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: GraphQLError, index: number, obj: GraphQLError[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: GraphQLError, start?: number, end?: number) => GraphQLError[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => GraphQLError[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<GraphQLError>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, GraphQLError]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<GraphQLError>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: GraphQLError, fromIndex?: number) => boolean"}}}}]},{"key":"packages/ajax/src/new-ajax.ts","value":[]},{"key":"packages/async/__tests__/Async.test.tsx","value":[]},{"key":"packages/async/__tests__/Example.tsx","value":[{"description":"","displayName":"StatusFaker","methods":[],"props":{"confirmed":{"defaultValue":null,"description":"\u662f\u5426\u5df2\u786e\u5b9a","name":"confirmed","required":false,"type":{"name":"boolean"}},"isFetch":{"defaultValue":null,"description":"\u526f\u4f5c\u7528\u662f\u5426\u6b63\u5728\u6267\u884c","name":"isFetch","required":false,"type":{"name":"boolean"}},"isSuccess":{"defaultValue":null,"description":"\u662f\u5426\u6210\u529f","name":"isSuccess","required":false,"type":{"name":"boolean"}},"response":{"defaultValue":null,"description":"\u526f\u4f5c\u7528\u54cd\u5e94\u3010\u5927\u6982\u7387undefined\u3011","name":"response","required":false,"type":{"name":"any"}},"ASYNC_ID":{"defaultValue":null,"description":"","name":"ASYNC_ID","required":false,"type":{"name":"number"}},"isModal":{"defaultValue":null,"description":"\u662f\u5426Modal\u5f39\u7a97","name":"isModal","required":false,"type":{"name":"boolean"}},"visible":{"defaultValue":null,"description":"\u63a7\u5236 Modal \u663e\u793a\u3001\u9690\u85cf\u6d41\u7a0b","name":"visible","required":false,"type":{"name":"boolean"}},"indicator":{"defaultValue":null,"description":"\u81ea\u5b9a\u4e49loading\u6548\u679c","name":"indicator","required":false,"type":{"name":"ReactNode"}}}},{"description":"","displayName":"FormCoreFaker","methods":[],"props":{"submit":{"defaultValue":null,"description":"Form\u8868\u5355\u7ec4\u4ef6\u5fc5\u987b\u5b9e\u73b0submit\u65b9\u6cd5\uff0csubmit \u65b9\u6cd5\u9700\u8fd4\u56de\u8868\u5355 values \u5bf9\u8c61\u6216\u8005 Promise<values>","name":"submit","required":true,"type":{"name":"(...args: any) => any"}}}},{"description":"","displayName":"ModalFaker","methods":[],"props":{"visible":{"defaultValue":null,"description":"\u662f\u5426\u663e\u793aModal","name":"visible","required":false,"type":{"name":"boolean"}},"title":{"defaultValue":null,"description":"\u6807\u9898","name":"title","required":false,"type":{"name":"ReactNode"}},"content":{"defaultValue":null,"description":"\u5185\u5bb9","name":"content","required":false,"type":{"name":"ReactNode"}},"className":{"defaultValue":null,"description":"","name":"className","required":false,"type":{"name":"string"}},"confirmLoading":{"defaultValue":null,"description":"\u786e\u5b9a\u65f6\u663e\u793aloading\u6548\u679c","name":"confirmLoading","required":false,"type":{"name":"boolean"}},"onOk":{"defaultValue":null,"description":"\u70b9\u51fb\u786e\u5b9a\u6309\u94ae\u56de\u8c03","name":"onOk","required":false,"type":{"name":"(...args: any) => void | Promise<any>"}},"onCancel":{"defaultValue":null,"description":"\u70b9\u51fb\u53d6\u6d88\u6309\u94ae\u56de\u8c03","name":"onCancel","required":false,"type":{"name":"(...args: any) => void | Promise<any>"}},"afterClose":{"defaultValue":null,"description":"Modal \u5b8c\u5168\u5173\u95ed\u540e\u7684\u56de\u8c03","name":"afterClose","required":false,"type":{"name":"(...args: any) => any"}}}},{"description":"","displayName":"ResultTypeFaker","methods":[],"props":{"type":{"defaultValue":null,"description":"\u526f\u4f5c\u7528\u4fe1\u606f\u7c7b\u578b","name":"type","required":true,"type":{"name":"\\"error\\" | \\"success\\""}},"message":{"defaultValue":null,"description":"\u526f\u4f5c\u7528\u63d0\u793a\u4fe1\u606f","name":"message","required":true,"type":{"name":"ReactNode"}}}},{"description":"","displayName":"AsyncFaker","methods":[],"props":{"fetch":{"defaultValue":null,"description":"\u526f\u4f5c\u7528\u51fd\u6570","name":"fetch","required":true,"type":{"name":"F"}},"modalProps":{"defaultValue":null,"description":"Modal\u5f39\u7a97\u914d\u7f6e","name":"modalProps","required":false,"type":{"name":"AsyncModalProps"}},"formProps":{"defaultValue":null,"description":"Form\u8868\u5355\u914d\u7f6e","name":"formProps","required":false,"type":{"name":"Partial<AsyncFormProps>"}},"params":{"defaultValue":null,"description":"F \u4ec5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u9002\u7528","name":"params","required":false,"type":{"name":"EnsureSingleArgumentsType<F>"}},"callback":{"defaultValue":null,"description":"\u56de\u8c03","name":"callback","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"onCancel":{"defaultValue":null,"description":"\u53d6\u6d88\u56de\u8c03","name":"onCancel","required":false,"type":{"name":"() => any"}},"onError":{"defaultValue":null,"description":"\u9519\u8bef\u56de\u8c03","name":"onError","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"onSuccess":{"defaultValue":null,"description":"\u6210\u529f\u56de\u8c03","name":"onSuccess","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"errorMsg":{"defaultValue":null,"description":"\u9519\u8bef\u4fe1\u606f\uff0c\u914d\u7f6e\u6210false\uff0c\u5219\u4e0d\u63d0\u793a\u9519\u8bef\u4fe1\u606f","name":"errorMsg","required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)> | ReactNodeArray | ReactPortal | ((res: GetPromiseResolved<...>) => ReactNode)"}},"successMsg":{"defaultValue":null,"description":"\u6210\u529f\u4fe1\u606f\uff0c\u914d\u7f6e\u6210false\uff0c\u5219\u4e0d\u63d0\u793a\u6210\u529f\u4fe1\u606f","name":"successMsg","required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)> | ReactNodeArray | ReactPortal | ((res: GetPromiseResolved<...>) => ReactNode)"}},"paramsGenerator":{"defaultValue":null,"description":"F \u63a5\u6536\u591a\u4e2a\u53c2\u6570\u9002\u7528 - \u5fc5\u987b\u8fd4\u56de\u6570\u7ec4","name":"paramsGenerator","required":false,"type":{"name":"(params: NewAsyncParams<F>) => EnsureArgumentsType<F>"}},"ASYNC_ID":{"defaultValue":null,"description":"","name":"ASYNC_ID","required":false,"type":{"name":"number"}},"extraParams":{"defaultValue":null,"description":"\u8868\u5355\u60c5\u5f62\u4e0b\u8fd4\u56de\u6570\u636e","name":"extraParams","required":false,"type":{"name":"GetArgumentsType<F>[0]"}},"channel":{"defaultValue":null,"description":"\u6765\u6e90","name":"channel","required":false,"type":{"name":"string"}},"effectName":{"defaultValue":null,"description":"effect name\u3010@ekit/async 3.0.5 \u8d77\u652f\u6301\u3011","name":"effectName","required":false,"type":{"name":"string"}},"indicator":{"defaultValue":null,"description":"","name":"indicator","required":false,"type":{"name":"ReactNode"}}}},{"description":"","displayName":"AsyncConfirmedFaker","methods":[],"props":{"fetch":{"defaultValue":null,"description":"\u526f\u4f5c\u7528\u51fd\u6570","name":"fetch","required":true,"type":{"name":"F"}},"indicator":{"defaultValue":null,"description":"loading\u6548\u679c\uff0c\u914d\u7f6e\u6210false\u4e0d\u663e\u793aloading","name":"indicator","required":false,"type":{"name":"ReactNode"}},"channel":{"defaultValue":null,"description":"\u6765\u6e90","name":"channel","required":false,"type":{"name":"string"}},"params":{"defaultValue":null,"description":"F \u4ec5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u9002\u7528","name":"params","required":false,"type":{"name":"EnsureSingleArgumentsType<F>"}},"callback":{"defaultValue":null,"description":"\u56de\u8c03","name":"callback","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"onCancel":{"defaultValue":null,"description":"\u53d6\u6d88\u56de\u8c03","name":"onCancel","required":false,"type":{"name":"() => any"}},"onError":{"defaultValue":null,"description":"\u9519\u8bef\u56de\u8c03","name":"onError","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"onSuccess":{"defaultValue":null,"description":"\u6210\u529f\u56de\u8c03","name":"onSuccess","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"errorMsg":{"defaultValue":null,"description":"\u9519\u8bef\u4fe1\u606f\uff0c\u914d\u7f6e\u6210false\uff0c\u5219\u4e0d\u63d0\u793a\u9519\u8bef\u4fe1\u606f","name":"errorMsg","required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)> | ReactNodeArray | ReactPortal | ((res: GetPromiseResolved<...>) => ReactNode)"}},"successMsg":{"defaultValue":null,"description":"\u6210\u529f\u4fe1\u606f\uff0c\u914d\u7f6e\u6210false\uff0c\u5219\u4e0d\u63d0\u793a\u6210\u529f\u4fe1\u606f","name":"successMsg","required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)> | ReactNodeArray | ReactPortal | ((res: GetPromiseResolved<...>) => ReactNode)"}},"paramsGenerator":{"defaultValue":null,"description":"F \u63a5\u6536\u591a\u4e2a\u53c2\u6570\u9002\u7528 - \u5fc5\u987b\u8fd4\u56de\u6570\u7ec4","name":"paramsGenerator","required":false,"type":{"name":"(params: NewAsyncParams<F>) => EnsureArgumentsType<F>"}},"ASYNC_ID":{"defaultValue":null,"description":"","name":"ASYNC_ID","required":false,"type":{"name":"number"}},"extraParams":{"defaultValue":null,"description":"\u8868\u5355\u60c5\u5f62\u4e0b\u8fd4\u56de\u6570\u636e","name":"extraParams","required":false,"type":{"name":"GetArgumentsType<F>[0]"}},"effectName":{"defaultValue":null,"description":"effect name\u3010@ekit/async 3.0.5 \u8d77\u652f\u6301\u3011","name":"effectName","required":false,"type":{"name":"string"}}}}]},{"key":"packages/async/__tests__/asyncModel.spec.ts","value":[]},{"key":"packages/async/__tests__/asyncModel.test.ts","value":[]},{"key":"packages/async/__tests__/setup.ts","value":[]},{"key":"packages/async/lib/Async.d.ts","value":[{"description":"\u5f02\u6b65\u64cd\u4f5c\u5bb9\u5668","displayName":"Asyncd","methods":[],"props":{"loading":{"defaultValue":null,"description":"\u52a0\u8f7d\u6548\u679c\u7ec4\u4ef6\u3010\u6bcf\u4e2aeffect\u5bf9\u5e94\u4e00\u4e2a\u6548\u679c\u3011\\n@deprecated \u4e0d\u63a8\u8350\u4f7f\u7528","name":"loading","required":false,"type":{"name":"any"}},"sharedLoading":{"defaultValue":null,"description":"\u5168\u5c40\u52a0\u8f7d\u6548\u679c\u7ec4\u4ef6","name":"sharedLoading","required":false,"type":{"name":"any"}},"tips":{"defaultValue":null,"description":"\u663e\u793a\u526f\u4f5c\u7528\u63d0\u793a\u4fe1\u606f\u7684\u51fd\u6570","name":"tips","required":false,"type":{"name":"(e: AsyncResultEventType) => any"}},"modal":{"defaultValue":null,"description":"Model\u5f39\u7a97\u7ec4\u4ef6\uff0c\u517c\u5bb9antd Model","name":"modal","required":true,"type":{"name":"any"}},"form":{"defaultValue":null,"description":"Form\u7ec4\u4ef6","name":"form","required":true,"type":{"name":"any"}}}}]},{"key":"packages/async/lib/asyncModel.d.ts","value":[]},{"key":"packages/async/lib/consts.d.ts","value":[{"description":"\u5f02\u6b65\u961f\u5217\u53d8\u5316\u4e8b\u4ef6","displayName":"ASYNC_STATUS_CHANGE_NAME","methods":[],"props":{}}]},{"key":"packages/async/lib/index.d.ts","value":[{"description":"\u5f02\u6b65\u64cd\u4f5c\u5bb9\u5668","displayName":"indexd","methods":[],"props":{"loading":{"defaultValue":null,"description":"\u52a0\u8f7d\u6548\u679c\u7ec4\u4ef6\u3010\u6bcf\u4e2aeffect\u5bf9\u5e94\u4e00\u4e2a\u6548\u679c\u3011\\n@deprecated \u4e0d\u63a8\u8350\u4f7f\u7528","name":"loading","required":false,"type":{"name":"any"}},"sharedLoading":{"defaultValue":null,"description":"\u5168\u5c40\u52a0\u8f7d\u6548\u679c\u7ec4\u4ef6\u3010\u6240\u6709effect\u5171\u7528\u4e00\u4e2a\u6548\u679c\u30113.0.6+","name":"sharedLoading","required":false,"type":{"name":"any"}},"tips":{"defaultValue":null,"description":"\u663e\u793a\u526f\u4f5c\u7528\u63d0\u793a\u4fe1\u606f\u7684\u51fd\u6570","name":"tips","required":false,"type":{"name":"(e: AsyncResultEventType) => any"}},"modal":{"defaultValue":null,"description":"Model\u5f39\u7a97\u7ec4\u4ef6\uff0c\u517c\u5bb9antd Model","name":"modal","required":true,"type":{"name":"any"}},"form":{"defaultValue":null,"description":"Form\u7ec4\u4ef6","name":"form","required":true,"type":{"name":"any"}}}},{"description":"\u6267\u884c\u9700\u8981\u663e\u793a\u786e\u5b9a\u5f39\u7a97\u3010\u53ef\u5185\u7f6e\u8868\u5355\u3011\u526f\u4f5c\u7528","displayName":"doAsync","methods":[],"props":{}},{"description":"\u6267\u884c\u526f\u4f5c\u7528","displayName":"doAsyncConfirmed","methods":[],"props":{"fetch":{"defaultValue":null,"description":"\u526f\u4f5c\u7528\u51fd\u6570","name":"fetch","required":true,"type":{"name":"F"}},"indicator":{"defaultValue":null,"description":"loading\u6548\u679c\uff0c\u914d\u7f6e\u6210false\u4e0d\u663e\u793aloading","name":"indicator","required":false,"type":{"name":"ReactNode"}},"channel":{"defaultValue":null,"description":"\u6765\u6e90","name":"channel","required":false,"type":{"name":"string"}},"params":{"defaultValue":null,"description":"F \u4ec5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u9002\u7528","name":"params","required":false,"type":{"name":"EnsureSingleArgumentsType<F>"}},"callback":{"defaultValue":null,"description":"\u56de\u8c03","name":"callback","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"onCancel":{"defaultValue":null,"description":"\u53d6\u6d88\u56de\u8c03","name":"onCancel","required":false,"type":{"name":"() => any"}},"onError":{"defaultValue":null,"description":"\u9519\u8bef\u56de\u8c03","name":"onError","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"onSuccess":{"defaultValue":null,"description":"\u6210\u529f\u56de\u8c03","name":"onSuccess","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"errorMsg":{"defaultValue":null,"description":"\u9519\u8bef\u4fe1\u606f\uff0c\u914d\u7f6e\u6210false\uff0c\u5219\u4e0d\u63d0\u793a\u9519\u8bef\u4fe1\u606f","name":"errorMsg","required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)> | ReactNodeArray | ReactPortal | ((res: GetPromiseResolved<...>) => ReactNode)"}},"successMsg":{"defaultValue":null,"description":"\u6210\u529f\u4fe1\u606f\uff0c\u914d\u7f6e\u6210false\uff0c\u5219\u4e0d\u63d0\u793a\u6210\u529f\u4fe1\u606f","name":"successMsg","required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)> | ReactNodeArray | ReactPortal | ((res: GetPromiseResolved<...>) => ReactNode)"}},"paramsGenerator":{"defaultValue":null,"description":"F \u63a5\u6536\u591a\u4e2a\u53c2\u6570\u9002\u7528 - \u5fc5\u987b\u8fd4\u56de\u6570\u7ec4","name":"paramsGenerator","required":false,"type":{"name":"(params: NewAsyncParams<F>) => EnsureArgumentsType<F>"}},"ASYNC_ID":{"defaultValue":null,"description":"","name":"ASYNC_ID","required":false,"type":{"name":"number"}},"extraParams":{"defaultValue":null,"description":"\u8868\u5355\u60c5\u5f62\u4e0b\u8fd4\u56de\u6570\u636e","name":"extraParams","required":false,"type":{"name":"GetArgumentsType<F>[0]"}},"effectName":{"defaultValue":null,"description":"effect name\u3010@ekit/async 3.0.5 \u8d77\u652f\u6301\u3011","name":"effectName","required":false,"type":{"name":"string"}}}},{"description":"\u6e05\u7406","displayName":"doClearModal","methods":[],"props":{}},{"description":"\u5f02\u6b65\u961f\u5217\u53d8\u5316\u4e8b\u4ef6","displayName":"ASYNC_STATUS_CHANGE_NAME","methods":[],"props":{}},{"description":"\u7b5b\u9009\u51fa\u9700\u8981\u7684Status","displayName":"useAsyncStatus","methods":[],"props":{}}]},{"key":"packages/async/lib/useAsync.d.ts","value":[{"description":"\u79c1\u6709hooks\uff0c\u8bf7\u52ff\u4f7f\u7528","displayName":"useAsync","methods":[],"props":{"renderForm":{"defaultValue":null,"description":"","name":"renderForm","required":true,"type":{"name":"(props: AsyncFormProps) => ReactChild"}}}}]},{"key":"packages/async/lib/useAsyncStatus.d.ts","value":[{"description":"\u7b5b\u9009\u51fa\u9700\u8981\u7684Status","displayName":"useAsyncStatus","methods":[],"props":{}}]},{"key":"packages/async/src/Async.tsx","value":[{"description":"\u5f02\u6b65\u64cd\u4f5c\u5bb9\u5668","displayName":"Async","methods":[],"props":{"loading":{"defaultValue":null,"description":"\u52a0\u8f7d\u6548\u679c\u7ec4\u4ef6\u3010\u6bcf\u4e2aeffect\u5bf9\u5e94\u4e00\u4e2a\u6548\u679c\u3011\\n@deprecated \u4e0d\u63a8\u8350\u4f7f\u7528","name":"loading","required":false,"type":{"name":"any"}},"sharedLoading":{"defaultValue":null,"description":"\u5168\u5c40\u52a0\u8f7d\u6548\u679c\u7ec4\u4ef6\u3010\u6240\u6709effect\u5171\u7528\u4e00\u4e2a\u6548\u679c","name":"sharedLoading","required":false,"type":{"name":"any"}},"tips":{"defaultValue":null,"description":"\u663e\u793a\u526f\u4f5c\u7528\u63d0\u793a\u4fe1\u606f\u7684\u51fd\u6570","name":"tips","required":false,"type":{"name":"(e: AsyncResultEventType) => any"}},"modal":{"defaultValue":null,"description":"Model\u5f39\u7a97\u7ec4\u4ef6\uff0c\u517c\u5bb9antd Model","name":"modal","required":true,"type":{"name":"any"}},"form":{"defaultValue":null,"description":"Form\u7ec4\u4ef6","name":"form","required":true,"type":{"name":"any"}}}}]},{"key":"packages/async/src/consts.ts","value":[{"description":"\u5f02\u6b65\u961f\u5217\u53d8\u5316\u4e8b\u4ef6","displayName":"ASYNC_STATUS_CHANGE_NAME","methods":[],"props":{}}]},{"key":"packages/async/src/asyncModel.ts","value":[]},{"key":"packages/async/src/index.ts","value":[{"description":"\u6267\u884c\u9700\u8981\u663e\u793a\u786e\u5b9a\u5f39\u7a97\u3010\u53ef\u5185\u7f6e\u8868\u5355\u3011\u526f\u4f5c\u7528","displayName":"doAsync","methods":[],"props":{}},{"description":"\u6267\u884c\u526f\u4f5c\u7528","displayName":"doAsyncConfirmed","methods":[],"props":{"fetch":{"defaultValue":null,"description":"\u526f\u4f5c\u7528\u51fd\u6570","name":"fetch","required":true,"type":{"name":"F"}},"indicator":{"defaultValue":null,"description":"loading\u6548\u679c\uff0c\u914d\u7f6e\u6210false\u4e0d\u663e\u793aloading","name":"indicator","required":false,"type":{"name":"ReactNode"}},"channel":{"defaultValue":null,"description":"\u6765\u6e90","name":"channel","required":false,"type":{"name":"string"}},"params":{"defaultValue":null,"description":"F \u4ec5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u9002\u7528","name":"params","required":false,"type":{"name":"EnsureSingleArgumentsType<F>"}},"callback":{"defaultValue":null,"description":"\u56de\u8c03","name":"callback","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"onCancel":{"defaultValue":null,"description":"\u53d6\u6d88\u56de\u8c03","name":"onCancel","required":false,"type":{"name":"() => any"}},"onError":{"defaultValue":null,"description":"\u9519\u8bef\u56de\u8c03","name":"onError","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"onSuccess":{"defaultValue":null,"description":"\u6210\u529f\u56de\u8c03","name":"onSuccess","required":false,"type":{"name":"(res: GetPromiseResolved<GetReturnTypeOfFun<F>>) => any"}},"errorMsg":{"defaultValue":null,"description":"\u9519\u8bef\u4fe1\u606f\uff0c\u914d\u7f6e\u6210false\uff0c\u5219\u4e0d\u63d0\u793a\u9519\u8bef\u4fe1\u606f","name":"errorMsg","required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)> | ReactNodeArray | ReactPortal | ((res: GetPromiseResolved<...>) => ReactNode)"}},"successMsg":{"defaultValue":null,"description":"\u6210\u529f\u4fe1\u606f\uff0c\u914d\u7f6e\u6210false\uff0c\u5219\u4e0d\u63d0\u793a\u6210\u529f\u4fe1\u606f","name":"successMsg","required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)> | ReactNodeArray | ReactPortal | ((res: GetPromiseResolved<...>) => ReactNode)"}},"paramsGenerator":{"defaultValue":null,"description":"F \u63a5\u6536\u591a\u4e2a\u53c2\u6570\u9002\u7528 - \u5fc5\u987b\u8fd4\u56de\u6570\u7ec4","name":"paramsGenerator","required":false,"type":{"name":"(params: NewAsyncParams<F>) => EnsureArgumentsType<F>"}},"ASYNC_ID":{"defaultValue":null,"description":"","name":"ASYNC_ID","required":false,"type":{"name":"number"}},"extraParams":{"defaultValue":null,"description":"\u8868\u5355\u60c5\u5f62\u4e0b\u8fd4\u56de\u6570\u636e","name":"extraParams","required":false,"type":{"name":"GetArgumentsType<F>[0]"}},"effectName":{"defaultValue":null,"description":"effect name\u3010@ekit/async 3.0.5 \u8d77\u652f\u6301\u3011","name":"effectName","required":false,"type":{"name":"string"}}}},{"description":"\u6e05\u7406","displayName":"doClearModal","methods":[],"props":{}},{"description":"\u5f02\u6b65\u961f\u5217\u53d8\u5316\u4e8b\u4ef6","displayName":"ASYNC_STATUS_CHANGE_NAME","methods":[],"props":{}},{"description":"\u7b5b\u9009\u51fa\u9700\u8981\u7684Status","displayName":"useAsyncStatus","methods":[],"props":{}}]},{"key":"packages/async/src/useAsync.ts","value":[{"description":"\u79c1\u6709hooks\uff0c\u8bf7\u52ff\u4f7f\u7528","displayName":"useAsync","methods":[],"props":{"renderForm":{"defaultValue":null,"description":"","name":"renderForm","required":true,"type":{"name":"(props: AsyncFormProps) => ReactChild"}}}}]},{"key":"packages/async/src/useAsyncStatus.ts","value":[{"description":"\u7b5b\u9009\u51fa\u9700\u8981\u7684Status","displayName":"useAsyncStatus","methods":[],"props":{}}]},{"key":"packages/event/__tests__/EventWrapper.test.tsx","value":[]},{"key":"packages/event/__tests__/setup.ts","value":[]},{"key":"packages/event/__tests__/useEvent.test.tsx","value":[]},{"key":"packages/event/lib/EventWrapper.d.ts","value":[{"description":"","displayName":"EventWrapperd","methods":[],"props":{}}]},{"key":"packages/event/lib/event.d.ts","value":[]},{"key":"packages/event/lib/index.d.ts","value":[{"description":"","displayName":"indexd","methods":[],"props":{}}]},{"key":"packages/event/lib/useEvent.d.ts","value":[]},{"key":"packages/event/src/EventWrapper.tsx","value":[{"description":"","displayName":"EventWrapper","methods":[],"props":{}}]},{"key":"packages/event/src/event.ts","value":[]},{"key":"packages/event/src/index.ts","value":[]},{"key":"packages/event/src/useEvent.ts","value":[]},{"key":"packages/event-center/lib/index.d.ts","value":[]},{"key":"packages/event-center/src/index.ts","value":[]},{"key":"packages/eslint-config/lib/base.d.ts","value":[{"description":"@file : eslint typescript \u57fa\u7840\u914d\u7f6e\\n@author : yangqianjun\\n@Date : 2019-07-20 15:12:00\\n@LastEditors : yangqianjun\\n@LastEditTime : 2019-12-16 11:16:15","displayName":"__type","methods":[],"props":{}}]},{"key":"packages/eslint-config/lib/index.d.ts","value":[]},{"key":"packages/eslint-config/src/base.ts","value":[{"description":"@file : eslint typescript \u57fa\u7840\u914d\u7f6e\\n@author : yangqianjun\\n@Date : 2019-07-20 15:12:00\\n@LastEditors : yangqianjun\\n@LastEditTime : 2019-12-16 11:16:15","displayName":"__object","methods":[],"props":{}}]},{"key":"packages/eslint-config/src/index.ts","value":[]},{"key":"packages/jest-config/lib/index.d.ts","value":[]},{"key":"packages/jest-config/src/index.ts","value":[]},{"key":"packages/model/__tests__/setup.ts","value":[]},{"key":"packages/model/__tests__/testExport.test.ts","value":[]},{"key":"packages/model/lib/index.d.ts","value":[{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"Model","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"MM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"Hooks Model","displayName":"__type","methods":[],"props":{}},{"description":"","displayName":"CM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u7528\u4ee5\u505a\u81ea\u52a8 redux store \u9694\u79bb","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"\u96c6\u6210 immer","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"createModel","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}}}},{"description":"A middleware is a higher-order function that composes a dispatch function\\nto return a new dispatch function. It often turns async actions into\\nactions.\\n\\nMiddleware is composable using function composition. It is useful for\\nlogging actions, performing side effects like routing, or turning an\\nasynchronous API call into a series of synchronous actions.\\n@template DispatchExt Extra Dispatch signature added by this middleware.\\n@template S The type of the state supported by this middleware.\\n@template D The type of Dispatch of the store where this middleware is\\ninstalled.","displayName":"Middleware","methods":[],"props":{"dispatch":{"defaultValue":null,"description":"","name":"dispatch","required":true,"type":{"name":"Dispatch<AnyAction>"}},"getState":{"defaultValue":null,"description":"","name":"getState","required":true,"type":{"name":"() => any"}}}},{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect\\n@file : \u4e0e\\n@ekit /async \u4ea4\u4e92\u7684\u903b\u8f91\\n@author : yangqianjun\\n@Date : 2020-02-07 10:34:24\\n@LastEditors : yangqianjun\\n@LastEditTime : 2020-02-07 15:52:41","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}}]},{"key":"packages/model/src/index.ts","value":[{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"Model","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"MM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"Hooks Model","displayName":"__type","methods":[],"props":{}},{"description":"","displayName":"CM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u7528\u4ee5\u505a\u81ea\u52a8 redux store \u9694\u79bb","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"\u96c6\u6210 immer","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"createModel","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}}}},{"description":"A middleware is a higher-order function that composes a dispatch function\\nto return a new dispatch function. It often turns async actions into\\nactions.\\n\\nMiddleware is composable using function composition. It is useful for\\nlogging actions, performing side effects like routing, or turning an\\nasynchronous API call into a series of synchronous actions.\\n@template DispatchExt Extra Dispatch signature added by this middleware.\\n@template S The type of the state supported by this middleware.\\n@template D The type of Dispatch of the store where this middleware is\\ninstalled.","displayName":"Middleware","methods":[],"props":{"dispatch":{"defaultValue":null,"description":"","name":"dispatch","required":true,"type":{"name":"Dispatch<AnyAction>"}},"getState":{"defaultValue":null,"description":"","name":"getState","required":true,"type":{"name":"() => any"}}}},{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect\\n@file : \u4e0e\\n@ekit /async \u4ea4\u4e92\u7684\u903b\u8f91\\n@author : yangqianjun\\n@Date : 2020-02-07 10:34:24\\n@LastEditors : yangqianjun\\n@LastEditTime : 2020-02-07 15:52:41","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}}]},{"key":"packages/model-factory/__tests__/factory.spec.ts","value":[]},{"key":"packages/model-factory/src/consts.ts","value":[{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}}]},{"key":"packages/model-factory/src/factory.ts","value":[{"description":"","displayName":"factory","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}},"effectFactory":{"defaultValue":null,"description":"effectWrapper","name":"effectFactory","required":false,"type":{"name":"IEffectFactory"}}}}]},{"key":"packages/model-factory/src/index.ts","value":[{"description":"","displayName":"src","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}},"effectFactory":{"defaultValue":null,"description":"effectWrapper","name":"effectFactory","required":false,"type":{"name":"IEffectFactory"}}}},{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}}]},{"key":"packages/model-factory/lib/consts.d.ts","value":[{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}}]},{"key":"packages/model-factory/lib/factory.d.ts","value":[{"description":"","displayName":"factoryd","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}},"effectFactory":{"defaultValue":null,"description":"effectWrapper","name":"effectFactory","required":false,"type":{"name":"IEffectFactory"}}}}]},{"key":"packages/model-factory/lib/index.d.ts","value":[{"description":"","displayName":"indexd","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}},"effectFactory":{"defaultValue":null,"description":"effectWrapper","name":"effectFactory","required":false,"type":{"name":"IEffectFactory"}}}},{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect\\n@file : \u4e0e\\n@ekit /async \u4ea4\u4e92\u7684\u903b\u8f91\\n@author : yangqianjun\\n@Date : 2020-02-07 10:34:24\\n@LastEditors : yangqianjun\\n@LastEditTime : 2020-02-07 15:52:41","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}}]},{"key":"packages/redux-model/__tests__/cm.spec.ts","value":[]},{"key":"packages/redux-model/__tests__/cm.test.ts","value":[]},{"key":"packages/redux-model/__tests__/createModel.spec.ts","value":[]},{"key":"packages/redux-model/__tests__/createModel.test.ts","value":[]},{"key":"packages/redux-model/__tests__/setup.ts","value":[]},{"key":"packages/redux-model/lib/cm.d.ts","value":[{"description":"","displayName":"CM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u7528\u4ee5\u505a\u81ea\u52a8 redux store \u9694\u79bb","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"\u96c6\u6210 immer","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}}]},{"key":"packages/redux-model/lib/consts.d.ts","value":[]},{"key":"packages/redux-model/lib/createModel.d.ts","value":[{"description":"","displayName":"globalPut","methods":[],"props":{}},{"description":"TypeSafe tPut Blocking","displayName":"tPut","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.","name":"toString","required":false,"type":{"name":"(() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => Object)"}}}},{"description":"TypeSafe tNBPut Non Blocking","displayName":"tNBPut","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.","name":"toString","required":false,"type":{"name":"(() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => Object)"}}}},{"description":"\u7528\u4ee5\u66ff\u4ee3 redux-saga call \u7684 typed tCall","displayName":"tCall","methods":[],"props":{}},{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"createModel","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}}}}]},{"key":"packages/redux-model/lib/effectWrapper.d.ts","value":[{"description":"for Redux Model","displayName":"effectWrapper","methods":[],"props":{}}]},{"key":"packages/redux-model/lib/index.d.ts","value":[{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"createModel","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}}}},{"description":"Creates an Effect description that instructs the middleware to wait for a\\nspecified action on the Store. The Generator is suspended until an action\\nthat matches `pattern` is dispatched.\\n\\nThe result of `yield take(pattern)` is an action object being dispatched.\\n\\n`pattern` is interpreted using the following rules:\\n\\n- If `take` is called with no arguments or `\'*\'` all dispatched actions are\\n   matched (e.g. `take()` will match all actions)\\n\\n- If it is a function, the action is matched if `pattern(action)` is true\\n   (e.g. `take(action => action.entities)` will match all actions having a\\n   (truthy) `entities` field.)\\n> Note: if the pattern function has `toString` defined on it, `action.type`\\n> will be tested against `pattern.toString()` instead. This is useful if\\n> you\'re using an action creator library like redux-act or redux-actions.\\n\\n- If it is a String, the action is matched if `action.type === pattern` (e.g.\\n   `take(INCREMENT_ASYNC)`\\n\\n- If it is an array, each item in the array is matched with aforementioned\\n   rules, so the mixed array of strings and function predicates is supported.\\n   The most common use case is an array of strings though, so that\\n   `action.type` is matched against all items in the array (e.g.\\n   `take([INCREMENT, DECREMENT])` and that would match either actions of type\\n   `INCREMENT` or `DECREMENT`).\\n\\nThe middleware provides a special action `END`. If you dispatch the END\\naction, then all Sagas blocked on a take Effect will be terminated regardless\\nof the specified pattern. If the terminated Saga has still some forked tasks\\nwhich are still running, it will wait for all the child tasks to terminate\\nbefore terminating the Task.\\nCreates an Effect description that instructs the middleware to wait for a\\nspecified message from the provided Channel. If the channel is already\\nclosed, then the Generator will immediately terminate following the same\\nprocess described above for `take(pattern)`.","displayName":"take","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.\\nReturns a string representation of an object.\\nReturns a string representation of a function.\\nReturns a string representation of an array.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.","name":"toString","required":false,"type":{"name":"(() => string) | ((radix?: number) => string) | (() => string) | (() => string) | (() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.\\nReturns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => number) | (() => Object) | (() => symbol)"}}}},{"description":"Same as `take(pattern)` but does not automatically terminate the Saga on an\\n`END` action. Instead all Sagas blocked on a take Effect will get the `END`\\nobject.\\n\\n#### Notes\\n\\n`takeMaybe` got its name from the FP analogy - it\'s like instead of having a\\nreturn type of `ACTION` (with automatic handling) we can have a type of\\n`Maybe(ACTION)` so we can handle both cases:\\n\\n- case when there is a `Just(ACTION)` (we have an action)\\n- the case of `NOTHING` (channel was closed*). i.e. we need some way to map\\n   over `END`\\n\\ninternally all `dispatch`ed actions are going through the `stdChannel` which\\nis getting closed when `dispatch(END)` happens\\nSame as `take(channel)` but does not automatically terminate the Saga on an\\n`END` action. Instead all Sagas blocked on a take Effect will get the `END`\\nobject.","displayName":"takeMaybe","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.\\nReturns a string representation of an object.\\nReturns a string representation of a function.\\nReturns a string representation of an array.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.","name":"toString","required":false,"type":{"name":"(() => string) | ((radix?: number) => string) | (() => string) | (() => string) | (() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.\\nReturns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => number) | (() => Object) | (() => symbol)"}}}},{"description":"Spawns a `saga` on each action dispatched to the Store that matches\\n`pattern`.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchUser`. We use\\n`takeEvery` to start a new `fetchUser` task on each dispatched\\n`USER_REQUESTED` action:\\n\\n    import { takeEvery } from `redux-saga/effects`\\n\\n    function* fetchUser(action) {\\n      ...\\n    }\\n\\n    function* watchFetchUser() {\\n      yield takeEvery(\'USER_REQUESTED\', fetchUser)\\n    }\\n\\n#### Notes\\n\\n`takeEvery` is a high-level API built using `take` and `fork`. Here is how\\nthe helper could be implemented using the low-level Effects\\n\\n    const takeEvery = (patternOrChannel, saga, ...args) => fork(function*() {\\n      while (true) {\\n        const action = yield take(patternOrChannel)\\n        yield fork(saga, ...args.concat(action))\\n      }\\n    })\\n\\n`takeEvery` allows concurrent actions to be handled. In the example above,\\nwhen a `USER_REQUESTED` action is dispatched, a new `fetchUser` task is\\nstarted even if a previous `fetchUser` is still pending (for example, the\\nuser clicks on a `Load User` button 2 consecutive times at a rapid rate, the\\n2nd click will dispatch a `USER_REQUESTED` action while the `fetchUser` fired\\non the first one hasn\'t yet terminated)\\n\\n`takeEvery` doesn\'t handle out of order responses from tasks. There is no\\nguarantee that the tasks will terminate in the same order they were started.\\nTo handle out of order responses, you may consider `takeLatest` below.\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`takeEvery(pattern, saga, ...args)`.\\n@param pattern for more information see docs for `take(pattern)`\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `takeEvery` will add\\nthe incoming action to the argument list (i.e. the action will be the last\\nargument provided to `saga`)","displayName":"takeEvery","methods":[],"props":{}},{"description":"Spawns a `saga` on each action dispatched to the Store that matches\\n`pattern`. And automatically cancels any previous `saga` task started\\npreviously if it\'s still running.\\n\\nEach time an action is dispatched to the store. And if this action matches\\n`pattern`, `takeLatest` starts a new `saga` task in the background. If a\\n`saga` task was started previously (on the last action dispatched before the\\nactual action), and if this task is still running, the task will be\\ncancelled.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchUser`. We use\\n`takeLatest` to start a new `fetchUser` task on each dispatched\\n`USER_REQUESTED` action. Since `takeLatest` cancels any pending task started\\npreviously, we ensure that if a user triggers multiple consecutive\\n`USER_REQUESTED` actions rapidly, we\'ll only conclude with the latest action\\n\\n    import { takeLatest } from `redux-saga/effects`\\n\\n    function* fetchUser(action) {\\n      ...\\n    }\\n\\n    function* watchLastFetchUser() {\\n      yield takeLatest(\'USER_REQUESTED\', fetchUser)\\n    }\\n\\n#### Notes\\n\\n`takeLatest` is a high-level API built using `take` and `fork`. Here is how\\nthe helper could be implemented using the low-level Effects\\n\\n    const takeLatest = (patternOrChannel, saga, ...args) => fork(function*() {\\n      let lastTask\\n      while (true) {\\n        const action = yield take(patternOrChannel)\\n        if (lastTask) {\\n          yield cancel(lastTask) // cancel is no-op if the task has already terminated\\n        }\\n        lastTask = yield fork(saga, ...args.concat(action))\\n      }\\n    })\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`takeLatest(pattern, saga, ...args)`.\\n@param pattern for more information see docs for [`take(pattern)`](#takepattern)\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `takeLatest` will add\\nthe incoming action to the argument list (i.e. the action will be the last\\nargument provided to `saga`)","displayName":"takeLatest","methods":[],"props":{}},{"description":"Spawns a `saga` on each action dispatched to the Store that matches\\n`pattern`. After spawning a task once, it blocks until spawned saga completes\\nand then starts to listen for a `pattern` again.\\n\\nIn short, `takeLeading` is listening for the actions when it doesn\'t run a\\nsaga.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchUser`. We use\\n`takeLeading` to start a new `fetchUser` task on each dispatched\\n`USER_REQUESTED` action. Since `takeLeading` ignores any new coming task\\nafter it\'s started, we ensure that if a user triggers multiple consecutive\\n`USER_REQUESTED` actions rapidly, we\'ll only keep on running with the leading\\naction\\n\\n    import { takeLeading } from `redux-saga/effects`\\n\\n    function* fetchUser(action) {\\n      ...\\n    }\\n\\n    function* watchLastFetchUser() {\\n      yield takeLeading(\'USER_REQUESTED\', fetchUser)\\n    }\\n\\n#### Notes\\n\\n`takeLeading` is a high-level API built using `take` and `call`. Here is how\\nthe helper could be implemented using the low-level Effects\\n\\n    const takeLeading = (patternOrChannel, saga, ...args) => fork(function*() {\\n      while (true) {\\n        const action = yield take(patternOrChannel);\\n        yield call(saga, ...args.concat(action));\\n      }\\n    })\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`takeLeading(pattern, saga, ...args)`.\\n@param pattern for more information see docs for [`take(pattern)`](#takepattern)\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `takeLeading` will\\nadd the incoming action to the argument list (i.e. the action will be the\\nlast argument provided to `saga`)","displayName":"takeLeading","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to dispatch an\\naction to the Store. This effect is non-blocking and any errors that are\\nthrown downstream (e.g. in a reducer) will not bubble back into the saga.\\nCreates an Effect description that instructs the middleware to put an action\\ninto the provided channel.\\n\\nThis effect is blocking if the put is *not* buffered but immediately consumed\\nby takers. If an error is thrown in any of these takers it will bubble back\\ninto the saga.\\n@param action [see Redux `dispatch` documentation for complete info](http://redux.js.org/docs/api/Store.html#dispatch)\\n@param channel a `Channel` Object.\\n@param action [see Redux `dispatch` documentation for complete info](http://redux.js.org/docs/api/Store.html#dispatch)","displayName":"put","methods":[],"props":{"type":{"defaultValue":null,"description":"","name":"type","required":true,"type":{"name":"any"}}}},{"description":"Just like `put` but the effect is blocking (if promise is returned from\\n`dispatch` it will wait for its resolution) and will bubble up errors from\\ndownstream.\\n@param action [see Redux `dispatch` documentation for complete info](http://redux.js.org/docs/api/Store.html#dispatch)","displayName":"putResolve","methods":[],"props":{"type":{"defaultValue":null,"description":"","name":"type","required":true,"type":{"name":"any"}}}},{"description":"Creates an Effect description that instructs the middleware to call the\\nfunction `fn` with `args` as arguments.\\n\\n#### Notes\\n\\n`fn` can be either a *normal* or a Generator function.\\n\\nThe middleware invokes the function and examines its result.\\n\\nIf the result is an Iterator object, the middleware will run that Generator\\nfunction, just like it did with the startup Generators (passed to the\\nmiddleware on startup). The parent Generator will be suspended until the\\nchild Generator terminates normally, in which case the parent Generator is\\nresumed with the value returned by the child Generator. Or until the child\\naborts with some error, in which case an error will be thrown inside the\\nparent Generator.\\n\\nIf `fn` is a normal function and returns a Promise, the middleware will\\nsuspend the Generator until the Promise is settled. After the promise is\\nresolved the Generator is resumed with the resolved value, or if the Promise\\nis rejected an error is thrown inside the Generator.\\n\\nIf the result is not an Iterator object nor a Promise, the middleware will\\nimmediately return that value back to the saga, so that it can resume its\\nexecution synchronously.\\n\\nWhen an error is thrown inside the Generator, if it has a `try/catch` block\\nsurrounding the current `yield` instruction, the control will be passed to\\nthe `catch` block. Otherwise, the Generator aborts with the raised error, and\\nif this Generator was called by another Generator, the error will propagate\\nto the calling Generator.\\nSame as `call([context, fn], ...args)` but supports passing a `fn` as string.\\nUseful for invoking object\'s methods, i.e.\\n`yield call([localStorage, \'getItem\'], \'redux-saga\')`\\nSame as `call([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield call({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\nSame as `call(fn, ...args)` but supports passing a `this` context to `fn`.\\nThis is useful to invoke object methods.\\nSame as `call([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield call({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\n@param fn A Generator function, or normal function which either returns a\\nPromise as result, or any other value.\\n@param args An array of values to be passed as arguments to `fn`","displayName":"call","methods":[],"props":{}},{"description":"Alias for `call([context, fn], ...args)`.","displayName":"apply","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to invoke `fn` as\\na Node style function.\\nSame as `cps([context, fn], ...args)` but supports passing a `fn` as string.\\nUseful for invoking object\'s methods, i.e.\\n`yield cps([localStorage, \'getItem\'], \'redux-saga\')`\\nSame as `cps([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield cps({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\nSame as `cps(fn, ...args)` but supports passing a `this` context to `fn`.\\nThis is useful to invoke object methods.\\nSame as `cps([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield cps({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\n@param fn a Node style function. i.e. a function which accepts in addition to\\nits arguments, an additional callback to be invoked by `fn` when it\\nterminates. The callback accepts two parameters, where the first parameter\\nis used to report errors while the second is used to report successful\\nresults\\n@param args an array to be passed as arguments for `fn`","displayName":"cps","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to perform a\\n*non-blocking call* on `fn`\\n\\nreturns a `Task` object.\\n\\n#### Note\\n\\n`fork`, like `call`, can be used to invoke both normal and Generator\\nfunctions. But, the calls are non-blocking, the middleware doesn\'t suspend\\nthe Generator while waiting for the result of `fn`. Instead as soon as `fn`\\nis invoked, the Generator resumes immediately.\\n\\n`fork`, alongside `race`, is a central Effect for managing concurrency\\nbetween Sagas.\\n\\nThe result of `yield fork(fn ...args)` is a `Task` object.  An object\\nwith some useful methods and properties.\\n\\nAll forked tasks are *attached* to their parents. When the parent terminates\\nthe execution of its own body of instructions, it will wait for all forked\\ntasks to terminate before returning.\\n\\nErrors from child tasks automatically bubble up to their parents. If any\\nforked task raises an uncaught error, then the parent task will abort with\\nthe child Error, and the whole Parent\'s execution tree (i.e. forked tasks +\\nthe *main task* represented by the parent\'s body if it\'s still running) will\\nbe cancelled.\\n\\nCancellation of a forked Task will automatically cancel all forked tasks that\\nare still executing. It\'ll also cancel the current Effect where the cancelled\\ntask was blocked (if any).\\n\\nIf a forked task fails *synchronously* (ie: fails immediately after its\\nexecution before performing any async operation), then no Task is returned,\\ninstead the parent will be aborted as soon as possible (since both parent and\\nchild execute in parallel, the parent will abort as soon as it takes notice\\nof the child failure).\\n\\nTo create *detached* forks, use `spawn` instead.\\nSame as `fork([context, fn], ...args)` but supports passing a `fn` as string.\\nUseful for invoking object\'s methods, i.e.\\n`yield fork([localStorage, \'getItem\'], \'redux-saga\')`\\nSame as `fork([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield fork({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\nSame as `fork(fn, ...args)` but supports passing a `this` context to `fn`.\\nThis is useful to invoke object methods.\\nSame as `fork([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield fork({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\n@param fn A Generator function, or normal function which returns a Promise as result\\n@param args An array of values to be passed as arguments to `fn`","displayName":"fork","methods":[],"props":{}},{"description":"Same as `fork(fn, ...args)` but creates a *detached* task. A detached task\\nremains independent from its parent and acts like a top-level task. The\\nparent will not wait for detached tasks to terminate before returning and all\\nevents which may affect the parent or the detached task are completely\\nindependents (error, cancellation).\\nSame as `spawn([context, fn], ...args)` but supports passing a `fn` as string.\\nUseful for invoking object\'s methods, i.e.\\n`yield spawn([localStorage, \'getItem\'], \'redux-saga\')`\\nSame as `spawn([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield spawn({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\nSame as `spawn(fn, ...args)` but supports passing a `this` context to `fn`.\\nThis is useful to invoke object methods.\\nSame as `spawn([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield spawn({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.","displayName":"spawn","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to wait for the\\nresult of a previously forked task.\\n\\n#### Notes\\n\\n`join` will resolve to the same outcome of the joined task (success or\\nerror). If the joined task is cancelled, the cancellation will also propagate\\nto the Saga executing the join effect. Similarly, any potential callers of\\nthose joiners will be cancelled as well.\\nCreates an Effect description that instructs the middleware to wait for the\\nresults of previously forked tasks.\\n@param task A `Task` object returned by a previous `fork`\\n@param tasks A `Task` is the object returned by a previous `fork`","displayName":"join","methods":[],"props":{"isRunning":{"defaultValue":null,"description":"Returns true if the task hasn\'t yet returned or thrown an error","name":"isRunning","required":true,"type":{"name":"() => boolean"}},"isCancelled":{"defaultValue":null,"description":"Returns true if the task has been cancelled","name":"isCancelled","required":true,"type":{"name":"() => boolean"}},"result":{"defaultValue":null,"description":"Returns task return value. `undefined` if task is still running","name":"result","required":true,"type":{"name":"<T = any>() => T"}},"error":{"defaultValue":null,"description":"Returns task thrown error. `undefined` if task is still running","name":"error","required":true,"type":{"name":"() => any"}},"toPromise":{"defaultValue":null,"description":"Returns a Promise which is either:\\n- resolved with task\'s return value\\n- rejected with task\'s thrown error","name":"toPromise","required":true,"type":{"name":"<T = any>() => Promise<T>"}},"cancel":{"defaultValue":null,"description":"Cancels the task (If it is still running)","name":"cancel","required":true,"type":{"name":"() => void"}},"setContext":{"defaultValue":null,"description":"","name":"setContext","required":true,"type":{"name":"<C extends object>(props: Partial<C>) => void"}}}},{"description":"Creates an Effect description that instructs the middleware to cancel a\\npreviously forked task.\\n\\n#### Notes\\n\\nTo cancel a running task, the middleware will invoke `return` on the\\nunderlying Generator object. This will cancel the current Effect in the task\\nand jump to the finally block (if defined).\\n\\nInside the finally block, you can execute any cleanup logic or dispatch some\\naction to keep the store in a consistent state (e.g. reset the state of a\\nspinner to false when an ajax request is cancelled). You can check inside the\\nfinally block if a Saga was cancelled by issuing a `yield cancelled()`.\\n\\nCancellation propagates downward to child sagas. When cancelling a task, the\\nmiddleware will also cancel the current Effect (where the task is currently\\nblocked). If the current Effect is a call to another Saga, it will be also\\ncancelled. When cancelling a Saga, all *attached forks* (sagas forked using\\n`yield fork()`) will be cancelled. This means that cancellation effectively\\naffects the whole execution tree that belongs to the cancelled task.\\n\\n`cancel` is a non-blocking Effect. i.e. the Saga executing it will resume\\nimmediately after performing the cancellation.\\n\\nFor functions which return Promise results, you can plug your own\\ncancellation logic by attaching a `[CANCEL]` to the promise.\\n\\nThe following example shows how to attach cancellation logic to a Promise\\nresult:\\n\\n    import { CANCEL } from \'redux-saga\'\\n    import { fork, cancel } from \'redux-saga/effects\'\\n\\n    function myApi() {\\n      const promise = myXhr(...)\\n\\n      promise[CANCEL] = () => myXhr.abort()\\n      return promise\\n    }\\n\\n    function* mySaga() {\\n\\n      const task = yield fork(myApi)\\n\\n      // ... later\\n      // will call promise[CANCEL] on the result of myApi\\n      yield cancel(task)\\n    }\\n\\nredux-saga will automatically cancel jqXHR objects using their `abort` method.\\nCreates an Effect description that instructs the middleware to cancel\\npreviously forked tasks.\\n\\n#### Notes\\n\\nIt wraps the array of tasks in cancel effects, roughly becoming the\\nequivalent of `yield tasks.map(t => cancel(t))`.\\nCreates an Effect description that instructs the middleware to cancel a task\\nin which it has been yielded (self-cancellation). It allows to reuse\\ndestructor-like logic inside a `finally` blocks for both outer\\n(`cancel(task)`) and self (`cancel()`) cancellations.\\n\\n#### Example\\n\\n    function* deleteRecord({ payload }) {\\n      try {\\n        const { confirm, deny } = yield call(prompt);\\n        if (confirm) {\\n          yield put(actions.deleteRecord.confirmed())\\n        }\\n        if (deny) {\\n          yield cancel()\\n        }\\n      } catch(e) {\\n        // handle failure\\n      } finally {\\n        if (yield cancelled()) {\\n          // shared cancellation logic\\n          yield put(actions.deleteRecord.cancel(payload))\\n        }\\n      }\\n    }\\n@param task A `Task` object returned by a previous `fork`\\n@param tasks A `Task` is the object returned by a previous `fork`","displayName":"cancel","methods":[],"props":{"isRunning":{"defaultValue":null,"description":"Returns true if the task hasn\'t yet returned or thrown an error","name":"isRunning","required":true,"type":{"name":"() => boolean"}},"isCancelled":{"defaultValue":null,"description":"Returns true if the task has been cancelled","name":"isCancelled","required":true,"type":{"name":"() => boolean"}},"result":{"defaultValue":null,"description":"Returns task return value. `undefined` if task is still running","name":"result","required":true,"type":{"name":"<T = any>() => T"}},"error":{"defaultValue":null,"description":"Returns task thrown error. `undefined` if task is still running","name":"error","required":true,"type":{"name":"() => any"}},"toPromise":{"defaultValue":null,"description":"Returns a Promise which is either:\\n- resolved with task\'s return value\\n- rejected with task\'s thrown error","name":"toPromise","required":true,"type":{"name":"<T = any>() => Promise<T>"}},"cancel":{"defaultValue":null,"description":"Cancels the task (If it is still running)","name":"cancel","required":true,"type":{"name":"() => void"}},"setContext":{"defaultValue":null,"description":"","name":"setContext","required":true,"type":{"name":"<C extends object>(props: Partial<C>) => void"}}}},{"description":"Creates an effect that instructs the middleware to invoke the provided\\nselector on the current Store\'s state (i.e. returns the result of\\n`selector(getState(), ...args)`).\\n\\nIf `select` is called without argument (i.e. `yield select()`) then the\\neffect is resolved with the entire state (the same result of a `getState()`\\ncall).\\n\\n> It\'s important to note that when an action is dispatched to the store, the\\nmiddleware first forwards the action to the reducers and then notifies the\\nSagas. This means that when you query the Store\'s State, you get the State\\n**after** the action has been applied. However, this behavior is only\\nguaranteed if all subsequent middlewares call `next(action)` synchronously.\\nIf any subsequent middleware calls `next(action)` asynchronously (which is\\nunusual but possible), then the sagas will get the state from **before** the\\naction is applied.  Therefore it is recommended to review the source of each\\nsubsequent middleware to ensure it calls `next(action)` synchronously, or\\nelse ensure that redux-saga is the last middleware in the call chain.\\n\\n#### Notes\\n\\nPreferably, a Saga should be autonomous and should not depend on the Store\'s\\nstate. This makes it easy to modify the state implementation without\\naffecting the Saga code. A saga should preferably depend only on its own\\ninternal control state when possible. But sometimes, one could find it more\\nconvenient for a Saga to query the state instead of maintaining the needed\\ndata by itself (for example, when a Saga duplicates the logic of invoking\\nsome reducer to compute a state that was already computed by the Store).\\n\\nFor example, suppose we have this state shape in our application:\\n\\n    state = {\\n      cart: {...}\\n    }\\n\\nWe can create a *selector*, i.e. a function which knows how to extract the\\n`cart` data from the State:\\n\\n`./selectors`\\n\\n    export const getCart = state => state.cart\\n\\n\\nThen we can use that selector from inside a Saga using the `select` Effect:\\n\\n`./sagas.js`\\n\\n    import { take, fork, select } from \'redux-saga/effects\'\\n    import { getCart } from \'./selectors\'\\n\\n    function* checkout() {\\n      // query the state using the exported selector\\n      const cart = yield select(getCart)\\n\\n      // ... call some API endpoint then dispatch a success/error action\\n    }\\n\\n    export default function* rootSaga() {\\n      while (true) {\\n        yield take(\'CHECKOUT_REQUEST\')\\n        yield fork(checkout)\\n      }\\n    }\\n\\n`checkout` can get the needed information directly by using\\n`select(getCart)`. The Saga is coupled only with the `getCart` selector. If\\nwe have many Sagas (or React Components) that needs to access the `cart`\\nslice, they will all be coupled to the same function `getCart`. And if we now\\nchange the state shape, we need only to update `getCart`.\\n@param selector a function `(state, ...args) => args`. It takes the current\\nstate and optionally some arguments and returns a slice of the current\\nStore\'s state\\n@param args optional arguments to be passed to the selector in addition of\\n`getState`.","displayName":"select","methods":[],"props":{}},{"description":"Creates an effect that instructs the middleware to queue the actions matching\\n`pattern` using an event channel. Optionally, you can provide a buffer to\\ncontrol buffering of the queued actions.\\n\\n#### Example\\n\\nThe following code creates a channel to buffer all `USER_REQUEST` actions.\\nNote that even the Saga may be blocked on the `call` effect. All actions that\\ncome while it\'s blocked are automatically buffered. This causes the Saga to\\nexecute the API calls one at a time\\n\\n    import { actionChannel, call } from \'redux-saga/effects\'\\n    import api from \'...\'\\n\\n    function* takeOneAtMost() {\\n      const chan = yield actionChannel(\'USER_REQUEST\')\\n      while (true) {\\n        const {payload} = yield take(chan)\\n        yield call(api.getUser, payload)\\n      }\\n    }\\n@param pattern see API for `take(pattern)`\\n@param buffer a `Buffer` object","displayName":"actionChannel","methods":[],"props":{}},{"description":"Creates an effect that instructs the middleware to flush all buffered items\\nfrom the channel. Flushed items are returned back to the saga, so they can be\\nutilized if needed.\\n\\n#### Example\\n\\n    function* saga() {\\n      const chan = yield actionChannel(\'ACTION\')\\n\\n      try {\\n        while (true) {\\n          const action = yield take(chan)\\n          // ...\\n        }\\n      } finally {\\n        const actions = yield flush(chan)\\n        // ...\\n      }\\n    }\\n@param channel a `Channel` Object.","displayName":"flush","methods":[],"props":{"flush":{"defaultValue":null,"description":"","name":"flush","required":true,"type":{"name":"(cb: (items: END | T[]) => void) => void"}}}},{"description":"Creates an effect that instructs the middleware to return whether this\\ngenerator has been cancelled. Typically you use this Effect in a finally\\nblock to run Cancellation specific code\\n\\n#### Example\\n\\n    function* saga() {\\n      try {\\n        // ...\\n      } finally {\\n        if (yield cancelled()) {\\n          // logic that should execute only on Cancellation\\n        }\\n        // logic that should execute in all situations (e.g. closing a channel)\\n      }\\n    }","displayName":"cancelled","methods":[],"props":{}},{"description":"Creates an effect that instructs the middleware to update its own context.\\nThis effect extends saga\'s context instead of replacing it.","displayName":"setContext","methods":[],"props":{}},{"description":"Creates an effect that instructs the middleware to return a specific property\\nof saga\'s context.","displayName":"getContext","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"Returns an effect descriptor to block execution for `ms` milliseconds and return `val` value.","displayName":"delay","methods":[],"props":{}},{"description":"Spawns a `saga` on an action dispatched to the Store that matches `pattern`.\\nAfter spawning a task it\'s still accepting incoming actions into the\\nunderlying `buffer`, keeping at most 1 (the most recent one), but in the same\\ntime holding up with spawning new task for `ms` milliseconds (hence its name -\\n`throttle`). Purpose of this is to ignore incoming actions for a given\\nperiod of time while processing a task.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchAutocomplete`. We use\\n`throttle` to start a new `fetchAutocomplete` task on dispatched\\n`FETCH_AUTOCOMPLETE` action. However since `throttle` ignores consecutive\\n`FETCH_AUTOCOMPLETE` for some time, we ensure that user won\'t flood our\\nserver with requests.\\n\\n    import { call, put, throttle } from `redux-saga/effects`\\n\\n    function* fetchAutocomplete(action) {\\n      const autocompleteProposals = yield call(Api.fetchAutocomplete, action.text)\\n      yield put({type: \'FETCHED_AUTOCOMPLETE_PROPOSALS\', proposals: autocompleteProposals})\\n    }\\n\\n    function* throttleAutocomplete() {\\n      yield throttle(1000, \'FETCH_AUTOCOMPLETE\', fetchAutocomplete)\\n    }\\n\\n#### Notes\\n\\n`throttle` is a high-level API built using `take`, `fork` and\\n`actionChannel`. Here is how the helper could be implemented using the\\nlow-level Effects\\n\\n    const throttle = (ms, pattern, task, ...args) => fork(function*() {\\n      const throttleChannel = yield actionChannel(pattern, buffers.sliding(1))\\n\\n      while (true) {\\n        const action = yield take(throttleChannel)\\n        yield fork(task, ...args, action)\\n        yield delay(ms)\\n      }\\n    })\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`throttle(ms, pattern, saga, ...args)`.\\n@param ms length of a time window in milliseconds during which actions will\\nbe ignored after the action starts processing\\n@param pattern for more information see docs for `take(pattern)`\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `throttle` will add\\nthe incoming action to the argument list (i.e. the action will be the last\\nargument provided to `saga`)","displayName":"throttle","methods":[],"props":{}},{"description":"Spawns a `saga` on an action dispatched to the Store that matches `pattern`.\\nSaga will be called after it stops taking `pattern` actions for `ms`\\nmilliseconds. Purpose of this is to prevent calling saga until the actions\\nare settled off.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchAutocomplete`. We use\\n`debounce` to delay calling `fetchAutocomplete` saga until we stop receive\\nany `FETCH_AUTOCOMPLETE` events for at least `1000` ms.\\n\\n    import { call, put, debounce } from `redux-saga/effects`\\n\\n    function* fetchAutocomplete(action) {\\n      const autocompleteProposals = yield call(Api.fetchAutocomplete, action.text)\\n      yield put({type: \'FETCHED_AUTOCOMPLETE_PROPOSALS\', proposals: autocompleteProposals})\\n    }\\n\\n    function* debounceAutocomplete() {\\n      yield debounce(1000, \'FETCH_AUTOCOMPLETE\', fetchAutocomplete)\\n    }\\n\\n#### Notes\\n\\n`debounce` is a high-level API built using `take`, `delay` and `fork`. Here\\nis how the helper could be implemented using the low-level Effects\\n\\n    const debounce = (ms, pattern, task, ...args) => fork(function*() {\\n      while (true) {\\n        let action = yield take(pattern)\\n\\n        while (true) {\\n          const { debounced, _action } = yield race({\\n            debounced: delay(ms),\\n            _action: take(pattern)\\n          })\\n\\n          if (debounced) {\\n            yield fork(worker, ...args, action)\\n            break\\n          }\\n\\n          action = _action\\n        }\\n      }\\n    })\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`debounce(ms, pattern, saga, ...args)`.\\n@param ms defines how many milliseconds should elapse since the last time\\n`pattern` action was fired to call the `saga`\\n@param pattern for more information see docs for `take(pattern)`\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `debounce` will add\\nthe incoming action to the argument list (i.e. the action will be the last\\nargument provided to `saga`)","displayName":"debounce","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to call the\\nfunction `fn` with `args` as arguments. In case of failure will try to make\\nanother call after `delay` milliseconds, if a number of attempts < `maxTries`.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `retrySaga`. We use `retry`\\nto try to fetch our API 3 times with 10 second interval. If `request` fails\\nfirst time than `retry` will call `request` one more time while calls count\\nless than 3.\\n\\n    import { put, retry } from \'redux-saga/effects\'\\n    import { request } from \'some-api\';\\n\\n    function* retrySaga(data) {\\n      try {\\n        const SECOND = 1000\\n        const response = yield retry(3, 10 * SECOND, request, data)\\n        yield put({ type: \'REQUEST_SUCCESS\', payload: response })\\n      } catch(error) {\\n        yield put({ type: \'REQUEST_FAIL\', payload: { error } })\\n      }\\n    }\\n@param maxTries maximum calls count.\\n@param delay length of a time window in milliseconds between `fn` calls.\\n@param fn A Generator function, or normal function which either returns a\\nPromise as a result, or any other value.\\n@param args An array of values to be passed as arguments to `fn`","displayName":"retry","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to run multiple\\nEffects in parallel and wait for all of them to complete. It\'s quite the\\ncorresponding API to standard\\n[`Promise#all`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise/all).\\n\\n#### Example\\n\\nThe following example runs two blocking calls in parallel:\\n\\n    import { fetchCustomers, fetchProducts } from \'./path/to/api\'\\n    import { all, call } from `redux-saga/effects`\\n\\n    function* mySaga() {\\n      const [customers, products] = yield all([\\n        call(fetchCustomers),\\n        call(fetchProducts)\\n      ])\\n    }\\nThe same as `all([...effects])` but let\'s you to pass in a dictionary object\\nof effects with labels, just like `race(effects)`\\n@param effects a dictionary Object of the form {label: effect, ...}","displayName":"all","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => T"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: T[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<T>[]): T[]; (...items: (T | ConcatArray<T>)[]): T[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => T[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => T"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => T[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: T, b: T) => number) => T[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): T[]; (start: number, deleteCount: number, ...items: T[]): T[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: T[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: T, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: T, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends T>(callbackfn: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: T, index: number, array: T[]) => any, thisArg?: any): T[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T; (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T; <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U; }"}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T; (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T; <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U; }"}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends T>(predicate: (this: void, value: T, index: number, obj: T[]) => value is S, thisArg?: any): S; (predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): T; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: T, start?: number, end?: number) => T[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => T[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<T>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, T]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<T>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: T, fromIndex?: number) => boolean"}}}},{"description":"Creates an Effect description that instructs the middleware to run a *Race*\\nbetween multiple Effects (this is similar to how\\n[`Promise.race([...])`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise/race)\\nbehaves).\\n\\n\\n#### Example\\n\\nThe following example runs a race between two effects:\\n\\n1. A call to a function `fetchUsers` which returns a Promise\\n2. A `CANCEL_FETCH` action which may be eventually dispatched on the Store\\n\\n\\n    import { take, call, race } from `redux-saga/effects`\\n    import fetchUsers from \'./path/to/fetchUsers\'\\n\\n    function* fetchUsersSaga() {\\n      const { response, cancel } = yield race({\\n        response: call(fetchUsers),\\n        cancel: take(CANCEL_FETCH)\\n      })\\n    }\\n\\nIf `call(fetchUsers)` resolves (or rejects) first, the result of `race` will\\nbe an object with a single keyed object `{response: result}` where `result`\\nis the resolved result of `fetchUsers`.\\n\\nIf an action of type `CANCEL_FETCH` is dispatched on the Store before\\n`fetchUsers` completes, the result will be a single keyed object\\n`{cancel: action}`, where action is the dispatched action.\\n\\n#### Notes\\n\\nWhen resolving a `race`, the middleware automatically cancels all the losing\\nEffects.\\nThe same as `race(effects)` but lets you pass in an array of effects.\\n@param effects a dictionary Object of the form {label: effect, ...}","displayName":"race","methods":[],"props":{}},{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect\\n@file : \u4e0e\\n@ekit /async \u4ea4\u4e92\u7684\u903b\u8f91\\n@author : yangqianjun\\n@Date : 2020-02-07 10:34:24\\n@LastEditors : yangqianjun\\n@LastEditTime : 2020-02-07 15:52:41","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}},{"description":"","displayName":"CM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u7528\u4ee5\u505a\u81ea\u52a8 redux store \u9694\u79bb","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"\u96c6\u6210 immer","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"globalPut","methods":[],"props":{}},{"description":"TypeSafe tPut Blocking","displayName":"tPut","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.","name":"toString","required":false,"type":{"name":"(() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => Object)"}}}},{"description":"TypeSafe tNBPut Non Blocking","displayName":"tNBPut","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.","name":"toString","required":false,"type":{"name":"(() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => Object)"}}}},{"description":"\u7528\u4ee5\u66ff\u4ee3 redux-saga call \u7684 typed tCall","displayName":"tCall","methods":[],"props":{}},{"description":"promise redux \u4e2d\u95f4\u4ef6","displayName":"promiseMiddleware","methods":[],"props":{"dispatch":{"defaultValue":null,"description":"","name":"dispatch","required":true,"type":{"name":"Dispatch<AnyAction>"}},"getState":{"defaultValue":null,"description":"","name":"getState","required":true,"type":{"name":"() => any"}}}}]},{"key":"packages/redux-model/lib/promiseMiddleware.d.ts","value":[{"description":"promise redux \u4e2d\u95f4\u4ef6","displayName":"promiseMiddleware","methods":[],"props":{"dispatch":{"defaultValue":null,"description":"","name":"dispatch","required":true,"type":{"name":"Dispatch<AnyAction>"}},"getState":{"defaultValue":null,"description":"","name":"getState","required":true,"type":{"name":"() => any"}}}}]},{"key":"packages/redux-model/lib/types.d.ts","value":[]},{"key":"packages/redux-model/src/cm.ts","value":[{"description":"","displayName":"CM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u7528\u4ee5\u505a\u81ea\u52a8 redux store \u9694\u79bb","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"\u96c6\u6210 immer","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}}]},{"key":"packages/redux-model/src/consts.ts","value":[]},{"key":"packages/redux-model/src/createModel.ts","value":[{"description":"","displayName":"globalPut","methods":[],"props":{}},{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"createModel","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}}}},{"description":"TypeSafe tPut Blocking","displayName":"tPut","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.","name":"toString","required":false,"type":{"name":"(() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => Object)"}}}},{"description":"TypeSafe tNBPut Non Blocking","displayName":"tNBPut","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.","name":"toString","required":false,"type":{"name":"(() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => Object)"}}}},{"description":"\u7528\u4ee5\u66ff\u4ee3 redux-saga call \u7684 typed tCall","displayName":"tCall","methods":[],"props":{}}]},{"key":"packages/redux-model/src/effectWrapper.ts","value":[{"description":"for Redux Model","displayName":"effectWrapper","methods":[],"props":{}}]},{"key":"packages/redux-model/src/index.ts","value":[{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"src","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u540d\u7a7a\u95f4","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":false,"type":{"name":"E"}},"m":{"defaultValue":null,"description":"modern \u6a21\u5f0f\uff0c\u5f15\u5165 immer\uff0c\u89e3\u51b3 namespace \u7684\u95ee\u9898","name":"m","required":false,"type":{"name":"ModernType"}}}},{"description":"Creates an Effect description that instructs the middleware to wait for a\\nspecified action on the Store. The Generator is suspended until an action\\nthat matches `pattern` is dispatched.\\n\\nThe result of `yield take(pattern)` is an action object being dispatched.\\n\\n`pattern` is interpreted using the following rules:\\n\\n- If `take` is called with no arguments or `\'*\'` all dispatched actions are\\n   matched (e.g. `take()` will match all actions)\\n\\n- If it is a function, the action is matched if `pattern(action)` is true\\n   (e.g. `take(action => action.entities)` will match all actions having a\\n   (truthy) `entities` field.)\\n> Note: if the pattern function has `toString` defined on it, `action.type`\\n> will be tested against `pattern.toString()` instead. This is useful if\\n> you\'re using an action creator library like redux-act or redux-actions.\\n\\n- If it is a String, the action is matched if `action.type === pattern` (e.g.\\n   `take(INCREMENT_ASYNC)`\\n\\n- If it is an array, each item in the array is matched with aforementioned\\n   rules, so the mixed array of strings and function predicates is supported.\\n   The most common use case is an array of strings though, so that\\n   `action.type` is matched against all items in the array (e.g.\\n   `take([INCREMENT, DECREMENT])` and that would match either actions of type\\n   `INCREMENT` or `DECREMENT`).\\n\\nThe middleware provides a special action `END`. If you dispatch the END\\naction, then all Sagas blocked on a take Effect will be terminated regardless\\nof the specified pattern. If the terminated Saga has still some forked tasks\\nwhich are still running, it will wait for all the child tasks to terminate\\nbefore terminating the Task.\\nCreates an Effect description that instructs the middleware to wait for a\\nspecified message from the provided Channel. If the channel is already\\nclosed, then the Generator will immediately terminate following the same\\nprocess described above for `take(pattern)`.","displayName":"take","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.\\nReturns a string representation of an object.\\nReturns a string representation of a function.\\nReturns a string representation of an array.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.","name":"toString","required":false,"type":{"name":"(() => string) | ((radix?: number) => string) | (() => string) | (() => string) | (() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.\\nReturns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => number) | (() => Object) | (() => symbol)"}}}},{"description":"Same as `take(pattern)` but does not automatically terminate the Saga on an\\n`END` action. Instead all Sagas blocked on a take Effect will get the `END`\\nobject.\\n\\n#### Notes\\n\\n`takeMaybe` got its name from the FP analogy - it\'s like instead of having a\\nreturn type of `ACTION` (with automatic handling) we can have a type of\\n`Maybe(ACTION)` so we can handle both cases:\\n\\n- case when there is a `Just(ACTION)` (we have an action)\\n- the case of `NOTHING` (channel was closed*). i.e. we need some way to map\\n   over `END`\\n\\ninternally all `dispatch`ed actions are going through the `stdChannel` which\\nis getting closed when `dispatch(END)` happens\\nSame as `take(channel)` but does not automatically terminate the Saga on an\\n`END` action. Instead all Sagas blocked on a take Effect will get the `END`\\nobject.","displayName":"takeMaybe","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.\\nReturns a string representation of an object.\\nReturns a string representation of a function.\\nReturns a string representation of an array.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.","name":"toString","required":false,"type":{"name":"(() => string) | ((radix?: number) => string) | (() => string) | (() => string) | (() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.\\nReturns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => number) | (() => Object) | (() => symbol)"}}}},{"description":"Spawns a `saga` on each action dispatched to the Store that matches\\n`pattern`.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchUser`. We use\\n`takeEvery` to start a new `fetchUser` task on each dispatched\\n`USER_REQUESTED` action:\\n\\n    import { takeEvery } from `redux-saga/effects`\\n\\n    function* fetchUser(action) {\\n      ...\\n    }\\n\\n    function* watchFetchUser() {\\n      yield takeEvery(\'USER_REQUESTED\', fetchUser)\\n    }\\n\\n#### Notes\\n\\n`takeEvery` is a high-level API built using `take` and `fork`. Here is how\\nthe helper could be implemented using the low-level Effects\\n\\n    const takeEvery = (patternOrChannel, saga, ...args) => fork(function*() {\\n      while (true) {\\n        const action = yield take(patternOrChannel)\\n        yield fork(saga, ...args.concat(action))\\n      }\\n    })\\n\\n`takeEvery` allows concurrent actions to be handled. In the example above,\\nwhen a `USER_REQUESTED` action is dispatched, a new `fetchUser` task is\\nstarted even if a previous `fetchUser` is still pending (for example, the\\nuser clicks on a `Load User` button 2 consecutive times at a rapid rate, the\\n2nd click will dispatch a `USER_REQUESTED` action while the `fetchUser` fired\\non the first one hasn\'t yet terminated)\\n\\n`takeEvery` doesn\'t handle out of order responses from tasks. There is no\\nguarantee that the tasks will terminate in the same order they were started.\\nTo handle out of order responses, you may consider `takeLatest` below.\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`takeEvery(pattern, saga, ...args)`.\\n@param pattern for more information see docs for `take(pattern)`\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `takeEvery` will add\\nthe incoming action to the argument list (i.e. the action will be the last\\nargument provided to `saga`)","displayName":"takeEvery","methods":[],"props":{}},{"description":"Spawns a `saga` on each action dispatched to the Store that matches\\n`pattern`. And automatically cancels any previous `saga` task started\\npreviously if it\'s still running.\\n\\nEach time an action is dispatched to the store. And if this action matches\\n`pattern`, `takeLatest` starts a new `saga` task in the background. If a\\n`saga` task was started previously (on the last action dispatched before the\\nactual action), and if this task is still running, the task will be\\ncancelled.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchUser`. We use\\n`takeLatest` to start a new `fetchUser` task on each dispatched\\n`USER_REQUESTED` action. Since `takeLatest` cancels any pending task started\\npreviously, we ensure that if a user triggers multiple consecutive\\n`USER_REQUESTED` actions rapidly, we\'ll only conclude with the latest action\\n\\n    import { takeLatest } from `redux-saga/effects`\\n\\n    function* fetchUser(action) {\\n      ...\\n    }\\n\\n    function* watchLastFetchUser() {\\n      yield takeLatest(\'USER_REQUESTED\', fetchUser)\\n    }\\n\\n#### Notes\\n\\n`takeLatest` is a high-level API built using `take` and `fork`. Here is how\\nthe helper could be implemented using the low-level Effects\\n\\n    const takeLatest = (patternOrChannel, saga, ...args) => fork(function*() {\\n      let lastTask\\n      while (true) {\\n        const action = yield take(patternOrChannel)\\n        if (lastTask) {\\n          yield cancel(lastTask) // cancel is no-op if the task has already terminated\\n        }\\n        lastTask = yield fork(saga, ...args.concat(action))\\n      }\\n    })\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`takeLatest(pattern, saga, ...args)`.\\n@param pattern for more information see docs for [`take(pattern)`](#takepattern)\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `takeLatest` will add\\nthe incoming action to the argument list (i.e. the action will be the last\\nargument provided to `saga`)","displayName":"takeLatest","methods":[],"props":{}},{"description":"Spawns a `saga` on each action dispatched to the Store that matches\\n`pattern`. After spawning a task once, it blocks until spawned saga completes\\nand then starts to listen for a `pattern` again.\\n\\nIn short, `takeLeading` is listening for the actions when it doesn\'t run a\\nsaga.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchUser`. We use\\n`takeLeading` to start a new `fetchUser` task on each dispatched\\n`USER_REQUESTED` action. Since `takeLeading` ignores any new coming task\\nafter it\'s started, we ensure that if a user triggers multiple consecutive\\n`USER_REQUESTED` actions rapidly, we\'ll only keep on running with the leading\\naction\\n\\n    import { takeLeading } from `redux-saga/effects`\\n\\n    function* fetchUser(action) {\\n      ...\\n    }\\n\\n    function* watchLastFetchUser() {\\n      yield takeLeading(\'USER_REQUESTED\', fetchUser)\\n    }\\n\\n#### Notes\\n\\n`takeLeading` is a high-level API built using `take` and `call`. Here is how\\nthe helper could be implemented using the low-level Effects\\n\\n    const takeLeading = (patternOrChannel, saga, ...args) => fork(function*() {\\n      while (true) {\\n        const action = yield take(patternOrChannel);\\n        yield call(saga, ...args.concat(action));\\n      }\\n    })\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`takeLeading(pattern, saga, ...args)`.\\n@param pattern for more information see docs for [`take(pattern)`](#takepattern)\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `takeLeading` will\\nadd the incoming action to the argument list (i.e. the action will be the\\nlast argument provided to `saga`)","displayName":"takeLeading","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to dispatch an\\naction to the Store. This effect is non-blocking and any errors that are\\nthrown downstream (e.g. in a reducer) will not bubble back into the saga.\\nCreates an Effect description that instructs the middleware to put an action\\ninto the provided channel.\\n\\nThis effect is blocking if the put is *not* buffered but immediately consumed\\nby takers. If an error is thrown in any of these takers it will bubble back\\ninto the saga.\\n@param action [see Redux `dispatch` documentation for complete info](http://redux.js.org/docs/api/Store.html#dispatch)\\n@param channel a `Channel` Object.\\n@param action [see Redux `dispatch` documentation for complete info](http://redux.js.org/docs/api/Store.html#dispatch)","displayName":"put","methods":[],"props":{"type":{"defaultValue":null,"description":"","name":"type","required":true,"type":{"name":"any"}}}},{"description":"Just like `put` but the effect is blocking (if promise is returned from\\n`dispatch` it will wait for its resolution) and will bubble up errors from\\ndownstream.\\n@param action [see Redux `dispatch` documentation for complete info](http://redux.js.org/docs/api/Store.html#dispatch)","displayName":"putResolve","methods":[],"props":{"type":{"defaultValue":null,"description":"","name":"type","required":true,"type":{"name":"any"}}}},{"description":"Creates an Effect description that instructs the middleware to call the\\nfunction `fn` with `args` as arguments.\\n\\n#### Notes\\n\\n`fn` can be either a *normal* or a Generator function.\\n\\nThe middleware invokes the function and examines its result.\\n\\nIf the result is an Iterator object, the middleware will run that Generator\\nfunction, just like it did with the startup Generators (passed to the\\nmiddleware on startup). The parent Generator will be suspended until the\\nchild Generator terminates normally, in which case the parent Generator is\\nresumed with the value returned by the child Generator. Or until the child\\naborts with some error, in which case an error will be thrown inside the\\nparent Generator.\\n\\nIf `fn` is a normal function and returns a Promise, the middleware will\\nsuspend the Generator until the Promise is settled. After the promise is\\nresolved the Generator is resumed with the resolved value, or if the Promise\\nis rejected an error is thrown inside the Generator.\\n\\nIf the result is not an Iterator object nor a Promise, the middleware will\\nimmediately return that value back to the saga, so that it can resume its\\nexecution synchronously.\\n\\nWhen an error is thrown inside the Generator, if it has a `try/catch` block\\nsurrounding the current `yield` instruction, the control will be passed to\\nthe `catch` block. Otherwise, the Generator aborts with the raised error, and\\nif this Generator was called by another Generator, the error will propagate\\nto the calling Generator.\\nSame as `call([context, fn], ...args)` but supports passing a `fn` as string.\\nUseful for invoking object\'s methods, i.e.\\n`yield call([localStorage, \'getItem\'], \'redux-saga\')`\\nSame as `call([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield call({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\nSame as `call(fn, ...args)` but supports passing a `this` context to `fn`.\\nThis is useful to invoke object methods.\\nSame as `call([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield call({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\n@param fn A Generator function, or normal function which either returns a\\nPromise as result, or any other value.\\n@param args An array of values to be passed as arguments to `fn`","displayName":"call","methods":[],"props":{}},{"description":"Alias for `call([context, fn], ...args)`.","displayName":"apply","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to invoke `fn` as\\na Node style function.\\nSame as `cps([context, fn], ...args)` but supports passing a `fn` as string.\\nUseful for invoking object\'s methods, i.e.\\n`yield cps([localStorage, \'getItem\'], \'redux-saga\')`\\nSame as `cps([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield cps({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\nSame as `cps(fn, ...args)` but supports passing a `this` context to `fn`.\\nThis is useful to invoke object methods.\\nSame as `cps([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield cps({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\n@param fn a Node style function. i.e. a function which accepts in addition to\\nits arguments, an additional callback to be invoked by `fn` when it\\nterminates. The callback accepts two parameters, where the first parameter\\nis used to report errors while the second is used to report successful\\nresults\\n@param args an array to be passed as arguments for `fn`","displayName":"cps","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to perform a\\n*non-blocking call* on `fn`\\n\\nreturns a `Task` object.\\n\\n#### Note\\n\\n`fork`, like `call`, can be used to invoke both normal and Generator\\nfunctions. But, the calls are non-blocking, the middleware doesn\'t suspend\\nthe Generator while waiting for the result of `fn`. Instead as soon as `fn`\\nis invoked, the Generator resumes immediately.\\n\\n`fork`, alongside `race`, is a central Effect for managing concurrency\\nbetween Sagas.\\n\\nThe result of `yield fork(fn ...args)` is a `Task` object.  An object\\nwith some useful methods and properties.\\n\\nAll forked tasks are *attached* to their parents. When the parent terminates\\nthe execution of its own body of instructions, it will wait for all forked\\ntasks to terminate before returning.\\n\\nErrors from child tasks automatically bubble up to their parents. If any\\nforked task raises an uncaught error, then the parent task will abort with\\nthe child Error, and the whole Parent\'s execution tree (i.e. forked tasks +\\nthe *main task* represented by the parent\'s body if it\'s still running) will\\nbe cancelled.\\n\\nCancellation of a forked Task will automatically cancel all forked tasks that\\nare still executing. It\'ll also cancel the current Effect where the cancelled\\ntask was blocked (if any).\\n\\nIf a forked task fails *synchronously* (ie: fails immediately after its\\nexecution before performing any async operation), then no Task is returned,\\ninstead the parent will be aborted as soon as possible (since both parent and\\nchild execute in parallel, the parent will abort as soon as it takes notice\\nof the child failure).\\n\\nTo create *detached* forks, use `spawn` instead.\\nSame as `fork([context, fn], ...args)` but supports passing a `fn` as string.\\nUseful for invoking object\'s methods, i.e.\\n`yield fork([localStorage, \'getItem\'], \'redux-saga\')`\\nSame as `fork([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield fork({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\nSame as `fork(fn, ...args)` but supports passing a `this` context to `fn`.\\nThis is useful to invoke object methods.\\nSame as `fork([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield fork({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\n@param fn A Generator function, or normal function which returns a Promise as result\\n@param args An array of values to be passed as arguments to `fn`","displayName":"fork","methods":[],"props":{}},{"description":"Same as `fork(fn, ...args)` but creates a *detached* task. A detached task\\nremains independent from its parent and acts like a top-level task. The\\nparent will not wait for detached tasks to terminate before returning and all\\nevents which may affect the parent or the detached task are completely\\nindependents (error, cancellation).\\nSame as `spawn([context, fn], ...args)` but supports passing a `fn` as string.\\nUseful for invoking object\'s methods, i.e.\\n`yield spawn([localStorage, \'getItem\'], \'redux-saga\')`\\nSame as `spawn([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield spawn({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.\\nSame as `spawn(fn, ...args)` but supports passing a `this` context to `fn`.\\nThis is useful to invoke object methods.\\nSame as `spawn([context, fn], ...args)` but supports passing `context` and\\n`fn` as properties of an object, i.e.\\n`yield spawn({context: localStorage, fn: localStorage.getItem}, \'redux-saga\')`.\\n`fn` can be a string or a function.","displayName":"spawn","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to wait for the\\nresult of a previously forked task.\\n\\n#### Notes\\n\\n`join` will resolve to the same outcome of the joined task (success or\\nerror). If the joined task is cancelled, the cancellation will also propagate\\nto the Saga executing the join effect. Similarly, any potential callers of\\nthose joiners will be cancelled as well.\\nCreates an Effect description that instructs the middleware to wait for the\\nresults of previously forked tasks.\\n@param task A `Task` object returned by a previous `fork`\\n@param tasks A `Task` is the object returned by a previous `fork`","displayName":"join","methods":[],"props":{"isRunning":{"defaultValue":null,"description":"Returns true if the task hasn\'t yet returned or thrown an error","name":"isRunning","required":true,"type":{"name":"() => boolean"}},"isCancelled":{"defaultValue":null,"description":"Returns true if the task has been cancelled","name":"isCancelled","required":true,"type":{"name":"() => boolean"}},"result":{"defaultValue":null,"description":"Returns task return value. `undefined` if task is still running","name":"result","required":true,"type":{"name":"<T = any>() => T"}},"error":{"defaultValue":null,"description":"Returns task thrown error. `undefined` if task is still running","name":"error","required":true,"type":{"name":"() => any"}},"toPromise":{"defaultValue":null,"description":"Returns a Promise which is either:\\n- resolved with task\'s return value\\n- rejected with task\'s thrown error","name":"toPromise","required":true,"type":{"name":"<T = any>() => Promise<T>"}},"cancel":{"defaultValue":null,"description":"Cancels the task (If it is still running)","name":"cancel","required":true,"type":{"name":"() => void"}},"setContext":{"defaultValue":null,"description":"","name":"setContext","required":true,"type":{"name":"<C extends object>(props: Partial<C>) => void"}}}},{"description":"Creates an Effect description that instructs the middleware to cancel a\\npreviously forked task.\\n\\n#### Notes\\n\\nTo cancel a running task, the middleware will invoke `return` on the\\nunderlying Generator object. This will cancel the current Effect in the task\\nand jump to the finally block (if defined).\\n\\nInside the finally block, you can execute any cleanup logic or dispatch some\\naction to keep the store in a consistent state (e.g. reset the state of a\\nspinner to false when an ajax request is cancelled). You can check inside the\\nfinally block if a Saga was cancelled by issuing a `yield cancelled()`.\\n\\nCancellation propagates downward to child sagas. When cancelling a task, the\\nmiddleware will also cancel the current Effect (where the task is currently\\nblocked). If the current Effect is a call to another Saga, it will be also\\ncancelled. When cancelling a Saga, all *attached forks* (sagas forked using\\n`yield fork()`) will be cancelled. This means that cancellation effectively\\naffects the whole execution tree that belongs to the cancelled task.\\n\\n`cancel` is a non-blocking Effect. i.e. the Saga executing it will resume\\nimmediately after performing the cancellation.\\n\\nFor functions which return Promise results, you can plug your own\\ncancellation logic by attaching a `[CANCEL]` to the promise.\\n\\nThe following example shows how to attach cancellation logic to a Promise\\nresult:\\n\\n    import { CANCEL } from \'redux-saga\'\\n    import { fork, cancel } from \'redux-saga/effects\'\\n\\n    function myApi() {\\n      const promise = myXhr(...)\\n\\n      promise[CANCEL] = () => myXhr.abort()\\n      return promise\\n    }\\n\\n    function* mySaga() {\\n\\n      const task = yield fork(myApi)\\n\\n      // ... later\\n      // will call promise[CANCEL] on the result of myApi\\n      yield cancel(task)\\n    }\\n\\nredux-saga will automatically cancel jqXHR objects using their `abort` method.\\nCreates an Effect description that instructs the middleware to cancel\\npreviously forked tasks.\\n\\n#### Notes\\n\\nIt wraps the array of tasks in cancel effects, roughly becoming the\\nequivalent of `yield tasks.map(t => cancel(t))`.\\nCreates an Effect description that instructs the middleware to cancel a task\\nin which it has been yielded (self-cancellation). It allows to reuse\\ndestructor-like logic inside a `finally` blocks for both outer\\n(`cancel(task)`) and self (`cancel()`) cancellations.\\n\\n#### Example\\n\\n    function* deleteRecord({ payload }) {\\n      try {\\n        const { confirm, deny } = yield call(prompt);\\n        if (confirm) {\\n          yield put(actions.deleteRecord.confirmed())\\n        }\\n        if (deny) {\\n          yield cancel()\\n        }\\n      } catch(e) {\\n        // handle failure\\n      } finally {\\n        if (yield cancelled()) {\\n          // shared cancellation logic\\n          yield put(actions.deleteRecord.cancel(payload))\\n        }\\n      }\\n    }\\n@param task A `Task` object returned by a previous `fork`\\n@param tasks A `Task` is the object returned by a previous `fork`","displayName":"cancel","methods":[],"props":{"isRunning":{"defaultValue":null,"description":"Returns true if the task hasn\'t yet returned or thrown an error","name":"isRunning","required":true,"type":{"name":"() => boolean"}},"isCancelled":{"defaultValue":null,"description":"Returns true if the task has been cancelled","name":"isCancelled","required":true,"type":{"name":"() => boolean"}},"result":{"defaultValue":null,"description":"Returns task return value. `undefined` if task is still running","name":"result","required":true,"type":{"name":"<T = any>() => T"}},"error":{"defaultValue":null,"description":"Returns task thrown error. `undefined` if task is still running","name":"error","required":true,"type":{"name":"() => any"}},"toPromise":{"defaultValue":null,"description":"Returns a Promise which is either:\\n- resolved with task\'s return value\\n- rejected with task\'s thrown error","name":"toPromise","required":true,"type":{"name":"<T = any>() => Promise<T>"}},"cancel":{"defaultValue":null,"description":"Cancels the task (If it is still running)","name":"cancel","required":true,"type":{"name":"() => void"}},"setContext":{"defaultValue":null,"description":"","name":"setContext","required":true,"type":{"name":"<C extends object>(props: Partial<C>) => void"}}}},{"description":"Creates an effect that instructs the middleware to invoke the provided\\nselector on the current Store\'s state (i.e. returns the result of\\n`selector(getState(), ...args)`).\\n\\nIf `select` is called without argument (i.e. `yield select()`) then the\\neffect is resolved with the entire state (the same result of a `getState()`\\ncall).\\n\\n> It\'s important to note that when an action is dispatched to the store, the\\nmiddleware first forwards the action to the reducers and then notifies the\\nSagas. This means that when you query the Store\'s State, you get the State\\n**after** the action has been applied. However, this behavior is only\\nguaranteed if all subsequent middlewares call `next(action)` synchronously.\\nIf any subsequent middleware calls `next(action)` asynchronously (which is\\nunusual but possible), then the sagas will get the state from **before** the\\naction is applied.  Therefore it is recommended to review the source of each\\nsubsequent middleware to ensure it calls `next(action)` synchronously, or\\nelse ensure that redux-saga is the last middleware in the call chain.\\n\\n#### Notes\\n\\nPreferably, a Saga should be autonomous and should not depend on the Store\'s\\nstate. This makes it easy to modify the state implementation without\\naffecting the Saga code. A saga should preferably depend only on its own\\ninternal control state when possible. But sometimes, one could find it more\\nconvenient for a Saga to query the state instead of maintaining the needed\\ndata by itself (for example, when a Saga duplicates the logic of invoking\\nsome reducer to compute a state that was already computed by the Store).\\n\\nFor example, suppose we have this state shape in our application:\\n\\n    state = {\\n      cart: {...}\\n    }\\n\\nWe can create a *selector*, i.e. a function which knows how to extract the\\n`cart` data from the State:\\n\\n`./selectors`\\n\\n    export const getCart = state => state.cart\\n\\n\\nThen we can use that selector from inside a Saga using the `select` Effect:\\n\\n`./sagas.js`\\n\\n    import { take, fork, select } from \'redux-saga/effects\'\\n    import { getCart } from \'./selectors\'\\n\\n    function* checkout() {\\n      // query the state using the exported selector\\n      const cart = yield select(getCart)\\n\\n      // ... call some API endpoint then dispatch a success/error action\\n    }\\n\\n    export default function* rootSaga() {\\n      while (true) {\\n        yield take(\'CHECKOUT_REQUEST\')\\n        yield fork(checkout)\\n      }\\n    }\\n\\n`checkout` can get the needed information directly by using\\n`select(getCart)`. The Saga is coupled only with the `getCart` selector. If\\nwe have many Sagas (or React Components) that needs to access the `cart`\\nslice, they will all be coupled to the same function `getCart`. And if we now\\nchange the state shape, we need only to update `getCart`.\\n@param selector a function `(state, ...args) => args`. It takes the current\\nstate and optionally some arguments and returns a slice of the current\\nStore\'s state\\n@param args optional arguments to be passed to the selector in addition of\\n`getState`.","displayName":"select","methods":[],"props":{}},{"description":"Creates an effect that instructs the middleware to queue the actions matching\\n`pattern` using an event channel. Optionally, you can provide a buffer to\\ncontrol buffering of the queued actions.\\n\\n#### Example\\n\\nThe following code creates a channel to buffer all `USER_REQUEST` actions.\\nNote that even the Saga may be blocked on the `call` effect. All actions that\\ncome while it\'s blocked are automatically buffered. This causes the Saga to\\nexecute the API calls one at a time\\n\\n    import { actionChannel, call } from \'redux-saga/effects\'\\n    import api from \'...\'\\n\\n    function* takeOneAtMost() {\\n      const chan = yield actionChannel(\'USER_REQUEST\')\\n      while (true) {\\n        const {payload} = yield take(chan)\\n        yield call(api.getUser, payload)\\n      }\\n    }\\n@param pattern see API for `take(pattern)`\\n@param buffer a `Buffer` object","displayName":"actionChannel","methods":[],"props":{}},{"description":"Creates an effect that instructs the middleware to flush all buffered items\\nfrom the channel. Flushed items are returned back to the saga, so they can be\\nutilized if needed.\\n\\n#### Example\\n\\n    function* saga() {\\n      const chan = yield actionChannel(\'ACTION\')\\n\\n      try {\\n        while (true) {\\n          const action = yield take(chan)\\n          // ...\\n        }\\n      } finally {\\n        const actions = yield flush(chan)\\n        // ...\\n      }\\n    }\\n@param channel a `Channel` Object.","displayName":"flush","methods":[],"props":{"flush":{"defaultValue":null,"description":"","name":"flush","required":true,"type":{"name":"(cb: (items: END | T[]) => void) => void"}}}},{"description":"Creates an effect that instructs the middleware to return whether this\\ngenerator has been cancelled. Typically you use this Effect in a finally\\nblock to run Cancellation specific code\\n\\n#### Example\\n\\n    function* saga() {\\n      try {\\n        // ...\\n      } finally {\\n        if (yield cancelled()) {\\n          // logic that should execute only on Cancellation\\n        }\\n        // logic that should execute in all situations (e.g. closing a channel)\\n      }\\n    }","displayName":"cancelled","methods":[],"props":{}},{"description":"Creates an effect that instructs the middleware to update its own context.\\nThis effect extends saga\'s context instead of replacing it.","displayName":"setContext","methods":[],"props":{}},{"description":"Creates an effect that instructs the middleware to return a specific property\\nof saga\'s context.","displayName":"getContext","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"Returns an effect descriptor to block execution for `ms` milliseconds and return `val` value.","displayName":"delay","methods":[],"props":{}},{"description":"Spawns a `saga` on an action dispatched to the Store that matches `pattern`.\\nAfter spawning a task it\'s still accepting incoming actions into the\\nunderlying `buffer`, keeping at most 1 (the most recent one), but in the same\\ntime holding up with spawning new task for `ms` milliseconds (hence its name -\\n`throttle`). Purpose of this is to ignore incoming actions for a given\\nperiod of time while processing a task.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchAutocomplete`. We use\\n`throttle` to start a new `fetchAutocomplete` task on dispatched\\n`FETCH_AUTOCOMPLETE` action. However since `throttle` ignores consecutive\\n`FETCH_AUTOCOMPLETE` for some time, we ensure that user won\'t flood our\\nserver with requests.\\n\\n    import { call, put, throttle } from `redux-saga/effects`\\n\\n    function* fetchAutocomplete(action) {\\n      const autocompleteProposals = yield call(Api.fetchAutocomplete, action.text)\\n      yield put({type: \'FETCHED_AUTOCOMPLETE_PROPOSALS\', proposals: autocompleteProposals})\\n    }\\n\\n    function* throttleAutocomplete() {\\n      yield throttle(1000, \'FETCH_AUTOCOMPLETE\', fetchAutocomplete)\\n    }\\n\\n#### Notes\\n\\n`throttle` is a high-level API built using `take`, `fork` and\\n`actionChannel`. Here is how the helper could be implemented using the\\nlow-level Effects\\n\\n    const throttle = (ms, pattern, task, ...args) => fork(function*() {\\n      const throttleChannel = yield actionChannel(pattern, buffers.sliding(1))\\n\\n      while (true) {\\n        const action = yield take(throttleChannel)\\n        yield fork(task, ...args, action)\\n        yield delay(ms)\\n      }\\n    })\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`throttle(ms, pattern, saga, ...args)`.\\n@param ms length of a time window in milliseconds during which actions will\\nbe ignored after the action starts processing\\n@param pattern for more information see docs for `take(pattern)`\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `throttle` will add\\nthe incoming action to the argument list (i.e. the action will be the last\\nargument provided to `saga`)","displayName":"throttle","methods":[],"props":{}},{"description":"Spawns a `saga` on an action dispatched to the Store that matches `pattern`.\\nSaga will be called after it stops taking `pattern` actions for `ms`\\nmilliseconds. Purpose of this is to prevent calling saga until the actions\\nare settled off.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `fetchAutocomplete`. We use\\n`debounce` to delay calling `fetchAutocomplete` saga until we stop receive\\nany `FETCH_AUTOCOMPLETE` events for at least `1000` ms.\\n\\n    import { call, put, debounce } from `redux-saga/effects`\\n\\n    function* fetchAutocomplete(action) {\\n      const autocompleteProposals = yield call(Api.fetchAutocomplete, action.text)\\n      yield put({type: \'FETCHED_AUTOCOMPLETE_PROPOSALS\', proposals: autocompleteProposals})\\n    }\\n\\n    function* debounceAutocomplete() {\\n      yield debounce(1000, \'FETCH_AUTOCOMPLETE\', fetchAutocomplete)\\n    }\\n\\n#### Notes\\n\\n`debounce` is a high-level API built using `take`, `delay` and `fork`. Here\\nis how the helper could be implemented using the low-level Effects\\n\\n    const debounce = (ms, pattern, task, ...args) => fork(function*() {\\n      while (true) {\\n        let action = yield take(pattern)\\n\\n        while (true) {\\n          const { debounced, _action } = yield race({\\n            debounced: delay(ms),\\n            _action: take(pattern)\\n          })\\n\\n          if (debounced) {\\n            yield fork(worker, ...args, action)\\n            break\\n          }\\n\\n          action = _action\\n        }\\n      }\\n    })\\nYou can also pass in a channel as argument and the behaviour is the same as\\n`debounce(ms, pattern, saga, ...args)`.\\n@param ms defines how many milliseconds should elapse since the last time\\n`pattern` action was fired to call the `saga`\\n@param pattern for more information see docs for `take(pattern)`\\n@param saga a Generator function\\n@param args arguments to be passed to the started task. `debounce` will add\\nthe incoming action to the argument list (i.e. the action will be the last\\nargument provided to `saga`)","displayName":"debounce","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to call the\\nfunction `fn` with `args` as arguments. In case of failure will try to make\\nanother call after `delay` milliseconds, if a number of attempts < `maxTries`.\\n\\n#### Example\\n\\nIn the following example, we create a basic task `retrySaga`. We use `retry`\\nto try to fetch our API 3 times with 10 second interval. If `request` fails\\nfirst time than `retry` will call `request` one more time while calls count\\nless than 3.\\n\\n    import { put, retry } from \'redux-saga/effects\'\\n    import { request } from \'some-api\';\\n\\n    function* retrySaga(data) {\\n      try {\\n        const SECOND = 1000\\n        const response = yield retry(3, 10 * SECOND, request, data)\\n        yield put({ type: \'REQUEST_SUCCESS\', payload: response })\\n      } catch(error) {\\n        yield put({ type: \'REQUEST_FAIL\', payload: { error } })\\n      }\\n    }\\n@param maxTries maximum calls count.\\n@param delay length of a time window in milliseconds between `fn` calls.\\n@param fn A Generator function, or normal function which either returns a\\nPromise as a result, or any other value.\\n@param args An array of values to be passed as arguments to `fn`","displayName":"retry","methods":[],"props":{}},{"description":"Creates an Effect description that instructs the middleware to run multiple\\nEffects in parallel and wait for all of them to complete. It\'s quite the\\ncorresponding API to standard\\n[`Promise#all`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise/all).\\n\\n#### Example\\n\\nThe following example runs two blocking calls in parallel:\\n\\n    import { fetchCustomers, fetchProducts } from \'./path/to/api\'\\n    import { all, call } from `redux-saga/effects`\\n\\n    function* mySaga() {\\n      const [customers, products] = yield all([\\n        call(fetchCustomers),\\n        call(fetchProducts)\\n      ])\\n    }\\nThe same as `all([...effects])` but let\'s you to pass in a dictionary object\\nof effects with labels, just like `race(effects)`\\n@param effects a dictionary Object of the form {label: effect, ...}","displayName":"all","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => T"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: T[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<T>[]): T[]; (...items: (T | ConcatArray<T>)[]): T[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => T[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => T"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => T[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: T, b: T) => number) => T[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): T[]; (start: number, deleteCount: number, ...items: T[]): T[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: T[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: T, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: T, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends T>(callbackfn: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: T, index: number, array: T[]) => any, thisArg?: any): T[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T; (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T; <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U; }"}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T; (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T; <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U; }"}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends T>(predicate: (this: void, value: T, index: number, obj: T[]) => value is S, thisArg?: any): S; (predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): T; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: T, start?: number, end?: number) => T[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => T[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<T>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, T]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<T>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: T, fromIndex?: number) => boolean"}}}},{"description":"Creates an Effect description that instructs the middleware to run a *Race*\\nbetween multiple Effects (this is similar to how\\n[`Promise.race([...])`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise/race)\\nbehaves).\\n\\n\\n#### Example\\n\\nThe following example runs a race between two effects:\\n\\n1. A call to a function `fetchUsers` which returns a Promise\\n2. A `CANCEL_FETCH` action which may be eventually dispatched on the Store\\n\\n\\n    import { take, call, race } from `redux-saga/effects`\\n    import fetchUsers from \'./path/to/fetchUsers\'\\n\\n    function* fetchUsersSaga() {\\n      const { response, cancel } = yield race({\\n        response: call(fetchUsers),\\n        cancel: take(CANCEL_FETCH)\\n      })\\n    }\\n\\nIf `call(fetchUsers)` resolves (or rejects) first, the result of `race` will\\nbe an object with a single keyed object `{response: result}` where `result`\\nis the resolved result of `fetchUsers`.\\n\\nIf an action of type `CANCEL_FETCH` is dispatched on the Store before\\n`fetchUsers` completes, the result will be a single keyed object\\n`{cancel: action}`, where action is the dispatched action.\\n\\n#### Notes\\n\\nWhen resolving a `race`, the middleware automatically cancels all the losing\\nEffects.\\nThe same as `race(effects)` but lets you pass in an array of effects.\\n@param effects a dictionary Object of the form {label: effect, ...}","displayName":"race","methods":[],"props":{}},{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect\\n@file : \u4e0e\\n@ekit /async \u4ea4\u4e92\u7684\u903b\u8f91\\n@author : yangqianjun\\n@Date : 2020-02-07 10:34:24\\n@LastEditors : yangqianjun\\n@LastEditTime : 2020-02-07 15:52:41","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}},{"description":"","displayName":"CM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u7528\u4ee5\u505a\u81ea\u52a8 redux store \u9694\u79bb","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"\u96c6\u6210 immer","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"globalPut","methods":[],"props":{}},{"description":"TypeSafe tPut Blocking","displayName":"tPut","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.","name":"toString","required":false,"type":{"name":"(() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => Object)"}}}},{"description":"TypeSafe tNBPut Non Blocking","displayName":"tNBPut","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.\\nReturns a string representation of an object.","name":"toString","required":false,"type":{"name":"(() => string) | (() => string)"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.\\nReturns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"(() => string) | (() => Object)"}}}},{"description":"\u7528\u4ee5\u66ff\u4ee3 redux-saga call \u7684 typed tCall","displayName":"tCall","methods":[],"props":{}},{"description":"promise redux \u4e2d\u95f4\u4ef6","displayName":"promiseMiddleware","methods":[],"props":{"dispatch":{"defaultValue":null,"description":"","name":"dispatch","required":true,"type":{"name":"Dispatch<AnyAction>"}},"getState":{"defaultValue":null,"description":"","name":"getState","required":true,"type":{"name":"() => any"}}}}]},{"key":"packages/redux-model/src/promiseMiddleware.ts","value":[{"description":"promise redux \u4e2d\u95f4\u4ef6","displayName":"promiseMiddleware","methods":[],"props":{"dispatch":{"defaultValue":null,"description":"","name":"dispatch","required":true,"type":{"name":"Dispatch<AnyAction>"}},"getState":{"defaultValue":null,"description":"","name":"getState","required":true,"type":{"name":"() => any"}}}}]},{"key":"packages/redux-model/src/types.ts","value":[]},{"key":"packages/types/__tests__/Doc.tsx","value":[]},{"key":"packages/types/types/utils.d.ts","value":[]},{"key":"packages/use-model/__tests__/setup.ts","value":[]},{"key":"packages/use-model/__tests__/testModel.test.tsx","value":[]},{"key":"packages/use-model/__tests__/testNBModel.test.tsx","value":[]},{"key":"packages/use-model/__tests__/useModel.spec.ts","value":[]},{"key":"packages/use-model/lib/effectWrapper.d.ts","value":[{"description":"for Hooks model","displayName":"effectWrapper","methods":[],"props":{}}]},{"key":"packages/use-model/lib/index.d.ts","value":[{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect\\n@file : \u4e0e\\n@ekit /async \u4ea4\u4e92\u7684\u903b\u8f91\\n@author : yangqianjun\\n@Date : 2020-02-07 10:34:24\\n@LastEditors : yangqianjun\\n@LastEditTime : 2020-02-07 15:52:41","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}},{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"Model","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"M","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"MM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"\u7c7b\u4f3c Redux \u7684 bindActionToDispatch","displayName":"bindDispatchToAction","methods":[],"props":{}},{"description":"Hooks Model","displayName":"useModel","methods":[],"props":{}}]},{"key":"packages/use-model/lib/m.d.ts","value":[{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"Model","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"M","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}}]},{"key":"packages/use-model/lib/mm.d.ts","value":[{"description":"","displayName":"MM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}}]},{"key":"packages/use-model/lib/types.d.ts","value":[]},{"key":"packages/use-model/lib/useModel.d.ts","value":[{"description":"\u7c7b\u4f3c Redux \u7684 bindActionToDispatch","displayName":"bindDispatchToAction","methods":[],"props":{}},{"description":"Hooks Model","displayName":"useModel","methods":[],"props":{}},{"description":"Hooks Model","displayName":"__type","methods":[],"props":{}}]},{"key":"packages/use-model/src/effectWrapper.ts","value":[{"description":"for Hooks model","displayName":"effectWrapper","methods":[],"props":{}}]},{"key":"packages/use-model/src/index.ts","value":[{"description":"\u9ed8\u8ba4\u526f\u4f5c\u7528\u914d\u7f6e","displayName":"defaultEffectOptions","methods":[],"props":{}},{"description":"\u5982\u5f15\u5165 immer\uff0c\u679a\u4e3e\u6807\u8bb0 redux \u6216\u8005 react hooks","displayName":"ModernType","methods":[],"props":{}},{"description":"\u6267\u884c effect \u5e7f\u64ad\u7684\u4e8b\u4ef6\\n\u4ece @ekit/async \u62c6\u8fc7\u6765\uff0c\u4ee5\u9010\u6b65\u89e3\u9664 model & async \u7684\u5faa\u73af\u5f15\u7528","displayName":"ASYNC_EFFECT_EVENT_NAME","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u5f00\u59cb","displayName":"EFFECTS_START","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u7ed3\u675f","displayName":"EFFECTS_END","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u9519\u8bef","displayName":"EFFECTS_ERROR","methods":[],"props":{}},{"description":"Redux Type \u526f\u4f5c\u7528\u6210\u529f","displayName":"EFFECTS_SUCCESS","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u6d88\u606fEventCenter\u4e8b\u4ef6","displayName":"EFFECTS_MSG","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_RESOLVE","methods":[],"props":{}},{"description":"\u526f\u4f5c\u7528\u8fd4\u56de\u7684promise\u7684resolve","displayName":"EFFECTS_PROMISE_REJECT","methods":[],"props":{}},{"description":"\u662f\u5426 tkit effet","displayName":"TKIT_EFFECT","methods":[],"props":{}},{"description":"\u662f\u5426 Tkit Non blocking Effect","displayName":"TKIT_NB_EFFECT","methods":[],"props":{}},{"description":"\u6807\u8bb0\u662f\u5b50 effect\uff0c\u4e0d\u81ea\u52a8\u6355\u83b7\u9519\u8bef\u4ee5\u53ca\u53d1\u8d77 EFFECT START","displayName":"TKIT_SUB_EFFECT","methods":[],"props":{}},{"description":"\u6ce8\u5165 tDispath","displayName":"TKIT_DISPATCH","methods":[],"props":{}},{"description":"\u6ce8\u5165 get State","displayName":"TKIT_GET_STATE","methods":[],"props":{}},{"description":"\u4e3a action \u6807\u8bb0\u5b50 effect \u6807\u8bb0","displayName":"markSubEffect","methods":[],"props":{}},{"description":"","displayName":"printError","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}},{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect\\n@file : \u4e0e\\n@ekit /async \u4ea4\u4e92\u7684\u903b\u8f91\\n@author : yangqianjun\\n@Date : 2020-02-07 10:34:24\\n@LastEditors : yangqianjun\\n@LastEditTime : 2020-02-07 15:52:41","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}},{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"Model","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"M","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"MM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"\u7c7b\u4f3c Redux \u7684 bindActionToDispatch","displayName":"bindDispatchToAction","methods":[],"props":{}},{"description":"Hooks Model","displayName":"useModel","methods":[],"props":{}}]},{"key":"packages/use-model/src/m.ts","value":[{"description":"Model\u5de5\u5382\\n@param model\\n@param model.namespace \u547d\u4ee4\u7a7a\u95f4\\n@param model.state \u521d\u59cb\u72b6\u6001\\n@param model.reducers \u63a8\u5bfcreducers\u548c\u540c\u6b65actions\\n@param model.effects \u526f\u4f5c\u7528\uff0c\u63a8\u5bfc\u5f02\u6b65actions","displayName":"Model","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}},{"description":"","displayName":"M","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}}]},{"key":"packages/use-model/src/mm.ts","value":[{"description":"","displayName":"MM","methods":[],"props":{"namespace":{"defaultValue":null,"description":"\u547d\u4ee4\u7a7a\u95f4\uff0c\u533a\u5206\u65e5\u5fd7\u4f7f\u7528","name":"namespace","required":true,"type":{"name":"string"}},"state":{"defaultValue":null,"description":"\u521d\u59cb\u72b6\u6001","name":"state","required":true,"type":{"name":"M"}},"reducers":{"defaultValue":null,"description":"","name":"reducers","required":true,"type":{"name":"R"}},"effects":{"defaultValue":null,"description":"","name":"effects","required":true,"type":{"name":"E"}}}}]},{"key":"packages/use-model/src/types.ts","value":[]},{"key":"packages/use-model/src/useModel.ts","value":[{"description":"\u7c7b\u4f3c Redux \u7684 bindActionToDispatch","displayName":"bindDispatchToAction","methods":[],"props":{}},{"description":"Hooks Model","displayName":"useModel","methods":[],"props":{}}]},{"key":"packages/utils/__tests__/Doc.tsx","value":[]},{"key":"packages/utils/__tests__/utils.test.ts","value":[]},{"key":"packages/utils/lib/utils.d.ts","value":[{"description":"\u83b7\u53d6\u5f53\u524d\u9879\u76ee\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84\\n@file : tkit utils \u51fd\u6570\\n@author : yangqianjun\\n@Date : 2019-07-20 15:12:00\\n@LastEditors : yangqianjun\\n@LastEditTime : 2019-12-19 11:42:23","displayName":"TkitAppDirectory","methods":[],"props":{}},{"description":"path.join","displayName":"concatDirectory","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => string"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: string[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<string>[]): string[]; (...items: (string | ConcatArray<string>)[]): string[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => string[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => string"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: string, b: string) => number) => string[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): string[]; (start: number, deleteCount: number, ...items: string[]): string[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: string[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends string>(callbackfn: (value: string, index: number, array: string[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: string, index: number, array: string[]) => any, thisArg?: any): string[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends string>(predicate: (this: void, value: string, index: number, obj: string[]) => value is S, thisArg?: any): S; (predicate: (value: string, index: number, obj: string[]) => boolean, thisArg?: any): string; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: string, index: number, obj: string[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: string, start?: number, end?: number) => string[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => string[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, string]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<string>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => boolean"}}}},{"description":"\u6309\u7167\u9879\u76ee\u76ee\u5f55/\u6587\u4ef6\u540d\u3001Tkit \u6a21\u5757\u76ee\u5f55\u540d/\u6587\u4ef6\u540d\u7684\u987a\u5e8f\u67e5\u627e\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84","displayName":"ensureFile","methods":[],"props":{}},{"description":"\u6309\u7167\u9879\u76ee\u76ee\u5f55/\u6587\u4ef6\u540d\u3001Tkit \u6a21\u5757\u76ee\u5f55\u540d/\u6587\u4ef6\u540d\u7684\u987a\u5e8f\u67e5\u627e\u6587\u4ef6\uff0c\u4f1a\u628a\u8def\u5f84\u91cc\u7684 `/config/` \u76ee\u5f55\u66ff\u6362\u4e3a `/lib/`\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84","displayName":"ensureFileModern","methods":[],"props":{}},{"description":"\u8fc7\u6ee4\u6389\u6570\u7ec4\u91cc\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u540d","displayName":"ensureFiles","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => string"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: string[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<string>[]): string[]; (...items: (string | ConcatArray<string>)[]): string[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => string[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => string"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: string, b: string) => number) => string[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): string[]; (start: number, deleteCount: number, ...items: string[]): string[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: string[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends string>(callbackfn: (value: string, index: number, array: string[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: string, index: number, array: string[]) => any, thisArg?: any): string[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends string>(predicate: (this: void, value: string, index: number, obj: string[]) => value is S, thisArg?: any): S; (predicate: (value: string, index: number, obj: string[]) => boolean, thisArg?: any): string; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: string, index: number, obj: string[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: string, start?: number, end?: number) => string[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => string[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, string]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<string>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => boolean"}}}},{"description":"\u8f6c\u6362\u4e3a\u76f8\u5bf9\u9879\u76ee\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84","displayName":"resolveApp","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}}]},{"key":"packages/utils/src/utils.ts","value":[{"description":"\u83b7\u53d6\u5f53\u524d\u9879\u76ee\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84","displayName":"TkitAppDirectory","methods":[],"props":{}},{"description":"path.join","displayName":"concatDirectory","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => string"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: string[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<string>[]): string[]; (...items: (string | ConcatArray<string>)[]): string[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => string[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => string"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: string, b: string) => number) => string[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): string[]; (start: number, deleteCount: number, ...items: string[]): string[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: string[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends string>(callbackfn: (value: string, index: number, array: string[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: string, index: number, array: string[]) => any, thisArg?: any): string[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends string>(predicate: (this: void, value: string, index: number, obj: string[]) => value is S, thisArg?: any): S; (predicate: (value: string, index: number, obj: string[]) => boolean, thisArg?: any): string; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: string, index: number, obj: string[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: string, start?: number, end?: number) => string[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => string[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, string]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<string>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => boolean"}}}},{"description":"\u6309\u7167\u9879\u76ee\u76ee\u5f55/\u6587\u4ef6\u540d\u3001Tkit \u6a21\u5757\u76ee\u5f55\u540d/\u6587\u4ef6\u540d\u7684\u987a\u5e8f\u67e5\u627e\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84","displayName":"ensureFile","methods":[],"props":{}},{"description":"\u6309\u7167\u9879\u76ee\u76ee\u5f55/\u6587\u4ef6\u540d\u3001Tkit \u6a21\u5757\u76ee\u5f55\u540d/\u6587\u4ef6\u540d\u7684\u987a\u5e8f\u67e5\u627e\u6587\u4ef6\uff0c\u4f1a\u628a\u8def\u5f84\u91cc\u7684 `/config/` \u76ee\u5f55\u66ff\u6362\u4e3a `/lib/`\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84","displayName":"ensureFileModern","methods":[],"props":{}},{"description":"\u8fc7\u6ee4\u6389\u6570\u7ec4\u91cc\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u540d","displayName":"ensureFiles","methods":[],"props":{"length":{"defaultValue":null,"description":"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.","name":"length","required":true,"type":{"name":"number"}},"toString":{"defaultValue":{},"description":"Returns a string representation of an array.","name":"toString","required":false,"type":{"name":"() => string"}},"toLocaleString":{"defaultValue":{},"description":"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.","name":"toLocaleString","required":false,"type":{"name":"() => string"}},"pop":{"defaultValue":null,"description":"Removes the last element from an array and returns it.","name":"pop","required":true,"type":{"name":"() => string"}},"push":{"defaultValue":null,"description":"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.","name":"push","required":true,"type":{"name":"(...items: string[]) => number"}},"concat":{"defaultValue":null,"description":"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.","name":"concat","required":true,"type":{"name":"{ (...items: ConcatArray<string>[]): string[]; (...items: (string | ConcatArray<string>)[]): string[]; }"}},"join":{"defaultValue":null,"description":"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.","name":"join","required":true,"type":{"name":"(separator?: string) => string"}},"reverse":{"defaultValue":null,"description":"Reverses the elements in an Array.","name":"reverse","required":true,"type":{"name":"() => string[]"}},"shift":{"defaultValue":null,"description":"Removes the first element from an array and returns it.","name":"shift","required":true,"type":{"name":"() => string"}},"slice":{"defaultValue":null,"description":"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string[]"}},"sort":{"defaultValue":null,"description":"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.","name":"sort","required":true,"type":{"name":"(compareFn?: (a: string, b: string) => number) => string[]"}},"splice":{"defaultValue":null,"description":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.","name":"splice","required":true,"type":{"name":"{ (start: number, deleteCount?: number): string[]; (start: number, deleteCount: number, ...items: string[]): string[]; }"}},"unshift":{"defaultValue":null,"description":"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.","name":"unshift","required":true,"type":{"name":"(...items: string[]) => number"}},"indexOf":{"defaultValue":null,"description":"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.","name":"indexOf","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.","name":"lastIndexOf","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => number"}},"every":{"defaultValue":null,"description":"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"every","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean"}},"some":{"defaultValue":null,"description":"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"some","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean"}},"forEach":{"defaultValue":null,"description":"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"forEach","required":true,"type":{"name":"(callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void"}},"map":{"defaultValue":null,"description":"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"map","required":true,"type":{"name":"<U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]"}},"filter":{"defaultValue":null,"description":"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.","name":"filter","required":true,"type":{"name":"{ <S extends string>(callbackfn: (value: string, index: number, array: string[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: string, index: number, array: string[]) => any, thisArg?: any): string[]; }"}},"reduce":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduce","required":true,"type":{"name":"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},"reduceRight":{"defaultValue":null,"description":"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.","name":"reduceRight","required":true,"type":{"name":"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},"find":{"defaultValue":null,"description":"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"find","required":true,"type":{"name":"{ <S extends string>(predicate: (this: void, value: string, index: number, obj: string[]) => value is S, thisArg?: any): S; (predicate: (value: string, index: number, obj: string[]) => boolean, thisArg?: any): string; }"}},"findIndex":{"defaultValue":null,"description":"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found,\\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\npredicate. If it is not provided, undefined is used instead.","name":"findIndex","required":true,"type":{"name":"(predicate: (value: string, index: number, obj: string[]) => boolean, thisArg?: any) => number"}},"fill":{"defaultValue":null,"description":"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\nlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\nlength+end.","name":"fill","required":true,"type":{"name":"(value: string, start?: number, end?: number) => string[]"}},"copyWithin":{"defaultValue":null,"description":"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\nlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\nis treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.","name":"copyWithin","required":true,"type":{"name":"(target: number, start: number, end?: number) => string[]"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"entries":{"defaultValue":null,"description":"Returns an iterable of key, value pairs for every entry in the array","name":"entries","required":true,"type":{"name":"() => IterableIterator<[number, string]>"}},"keys":{"defaultValue":null,"description":"Returns an iterable of keys in the array","name":"keys","required":true,"type":{"name":"() => IterableIterator<number>"}},"values":{"defaultValue":null,"description":"Returns an iterable of values in the array","name":"values","required":true,"type":{"name":"() => IterableIterator<string>"}},"__@unscopables":{"defaultValue":null,"description":"Returns an object whose properties have the value \'true\'\\nwhen they will be absent when used in a \'with\' statement.","name":"__@unscopables","required":true,"type":{"name":"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},"includes":{"defaultValue":null,"description":"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.","name":"includes","required":true,"type":{"name":"(searchElement: string, fromIndex?: number) => boolean"}}}},{"description":"\u8f6c\u6362\u4e3a\u76f8\u5bf9\u9879\u76ee\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84","displayName":"resolveApp","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}}]},{"key":"packages/typescript-type-tester/lib/index.d.ts","value":[{"description":"\u89e3\u6790\u4e00\u4e2a .ts \u6587\u4ef6\u5e76\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\\n@param files \u6587\u4ef6\u540d\\n@param directory \u7edd\u5bf9\u8def\u5f84","displayName":"__type","methods":[],"props":{}}]},{"key":"packages/typescript-type-tester/lib/typescript-type-tester.d.ts","value":[{"description":"\u89e3\u6790\u4e00\u4e2a .ts \u6587\u4ef6\u5e76\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\\n@param files \u6587\u4ef6\u540d\\n@param directory \u7edd\u5bf9\u8def\u5f84","displayName":"parser","methods":[],"props":{}}]},{"key":"packages/typescript-type-tester/__tests__/typescript-type-tester.test.ts","value":[]},{"key":"packages/typescript-type-tester/src/index.ts","value":[{"description":"\u89e3\u6790\u4e00\u4e2a .ts \u6587\u4ef6\u5e76\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\\n@param files \u6587\u4ef6\u540d\\n@param directory \u7edd\u5bf9\u8def\u5f84","displayName":"src","methods":[],"props":{}}]},{"key":"packages/typescript-type-tester/src/typescript-type-tester.ts","value":[{"description":"\u89e3\u6790\u4e00\u4e2a .ts \u6587\u4ef6\u5e76\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\\n@param files \u6587\u4ef6\u540d\\n@param directory \u7edd\u5bf9\u8def\u5f84","displayName":"parser","methods":[],"props":{}}]},{"key":"packages/actions/__tests__/actionsSamples/actionsOK.ts","value":[{"description":"","displayName":"doSetUerName","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}}]},{"key":"packages/actions/__tests__/actionsSamples/actionsFail.ts","value":[]},{"key":"packages/ajax/__tests__/samples/consts.ts","value":[]},{"key":"packages/ajax/__tests__/samples/responseFail.ts","value":[]},{"key":"packages/ajax/__tests__/samples/responseOK.ts","value":[]},{"key":"packages/async/__tests__/samples/consts.tsx","value":[{"description":"","displayName":"loadData","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of an object.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.","name":"toString","required":false,"type":{"name":"(radix?: number) => string"}},"toFixed":{"defaultValue":null,"description":"Returns a string representing a number in fixed-point notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.","name":"toFixed","required":true,"type":{"name":"(fractionDigits?: number) => string"}},"toExponential":{"defaultValue":null,"description":"Returns a string containing a number represented in exponential notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.","name":"toExponential","required":true,"type":{"name":"(fractionDigits?: number) => string"}},"toPrecision":{"defaultValue":null,"description":"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.","name":"toPrecision","required":true,"type":{"name":"(precision?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => number"}},"toLocaleString":{"defaultValue":{},"description":"Converts a number to a string by using the current or specified locale.\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n@param options An object that contains one or more properties that specify comparison options.","name":"toLocaleString","required":false,"type":{"name":"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},{"description":"","displayName":"Modal","methods":[],"props":{}},{"description":"","displayName":"tips","methods":[],"props":{}},{"description":"","displayName":"Loading","methods":[],"props":{"status":{"defaultValue":null,"description":"","name":"status","required":true,"type":{"name":"any"}}}},{"description":"","displayName":"FormFaker2","methods":[],"props":{"getForm":{"defaultValue":null,"description":"","name":"getForm","required":true,"type":{"name":"number"}}}},{"description":"","displayName":"Modal2","methods":[],"props":{"wrong":{"defaultValue":null,"description":"","name":"wrong","required":true,"type":{"name":"number"}}}},{"description":"","displayName":"tips2","methods":[],"props":{"wrong":{"defaultValue":null,"description":"","name":"wrong","required":true,"type":{"name":"number"}}}},{"description":"","displayName":"Loading2","methods":[],"props":{"wrong":{"defaultValue":null,"description":"","name":"wrong","required":true,"type":{"name":"number"}}}}]},{"key":"packages/async/__tests__/samples/asyncOK.tsx","value":[]},{"key":"packages/async/__tests__/samples/asyncFail.tsx","value":[]},{"key":"packages/async/__tests__/samples/doFail.ts","value":[]},{"key":"packages/async/__tests__/samples/doOK.ts","value":[]},{"key":"packages/model-factory/__tests__/asyncFactorySamples/testCreateAsyncModelFail.ts","value":[]},{"key":"packages/model-factory/__tests__/asyncFactorySamples/testCreateAsyncModelOK.ts","value":[]},{"key":"packages/model-factory/__tests__/asyncFactorySamples/testCreateMixAsyncModelFail.ts","value":[]},{"key":"packages/model-factory/__tests__/asyncFactorySamples/testCreateMixAsyncModelOK.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/states.ts","value":[{"description":"","displayName":"overload","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}}]},{"key":"packages/model-factory/__tests__/factorySamples/testCreateModelFail.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/testCreateModelNBOK.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/testCreateModelOK.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/testCreateModelNBFail.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/testCreateModelStateReadOnlyOK.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/testCreateModelStateReadOnlyFail.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/testCreateModelTYPESFail.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/testPutCallInModelFail.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/testCreateModelTYPESOK.ts","value":[]},{"key":"packages/model-factory/__tests__/factorySamples/testPutCallInModelOK.ts","value":[]},{"key":"packages/model-factory/src/types/action.ts","value":[]},{"key":"packages/model-factory/src/types/async.ts","value":[]},{"key":"packages/model-factory/src/types/effectUtils.ts","value":[]},{"key":"packages/model-factory/src/types/index.ts","value":[]},{"key":"packages/model-factory/src/utils/async.ts","value":[{"description":"simulate an effect","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}}]},{"key":"packages/model-factory/src/utils/index.ts","value":[{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}}]},{"key":"packages/model-factory/src/utils/putWrapper.ts","value":[{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}}]},{"key":"packages/model-factory/lib/types/action.d.ts","value":[]},{"key":"packages/model-factory/lib/types/async.d.ts","value":[]},{"key":"packages/model-factory/lib/types/effectUtils.d.ts","value":[]},{"key":"packages/model-factory/lib/types/index.d.ts","value":[]},{"key":"packages/model-factory/lib/utils/async.d.ts","value":[{"description":"simulate an effect\\n@file : \u4e0e\\n@ekit /async \u4ea4\u4e92\u7684\u903b\u8f91\\n@author : yangqianjun\\n@Date : 2020-02-07 10:34:24\\n@LastEditors : yangqianjun\\n@LastEditTime : 2020-02-07 15:52:41","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}}]},{"key":"packages/model-factory/lib/utils/index.d.ts","value":[{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}},{"description":"simulate an effect\\n@file : \u4e0e\\n@ekit /async \u4ea4\u4e92\u7684\u903b\u8f91\\n@author : yangqianjun\\n@Date : 2020-02-07 10:34:24\\n@LastEditors : yangqianjun\\n@LastEditTime : 2020-02-07 15:52:41","displayName":"FakeEffectFactory","methods":[],"props":{"effectName":{"defaultValue":null,"description":"","name":"effectName","required":true,"type":{"name":"string"}},"silent":{"defaultValue":null,"description":"whether do nothing","name":"silent","required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"whether show loading","name":"loading","required":false,"type":{"name":"boolean"}}}}]},{"key":"packages/model-factory/lib/utils/putWrapper.d.ts","value":[{"description":"for Redux and Hooks Model dispatch wrapper\\n@param put Dispatch","displayName":"putWrapper","methods":[],"props":{}}]},{"key":"packages/redux-model/__tests__/asyncFactorySamples/testCreateAsyncModelFail.ts","value":[]},{"key":"packages/redux-model/__tests__/asyncFactorySamples/testCreateAsyncModelOK.ts","value":[]},{"key":"packages/redux-model/__tests__/asyncFactorySamples/testCreateMixAsyncModelFail.ts","value":[]},{"key":"packages/redux-model/__tests__/asyncFactorySamples/testCreateMixAsyncModelOK.ts","value":[]},{"key":"packages/redux-model/__tests__/cmSamples/testCMFail.ts","value":[]},{"key":"packages/redux-model/__tests__/cmSamples/testCMOK.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/states.ts","value":[{"description":"","displayName":"overload","methods":[],"props":{"toString":{"defaultValue":{},"description":"Returns a string representation of a string.","name":"toString","required":false,"type":{"name":"() => string"}},"charAt":{"defaultValue":null,"description":"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.","name":"charAt","required":true,"type":{"name":"(pos: number) => string"}},"charCodeAt":{"defaultValue":null,"description":"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.","name":"charCodeAt","required":true,"type":{"name":"(index: number) => number"}},"concat":{"defaultValue":null,"description":"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.","name":"concat","required":true,"type":{"name":"(...strings: string[]) => string"}},"indexOf":{"defaultValue":null,"description":"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.","name":"indexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"lastIndexOf":{"defaultValue":null,"description":"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.","name":"lastIndexOf","required":true,"type":{"name":"(searchString: string, position?: number) => number"}},"localeCompare":{"defaultValue":null,"description":"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.","name":"localeCompare","required":true,"type":{"name":"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},"match":{"defaultValue":null,"description":"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.","name":"match","required":true,"type":{"name":"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},"replace":{"defaultValue":null,"description":"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.","name":"replace","required":true,"type":{"name":"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},"search":{"defaultValue":null,"description":"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.","name":"search","required":true,"type":{"name":"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},"slice":{"defaultValue":null,"description":"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\nIf this value is not specified, the substring continues to the end of stringObj.","name":"slice","required":true,"type":{"name":"(start?: number, end?: number) => string"}},"split":{"defaultValue":null,"description":"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.","name":"split","required":true,"type":{"name":"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},"substring":{"defaultValue":null,"description":"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\nIf end is omitted, the characters from start through the end of the original string are returned.","name":"substring","required":true,"type":{"name":"(start: number, end?: number) => string"}},"toLowerCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to lowercase.","name":"toLowerCase","required":true,"type":{"name":"() => string"}},"toLocaleLowerCase":{"defaultValue":null,"description":"Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale.","name":"toLocaleLowerCase","required":true,"type":{"name":"() => string"}},"toUpperCase":{"defaultValue":null,"description":"Converts all the alphabetic characters in a string to uppercase.","name":"toUpperCase","required":true,"type":{"name":"() => string"}},"toLocaleUpperCase":{"defaultValue":null,"description":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale.","name":"toLocaleUpperCase","required":true,"type":{"name":"() => string"}},"trim":{"defaultValue":null,"description":"Removes the leading and trailing white space and line terminator characters from a string.","name":"trim","required":true,"type":{"name":"() => string"}},"length":{"defaultValue":null,"description":"Returns the length of a String object.","name":"length","required":true,"type":{"name":"number"}},"substr":{"defaultValue":null,"description":"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.","name":"substr","required":true,"type":{"name":"(from: number, length?: number) => string"}},"valueOf":{"defaultValue":{},"description":"Returns the primitive value of the specified object.","name":"valueOf","required":false,"type":{"name":"() => string"}},"codePointAt":{"defaultValue":null,"description":"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\nthe String resulting from converting this object to a String.\\nIf there is no element at that position, the result is undefined.\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.","name":"codePointAt","required":true,"type":{"name":"(pos: number) => number"}},"includes":{"defaultValue":null,"description":"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.","name":"includes","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"endsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nendPosition \u2013 length(this). Otherwise returns false.","name":"endsWith","required":true,"type":{"name":"(searchString: string, endPosition?: number) => boolean"}},"normalize":{"defaultValue":null,"description":"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"\\n@param form Applicable values: \\"NFC\\", \\"NFD\\", \\"NFKC\\", or \\"NFKD\\", If not specified default\\nis \\"NFC\\"","name":"normalize","required":true,"type":{"name":"{ (form: \\"NFC\\" | \\"NFD\\" | \\"NFKC\\" | \\"NFKD\\"): string; (form?: string): string; }"}},"repeat":{"defaultValue":null,"description":"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append","name":"repeat","required":true,"type":{"name":"(count: number) => string"}},"startsWith":{"defaultValue":null,"description":"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\nposition. Otherwise returns false.","name":"startsWith","required":true,"type":{"name":"(searchString: string, position?: number) => boolean"}},"anchor":{"defaultValue":null,"description":"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name","name":"anchor","required":true,"type":{"name":"(name: string) => string"}},"big":{"defaultValue":null,"description":"Returns a <big> HTML element","name":"big","required":true,"type":{"name":"() => string"}},"blink":{"defaultValue":null,"description":"Returns a <blink> HTML element","name":"blink","required":true,"type":{"name":"() => string"}},"bold":{"defaultValue":null,"description":"Returns a <b> HTML element","name":"bold","required":true,"type":{"name":"() => string"}},"fixed":{"defaultValue":null,"description":"Returns a <tt> HTML element","name":"fixed","required":true,"type":{"name":"() => string"}},"fontcolor":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the color attribute value","name":"fontcolor","required":true,"type":{"name":"(color: string) => string"}},"fontsize":{"defaultValue":null,"description":"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value","name":"fontsize","required":true,"type":{"name":"{ (size: number): string; (size: string): string; }"}},"italics":{"defaultValue":null,"description":"Returns an <i> HTML element","name":"italics","required":true,"type":{"name":"() => string"}},"link":{"defaultValue":null,"description":"Returns an <a> HTML element and sets the href attribute value","name":"link","required":true,"type":{"name":"(url: string) => string"}},"small":{"defaultValue":null,"description":"Returns a <small> HTML element","name":"small","required":true,"type":{"name":"() => string"}},"strike":{"defaultValue":null,"description":"Returns a <strike> HTML element","name":"strike","required":true,"type":{"name":"() => string"}},"sub":{"defaultValue":null,"description":"Returns a <sub> HTML element","name":"sub","required":true,"type":{"name":"() => string"}},"sup":{"defaultValue":null,"description":"Returns a <sup> HTML element","name":"sup","required":true,"type":{"name":"() => string"}},"__@iterator":{"defaultValue":null,"description":"Iterator","name":"__@iterator","required":true,"type":{"name":"() => IterableIterator<string>"}},"padStart":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padStart","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"padEnd":{"defaultValue":null,"description":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\nIf this string is too long, it will be truncated and the left-most part will be applied.\\nThe default value for this parameter is \\" \\" (U+0020).","name":"padEnd","required":true,"type":{"name":"(maxLength: number, fillString?: string) => string"}},"trimLeft":{"defaultValue":null,"description":"Removes whitespace from the left end of a string.","name":"trimLeft","required":true,"type":{"name":"() => string"}},"trimRight":{"defaultValue":null,"description":"Removes whitespace from the right end of a string.","name":"trimRight","required":true,"type":{"name":"() => string"}}}}]},{"key":"packages/redux-model/__tests__/createModelSamples/testCreateModelFail.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testCreateModelOK.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testCreateModelStateReadOnlyFail.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testCreateModelStateReadOnlyOK.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testCreateModelTYPESFail.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testCreateModelTYPESOK.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testPutCallInModelFail.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testPutCallInModelOK.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testPutCallOutModelFail.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testPutCallOutModelOK.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testPutCallWithOverloadFail.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testPutCallWithOverloadOK.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testWithEffectsPutAndCallFail.ts","value":[]},{"key":"packages/redux-model/__tests__/createModelSamples/testWithEffectsPutAndCallOK.ts","value":[]},{"key":"packages/use-model/__tests__/useModelSamples/testLocalModelFail.ts","value":[]},{"key":"packages/use-model/__tests__/useModelSamples/testLocalModelOK.ts","value":[]},{"key":"packages/use-model/__tests__/useModelSamples/testMMFail.ts","value":[]},{"key":"packages/use-model/__tests__/useModelSamples/testMMOK.ts","value":[]},{"key":"packages/use-model/__tests__/useModelSamples/testUseModelFail.ts","value":[]},{"key":"packages/use-model/__tests__/useModelSamples/testUseModelOK.ts","value":[]},{"key":"packages/typescript-type-tester/__tests__/samples/error.ts","value":[]},{"key":"packages/model-factory/src/types/effects/call.ts","value":[]},{"key":"packages/model-factory/src/types/effects/put.ts","value":[]},{"key":"packages/model-factory/src/types/model/effects.ts","value":[]},{"key":"packages/model-factory/src/types/model/reducer.ts","value":[]},{"key":"packages/model-factory/lib/types/effects/call.d.ts","value":[]},{"key":"packages/model-factory/lib/types/effects/put.d.ts","value":[]},{"key":"packages/model-factory/lib/types/model/effects.d.ts","value":[]},{"key":"packages/model-factory/lib/types/model/reducer.d.ts","value":[]}]}')},"./.docz/app/index.jsx":function(e,t,n){"use strict";n.r(t);var a=n("./node_modules/react/index.js"),r=n.n(a),i=n("./node_modules/react-dom/index.js"),s=n.n(i),o=n("./node_modules/docz/dist/index.esm.js"),l=n("./node_modules/docz-theme-default/dist/index.esm.js"),u={"packages/actions/README.mdx":function(){return Promise.all([n.e(0),n.e(2)]).then(n.bind(null,"./packages/actions/README.mdx"))},"packages/ajax/README.mdx":function(){return Promise.all([n.e(0),n.e(3)]).then(n.bind(null,"./packages/ajax/README.mdx"))},"packages/async/README.mdx":function(){return Promise.all([n.e(0),n.e(4)]).then(n.bind(null,"./packages/async/README.mdx"))},"packages/event/README.mdx":function(){return Promise.all([n.e(0),n.e(6)]).then(n.bind(null,"./packages/event/README.mdx"))},"packages/jest-config/README.mdx":function(){return Promise.all([n.e(0),n.e(7)]).then(n.bind(null,"./packages/jest-config/README.mdx"))},"packages/model/README.mdx":function(){return Promise.all([n.e(0),n.e(9)]).then(n.bind(null,"./packages/model/README.mdx"))},"packages/model-factory/README.mdx":function(){return Promise.all([n.e(0),n.e(8)]).then(n.bind(null,"./packages/model-factory/README.mdx"))},"packages/event-center/README.mdx":function(){return Promise.all([n.e(0),n.e(5)]).then(n.bind(null,"./packages/event-center/README.mdx"))},"packages/redux-model/README.mdx":function(){return Promise.all([n.e(0),n.e(10)]).then(n.bind(null,"./packages/redux-model/README.mdx"))},"packages/types/README.mdx":function(){return Promise.all([n.e(0),n.e(11)]).then(n.bind(null,"./packages/types/README.mdx"))},"packages/typescript-config/README.mdx":function(){return Promise.all([n.e(0),n.e(12)]).then(n.bind(null,"./packages/typescript-config/README.mdx"))},"packages/use-model/README.mdx":function(){return Promise.all([n.e(0),n.e(13)]).then(n.bind(null,"./packages/use-model/README.mdx"))},"packages/utils/README.mdx":function(){return Promise.all([n.e(0),n.e(14)]).then(n.bind(null,"./packages/utils/README.mdx"))}},c=n("./.docz/app/db.json"),d=function(){return r.a.createElement(l.a,{linkComponent:o.b,db:c},r.a.createElement(o.e,{imports:u}))},p=[],h=[],m=function(){return p.forEach((function(e){return e&&e()}))},f=function(){return h.forEach((function(e){return e&&e()}))},g=document.querySelector("#root");!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:d;m(),s.a.render(r.a.createElement(e,null),g,f)}(d)},0:function(e,t,n){e.exports=n("./.docz/app/index.jsx")}});
//# sourceMappingURL=app.ce3dafd3f930766622fe.js.map
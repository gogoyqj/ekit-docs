(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"./packages/use-model/README.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return c}));var o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/esm.js")),a={};function c(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(s.b)("wrapper",Object.assign({},a,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"use-model"},"Use Model"),Object(s.b)("p",null,"Tkit Hooks Model \u5c01\u88c5\u3002"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{}),"npm i -S @ekit/use-model\n")),Object(s.b)("h2",{id:"mm"},"MM"),Object(s.b)("p",null,"\u901a\u8fc7 MM \u521b\u5efa\u96c6\u6210\u4e86 Immer \u5c40\u90e8 Hooks Model\u3002\u901a\u8fc7 M \u521b\u5efa\u672a\u96c6\u6210 Immer \u7684\u7248\u672c\u3002"),Object(s.b)("h2",{id:"--\u793a\u4f8b"},"- \u793a\u4f8b"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"import { Tction, MM, M } from '@ekit/use-model';\n\nexport const UserModel = MM({\n  namespace: 'test',\n  state: {\n    username: ''\n  },\n  reducers: {\n    doRename: (state, action: Tction<{ username: string }>) => {\n      state.username = action.payload.username;\n    }\n  },\n  effects: {\n    doFetchName: async ({ tPut }, action: Tction<{ time: number }>): Promise<{}> => {\n      const username = await new Promise((rs) => rs(`me${action.payload.time}`));\n      return tPut(UserModel.actions.doRename, { username });\n    }\n  }\n});\n")),Object(s.b)("h2",{id:"usemodel"},"useModel"),Object(s.b)("p",null,"useModel Hooks\uff0c\u6d88\u8d39 Hooks Model\u3002"),Object(s.b)("h2",{id:"--\u793a\u4f8b-1"},"- \u793a\u4f8b"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-tsx"}),"import { useModel, bindDispatchToAction } from '@ekit/use-model';\n\nconst MySFCComponent = (props) => {\n  const [store, actions] = useModel(UserModel, props.data);\n  return (\n    <button onClick={() => actions.doFetchName({ time: 2 })}>{store.userModel.username}</button>\n  );\n};\n")),Object(s.b)("h2",{id:"\u8c03\u8bd5\u5de5\u5177"},"\u8c03\u8bd5\u5de5\u5177"),Object(s.b)("p",null,"\u5f00\u542f Hooks Model \u5f00\u53d1\u9636\u6bb5\u8fd0\u884c\u65e5\u5fd7\u6253\u5370:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"window.__TKIT_USE_MODEL_LOGGER__ = console.log;\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"packages/use-model/README.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=packages-use-model-readme.ce3dafd3f930766622fe.js.map
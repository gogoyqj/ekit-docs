(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"./packages/redux-model/README.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return o}));var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/esm.js")),c={};function o(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object.assign({},c,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"redux-model"},"Redux Model"),Object(s.b)("p",null,"Tkit \u5168\u5c40 Redux Model \u5c01\u88c5\u3002"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{}),"npm i -S @ekit/redux-model\n")),Object(s.b)("h2",{id:"cm"},"CM"),Object(s.b)("p",null,"\u901a\u8fc7 CM \u521b\u5efa\u96c6\u6210 Immer \u7684\u5168\u5c40 Redux Model\u3002\u901a\u8fc7 createModel \u521b\u5efa\u672a\u96c6\u6210 Immer \u7684\u5168\u5c40 Redux Model\u3002"),Object(s.b)("h2",{id:"--\u793a\u4f8b"},"- \u793a\u4f8b"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"import createModel, { Tction, CM } from '@ekit/redux-model';\n\nexport const userModelState = {\n  name: ''\n};\n\nexport const UserModel = CM({\n  state: userModelState,\n  namespace: 'cmModel',\n  reducers: {\n    /** \u5199\u5165\u540d\u5b57 */\n    doSetName: (state, action: Tction<string>) => {\n      state.name = action.payload;\n    }\n  },\n  effects: {}\n});\n")),Object(s.b)("h2",{id:"--state"},"- State"),Object(s.b)("p",null,"\u901a\u8fc7 Tkit Cli \u521b\u5efa Model \u65f6\u4f1a\u81ea\u52a8\u5c06 Model State\u3001Actions\u3001Reducers\u3001Sagas \u6ce8\u5165\u5230 Feature \u54cd\u5e94\u7684\u5165\u53e3\u6587\u4ef6\u3002"),Object(s.b)("p",null,"\u6bd4\u5982\uff0cState \u5165\u53e3\u6587\u4ef6\uff1a"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"import { userModelState } from './userModel';\n\nconst initialState = {\n  userModel: userModelState\n};\n")),Object(s.b)("h2",{id:"--effects"},"- Effects"),Object(s.b)("p",null,"\u901a\u8fc7 Model \u7684 effects \u5c5e\u6027\u5b9a\u4e49\u526f\u4f5c\u7528\u3002"),Object(s.b)("h2",{id:"---tput-tcall"},"-- tPut, tCall"),Object(s.b)("p",null,"\u4f7f\u7528 TypeSafe tPut\u3001tNBPut\u3001tCall \u66ff\u4ee3 Redux Saga \u539f\u751f\u7684 put\u3001call\u3002"),Object(s.b)("p",null,"tPut \u662f\u963b\u585e\u7684\uff0c\u4f1a\u7b49\u5230\u89e6\u53d1 action \u7ed3\u675f\u540e\uff0c\u518d\u8fdb\u5165\u4e0b\u4e00\u6b65\uff1btNBPut \u662f\u975e\u963b\u585e\u7684\uff0c\u4e0d\u4f1a\u7b49\u5f85\u88ab\u89e6\u53d1 action \u6267\u884c\u5b8c\u6bd5\u3002"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"  import { TkitUtils as Utils } from '@ekit/types';\n\n  const model = CM({\n    effects: {\n      *doXX({ tPut, tCall }): Iterator<{}, any, any> {\n        yield tCall(effect, args: typed)\n        const data: Utils.GetReturnTypeOfAsyncFun<typeof effect> = yield tCall(effect, args);\n        yield tPut(model.action.doYY, args: typed)\n      }\n    }\n  })\n")),Object(s.b)("h2",{id:"---with-async"},"-- With Async"),Object(s.b)("p",null,"Tkit Redux Model \u5b9e\u73b0\u4e86\u53cb\u597d\u7684\u63a7\u5236\u526f\u4f5c\u7528\u5f00\u59cb\u3001\u6210\u529f\u3001\u5931\u8d25\u4ea4\u4e92\u6548\u679c\u7684\u534f\u8bae\u3002\u7ed3\u5408 @ekit/async \u4e00\u8d77\u4f7f\u7528\uff0c\u63a7\u5236\u5168\u5c40\u7684 Loading \u6548\u679c\u3001\u63d0\u793a\u4fe1\u606f\uff0c\u63d0\u5347\u5f00\u53d1\u6548\u7387\u3002"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"{\n  effects: {\n    /** \u663e\u793a\u5168\u5c40\u7684loading\u6548\u679c */\n    doSomethingWithLoading: [\n      function*({ tPut, tCall }, action: Tction<{ id: string }>): Iterator<{}, any, any> {\n        /** \u629b\u51fa\u5168\u5c40\u9519\u8bef\u4fe1\u606f */\n        throw '\u64cd\u4f5c\u5931\u8d25';\n        /** \u629b\u51fa\u5168\u5c40\u6210\u529f\u4fe1\u606f */\n        return '\u64cd\u4f5c\u6210\u529f';\n      },\n      {\n        type: 'takeEvery', // it all depends\n        loading: true\n      }\n    ],\n    *doSomethingAsync({ tPut, tCall }, action: Tction<{ id: string }>): Iterator<{}, any, any> {\n      /**  \u629b\u51fa\u5168\u5c40\u9519\u8bef\u4fe1\u606f */\n      throw '\u64cd\u4f5c\u5931\u8d25';\n    }\n  }\n}\n")),Object(s.b)("p",null,"\u6240\u6709\u6765\u81ea Tkit Redux Model \u7684 Effects\uff0c\u5728\u4f20\u9012\u7ed9 @ekit/async \u7684 Payload \u5185\u6dfb\u52a0\u6807\u8bc6\uff1a"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"{\n  channel: '@ekit/model/effect';\n}\n")),Object(s.b)("h3",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"import { CM, Tction }  from '@ekit/redux-model';\nimport otherModel from './otherModel';\n\nconst myModel = CM({\n  effects: *doSomethingAsync({ namespace, put, tPut }, action: Tction<{ username: string }>) {\n    // \u89e6\u53d1\u5176\u4ed6 model action\n    // way 1, rec\n    yield tPut(otherModel.actions.actionsNameA, { username: '' });\n    // way 2\n    yield put({ type: otherModel.TYPES.actionsNameA, payload: { username: '' } });\n\n    // \u51fa\u53d1\u672c model action\n    // way 1, rec\n    yield tPut(myModel.actions.actionsNameA, { username: '' });\n    // way 2\n    yield put({ type: myModel.TYPES.actionsNameA, payload: { username: '' } });\n    // way 3\n    yield put({ type: `${namespace}/actionsNameA`, payload: { username: '' } });\n  }\n})\n")),Object(s.b)("h2",{id:"--promisified-actions"},"- Promisified Actions"),Object(s.b)("p",null,"Tkit Redux Model \u652f\u6301 Effects \u6d3e\u751f Actions \u88ab\u89e6\u53d1\u65f6\u8fd4\u56de Promise\u3002"),Object(s.b)("p",null,"\u914d\u7f6e Redux Store \u4e2d\u95f4\u4ef6\uff1a"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"import { promiseMiddleware } from '@ekit/model';\n\n// \u5728 sagaMiddleware \u524d\u6dfb\u52a0 promiseMiddleware\nconst middlewares: Middleware[] = [promiseMiddleware, sagaMiddleware, routerMiddleware(history)];\n")),Object(s.b)("p",null,"Connected\uff1a"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-tsx"}),'<div\n  className="k-layout-header"\n  onClick={async () => {\n    try {\n      const res = await props.actions.doUserInfo();\n      console.log(res);\n    } catch (e) {}\n  }}\n>\n  test\n</div>\n')),Object(s.b)("h2",{id:"--async--await-effects"},"- Async & Await Effects"),Object(s.b)("p",null,"Tkit Redux Model \u652f\u6301 Async \u548c Generator \u6df7\u7528\uff0c\u5728 Async Effect \u5185\u53ea\u80fd\u4f7f\u7528 asyncSelect\u3001asyncPut\u3001asyncNBPut\u3002"),Object(s.b)("p",null,"asyncPut \u662f\u963b\u585e\u7684\uff0c\u4f1a\u7b49\u5230\u89e6\u53d1 action \u7ed3\u675f\u540e\uff0c\u518d\u8fdb\u5165\u4e0b\u4e00\u6b65\uff1basyncNBPut \u662f\u975e\u963b\u585e\u7684\uff0c\u4e0d\u4f1a\u7b49\u5f85\u88ab\u89e6\u53d1 action \u6267\u884c\u5b8c\u6bd5\u3002"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"{\n  effects: {\n    doUserInfo: [\n      function*({ tCall, tPut, select }): Iterator<{}, UserInfoResult | undefined, any> {\n        // \u4f7f\u7528 select, tPut, tCall\n        const userInfo = yield select(selectUserInfo);\n        return userInfo;\n      },\n      {\n        type: 'takeLatest'\n      }\n    ],\n    async doAjax({ asyncSelect, asyncPut }) {\n      // \u5fc5\u987b\u4f7f\u7528 asyncSelect asyncPut\n      const lastUserInfo = await asyncSelect(selectUserInfo);\n      const userInfo = await asyncPut(model.actions.doUserInfo);\n      return new Promise<number>(rs => setTimeout(() => rs(1), 500));\n    },\n    doHaha: [\n      async () => {\n        return Promise.resolve({ name: 200 });\n      },\n      {\n        type: 'takeLatest'\n      }\n    ]\n  }\n}\n")))}o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"packages/redux-model/README.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=packages-redux-model-readme.ce3dafd3f930766622fe.js.map